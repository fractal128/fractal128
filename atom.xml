<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fractal128 ： We are OIers]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.fractal128.tk/"/>
  <updated>2015-09-30T14:00:52.000Z</updated>
  <id>http://blog.fractal128.tk/</id>
  
  <author>
    <name><![CDATA[fractal128]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[摇曳的九月。]]></title>
    <link href="http://blog.fractal128.tk/2015/09/30/201509/"/>
    <id>http://blog.fractal128.tk/2015/09/30/201509/</id>
    <published>2015-09-30T13:24:53.000Z</published>
    <updated>2015-09-30T14:00:52.000Z</updated>
    <content type="html"><![CDATA[<p>Sept. 30<br><a id="more"></a><br>九月快过了。是时候写的什么总结什么的了。。。</p>
<ul>
<li><p>y小姐去Germany了，感觉班里少了点以前早已成为习惯的东西。。。看了她写的博文，是有点小感动。<a href="http://user.qzone.qq.com/814218105" target="_blank" rel="external">🔗</a></p>
</li>
<li><p>msc去北京了，背着我们，大概是要去读中关村文理学院了。</p>
</li>
<li><p>fj去白马湖了，剩下几个不知道该怎么办的OIers，迎来了新的一个人和一个新的OJ，高一强得爆炸，坚持别退队最要紧。。。</p>
</li>
<li><p>马上的考试：各种学考，以及NOIP，也不知道Wen还搞不搞信奥。</p>
</li>
</ul>
<p>这就是九月，纠结个不停，但还是很开心和同学们一起的，度过这个摇曳的九月。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=108164&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>Sept. 30<br>]]>
    
    </summary>
    
      <category term="随记" scheme="http://blog.fractal128.tk/categories/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初等数论（二）]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/number-theory2/"/>
    <id>http://blog.fractal128.tk/2015/09/27/number-theory2/</id>
    <published>2015-09-27T07:11:45.000Z</published>
    <updated>2015-09-30T11:32:47.000Z</updated>
    <content type="html"><![CDATA[<p>中秋快乐！<br>继续填坑喽。。。<br><a id="more"></a></p>
<h1 id="初等数论">初等数论</h1><h2 id="数论筛法">数论筛法</h2><h3 id="Eraosthens筛法">Eraosthens筛法</h3><p>基本筛法，一般情况下都不会被卡，时间复杂度Θ(nlogn)[我不会算。。。</p>
<h3 id="线性筛法(奇性函数)">线性筛法(奇性函数)</h3><p>时间复杂度Θ(n)[还是不会算。。。<br>直接放代码。。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=i;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!mindiv[i])prime[++tot]=mindiv[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=tot&amp;&amp;prime[j]&lt;=mindiv[i]&amp;&amp;(k=prime[j]*i)&lt;=n;j++)</span><br><span class="line">    mindiv[k]=prime[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//mindiv[k]表示k的最小质因数，这样保证了每一个数只会被他的最小质因数筛掉一遍。</span></span><br></pre></td></tr></table></figure></p>
<h3 id="常用性质">常用性质</h3><p>n以内素数个数O(n/ln(n))</p>
<h2 id="素数测试">素数测试</h2><h3 id="Fermat素数测试">Fermat素数测试</h3><h4 id="费马小定理">费马小定理</h4><blockquote>
<p>对于素数p与任意与p互素的整数a满足a(p-1) ≡1(mod p)</p>
</blockquote>
<h4 id="证明">证明</h4><blockquote><p>这个证明就有点麻烦了。<br>    首先我们证明这样一个结论：如果p是一个素数的话，那么对任意一个小于p的正整数a，a, 2a, 3a, …, (p-1)a除以p的余数正好是一个1到p-1的排列。例如，5是素数，3, 6, 9, 12除以5的余数分别为3, 1, 4, 2，正好就是1到4这四个数。<br>    反证法，假如结论不成立的话，那么就是说有两个小于p的正整数m和n使得na和ma除以p的余数相同。不妨假设n&gt;m，则p可以整除a(n-m)。但p是素数，那么a和n-m中至少有一个含有因子p。这显然是不可能的，因为a和n-m都比p小。<br>    用同余式表述，我们证明了：<br>(p-1)! ≡ a * 2a * 3a * … * (p-1)a (mod p)<br>    也即：<br>(p-1)! ≡ (p-1)! * a^(p-1) (mod p)<br>    两边同时除以(p-1)!，就得到了我们的最终结论：<br>1 ≡ a^(p-1) (mod p)</p><footer><strong>Matrix67</strong><cite><a href="http://www.matrix67.com/blog/archives/234" target="_blank" rel="external">数论部分第一节：素数与素性测试</a></cite></footer></blockquote>
<h4 id="限制与伪素数">限制与伪素数</h4><blockquote><p>谈到Fermat小定理，数学历史上有很多误解。很长一段时间里，人们都认为Fermat小定理的逆命题是正确的，并且有人亲自验证了a=2, p&lt;300的所有情况。国外甚至流传着一种说法，认为中国在孔子时代就证明了这样的定理：如果n整除2^(n-1)-1，则n就是素数。后来某个英国学者进行考证后才发现那是因为他们翻译中国古文时出了错。1819年有人发现了Fermat小定理逆命题的第一个反例：虽然2的340次方除以341余1，但341=11*31。后来，人们又发现了561, 645, 1105等数都表明a=2时Fermat小定理的逆命题不成立。虽然这样的数不多，但不能忽视它们的存在。于是，人们把所有能整除2^(n-1)-1的合数n叫做伪素数(pseudoprime)，意思就是告诉人们这个素数是假的。</p>
<p>不满足2^(n-1) mod n = 1的n一定不是素数；如果满足的话则多半是素数。这样，一个比试除法效率更高的素性判断方法出现了：制作一张伪素数表，记录某个范围内的所有伪素数，那么所有满足2^(n-1) mod n = 1且不在伪素数表中的n就是素数。之所以这种方法更快，是因为我们可以使用二分法快速计算2^(n-1) mod n 的值，这在计算机的帮助下变得非常容易；在计算机中也可以用二分查找有序数列、Hash表开散列、构建Trie树等方法使得查找伪素数表效率更高。</p>
<p>有人自然会关心这样一个问题：伪素数的个数到底有多少？换句话说，如果我只计算2^(n-1) mod n的值，事先不准备伪素数表，那么素性判断出错的概率有多少？研究这个问题是很有价值的，毕竟我们是OIer，不可能背一个长度上千的常量数组带上考场。统计表明，在前10亿个自然数中共有50847534个素数，而满足2^(n-1) mod n = 1的合数n有5597个。这样算下来，算法出错的可能性约为0.00011。这个概率太高了，如果想免去建立伪素数表的工作，我们需要改进素性判断的算法。  </p>
<p>最简单的想法就是，我们刚才只考虑了a=2的情况。对于式子a^(n-1) mod n，取不同的a可能导致不同的结果。一个合数可能在a=2时通过了测试，但a=3时的计算结果却排除了素数的可能。于是，人们扩展了伪素数的定义，称满足a^(n-1) mod n = 1的合数n叫做以a为底的伪素数(pseudoprime to base a)。前10亿个自然数中同时以2和3为底的伪素数只有1272个，这个数目不到刚才的1/4。这告诉我们如果同时验证a=2和a=3两种情况，算法出错的概率降到了0.000025。容易想到，选择用来测试的a越多，算法越准确。通常我们的做法是，随机选择若干个小于待测数的正整数作为底数a进行若干次测试，只要有一次没有通过测试就立即把这个数扔回合数的世界。这就是Fermat素性测试。</p>
<p>人们自然会想，如果考虑了所有小于n的底数a，出错的概率是否就可以降到0呢？没想到的是，居然就有这样的合数，它可以通过所有a的测试（这个说法不准确，详见我在地核楼层的回复）。Carmichael第一个发现这样极端的伪素数，他把它们称作Carmichael数。你一定会以为这样的数一定很大。错。第一个Carmichael数小得惊人，仅仅是一个三位数，561。前10亿个自然数中Carmichael数也有600个之多。Carmichael数的存在说明，我们还需要继续加强素性判断的算法。</p><footer><strong>Matrix67</strong><cite><a href="http://www.matrix67.com/blog/archives/234" target="_blank" rel="external">数论部分第一节：素数与素性测试</a></cite></footer></blockquote>
<h3 id="Miller-Rabin_素性测试与二次探测">Miller-Rabin 素性测试与二次探测</h3><blockquote>
<p>Miller-Rabin算法是目前主流的基于概率的素数测试算法，在构建密码安全体系中占有重要的地位。通过比较各种素数测试算法和对Miller-Rabin算法进行的仔细研究，证明在计算机中构建密码安全体系时， Miller-Rain算法是完成素数测试的最佳选择。通过对Miller-Rabin 算法底层运算的优化，可以取得较以往实现更好的性能。</p>
</blockquote>
<p>以上基本没用。。下面是该算法的一些引理</p>
<blockquote>
<p>二次探测引理：若p为奇素数，方程x^2≡1(mod p)的解只有±1<br>long long 范围内的所有整数均能用前9个素数进行准确的二次探测</p>
</blockquote>
<h3 id="实践">实践</h3><p><a href="http://codevs.cn/problem/1702/" target="_blank" rel="external">codevs1702</a><br>一个数，他是素数么？<br>设他为P满足(P&lt;=2^63-1)</p>
<p>Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n=<span class="number">16</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">17</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,<span class="number">53</span>&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll x;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=a; ans%=MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        a=(a+a)%MOD;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Yes"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="质因数分解法">质因数分解法</h2><h3 id="O(sqrt(n))暴力分解">O(sqrt(n))暴力分解</h3><h3 id="Pollard-Rho椭圆曲线分解法">Pollard-Rho椭圆曲线分解法</h3><p>这坑太大了，有点填不动该怎么办。。。</p>
<p>经过一晚上的学习，终于<del>还是没懂</del><br>其实是找到了一个关于pollard-rho算法的很好的<a href="http://wenku.baidu.com/link?url=T5oeGiGSqfaurODiXMoErWJS1G8z4M0pnXf24x-gqgxswPyNmxdLdd2UByJPVYAqW-991k5UjJIeABtzQlu1MOGZ4072fQPeBopHiGiPm7m" target="_blank" rel="external">Tutorial</a><br>牵扯到圆锥曲线的方面<ruby>不讲了<rp> (</rp><rt>tài nán liǎo</rt><rp>) </rp></ruby>，有兴趣的可以自行深入研究，然后我们了解一下pollard-rho的原理。<br>据研究可得(具体可以看那个tutorial)，当我们在一定范围内随机数的时候，随记一些数并使用它们的差值作为结果效果会远远优于朴素的枚举法［生日悖论］。<br>利用以上性质我们可以设计一种算法，来随机枚举一个可以整除待分解大质数的数，具体如下。</p>
<p>我们使用一个函数来生成伪随机数。<br>换句话说,我们不断地使用函数 𝑓 来生成(看上去或者说感觉上像的)随机数。 并不是所有的函都能够这样做,但是有一个神奇的函数可以。它就是</p>
<blockquote>
<p>$$ f(x)=x^2+c$$</p>
</blockquote>
<p>( 我们可以自己指定𝑎,也可以用 rand()随即函数来生成,这不是重点 )<br>我们从𝑥1 = 2 或者其他数开始,让𝑥2 = 𝑓(𝑥1), 𝑥3 = 𝑓(𝑥2), … … 生成规则为𝑥𝑛+1 = 𝑓(𝑥𝑛)</p>
<p>具体实现和详细过程都在那份PDF中［我只是个搬运工。。。</p>
<p>自己写的bzoj3667, 为什么T了。。。不懂，以后再改吧。</p>
<p>错误的Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NN=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">61</span>,<span class="number">24251</span>&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line">ll x;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&lt;y) swap(x,y);</span><br><span class="line">    ll r = x % y;</span><br><span class="line">    <span class="keyword">while</span> (r!=<span class="number">0</span>)&#123;</span><br><span class="line">        ll tmp = r;</span><br><span class="line">        r = y % r;</span><br><span class="line">        x = y;</span><br><span class="line">        y = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll p)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll tmp=(a*b-(ll)((<span class="keyword">long</span> <span class="keyword">double</span>)a/p*b+<span class="number">1e-8</span>)*p);</span><br><span class="line">    <span class="keyword">return</span> tmp&lt;<span class="number">0</span>?tmp+p:tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MR</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=NN; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (mul(x,x,y)+rand()+<span class="number">12894</span>)%y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Prho</span><span class="params">(ll N)</span></span>&#123;</span><br><span class="line">    ll p=<span class="number">1</span>,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (MR(N)==<span class="number">1</span>) <span class="keyword">return</span> N;</span><br><span class="line">    ll a=<span class="number">2</span>,b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        a=f(a,N);</span><br><span class="line">        b=f(f(b,N),N);</span><br><span class="line">        <span class="keyword">if</span> (a==b) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (a&gt;b) t=a-b; <span class="keyword">else</span> t=b-a;</span><br><span class="line">        p=gcd(t,N);</span><br><span class="line">        <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">return</span> max(Prho(p),Prho(N/p)); <span class="keyword">else</span> <span class="keyword">return</span> N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        x=read();</span><br><span class="line">        <span class="keyword">if</span> (x==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>); </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Prime"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=Prho(x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>发现我在写f(x)的时候每次都rand()了，这是极端错误的。。。<br>而且情况是这样的，如果在miller-rabin算法中用2,3,7,61,24251,那么会有一个十分厉害的叫做46 856 248 255 981的超强伪素数的存在，OTL</p>
<p>AC的Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NN=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">61</span>,<span class="number">24251</span>&#125;;</span><br><span class="line">ll ran;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line">ll x;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&lt;y) swap(x,y);</span><br><span class="line">    ll r = x % y;</span><br><span class="line">    <span class="keyword">while</span> (r!=<span class="number">0</span>)&#123;</span><br><span class="line">        ll tmp = r;</span><br><span class="line">        r = y % r;</span><br><span class="line">        x = y;</span><br><span class="line">        y = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll p)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll tmp=(a*b-(ll)((<span class="keyword">long</span> <span class="keyword">double</span>)a/p*b+<span class="number">1e-8</span>)*p);</span><br><span class="line">    <span class="keyword">return</span> tmp&lt;<span class="number">0</span>?tmp+p:tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MR</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">46856248255981</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=NN; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (mul(x,x,y)+ran+<span class="number">12894</span>)%y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Prho</span><span class="params">(ll N)</span></span>&#123;</span><br><span class="line">    ll p=<span class="number">1</span>,t=<span class="number">0</span>;</span><br><span class="line">    ll a=<span class="number">2</span>,b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        a=f(a,N);</span><br><span class="line">        b=f(f(b,N),N);</span><br><span class="line">        <span class="keyword">if</span> (a==b) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (a&gt;b) t=a-b; <span class="keyword">else</span> t=b-a;</span><br><span class="line">        p=gcd(t,N);</span><br><span class="line">        <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">4</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    ll p=x;</span><br><span class="line">    <span class="keyword">while</span> (p==x||p==<span class="number">1</span>)&#123;</span><br><span class="line">        ran=rand()+<span class="number">19990128</span>; ran%=x;</span><br><span class="line">        p=Prho(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max(work(p),work(x/p));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        x=read();</span><br><span class="line">        <span class="keyword">if</span> (x==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>); </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Prime"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=work(x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>data</strong><br><a href="http://pan.baidu.com/s/1o6064WU" target="_blank" rel="external">http://pan.baidu.com/s/1o6064WU</a></p>]]></content>
    <summary type="html">
    <![CDATA[<p>中秋快乐！<br>继续填坑喽。。。<br>]]>
    
    </summary>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vijos1382：寻找主人]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/vijos1382/"/>
    <id>http://blog.fractal128.tk/2015/09/27/vijos1382/</id>
    <published>2015-09-26T17:59:53.000Z</published>
    <updated>2015-09-27T04:10:01.000Z</updated>
    <content type="html"><![CDATA[<p>对于刚学的最小表示法的巩固。。。<br><a id="more"></a><br>题目：<a href="https://vijos.org/p/1382" target="_blank" rel="external">vijos p1382</a></p>
<h2 id="Description">Description</h2><p>有一天，袁☆同学绵了一条价值连城宝石项链，但是，一个严重的问题是，他竟然忘记了项链的主人是谁！在得知此事后，很多人向☆同学发来了很多邮件，都说项链是自己的，要求他归还（显然其中最多只有一个人说了真话）。 ☆同学要求每个人都写了一段关于自己项链的描述： 项链上的宝石用数字0至9来标示。一个对于项链的表示就是从项链的某个宝石开始，顺指针绕一圈，沿途记下经过的宝石，比如如下项链： 1-2-3-4 　　它的可能的四种表示是0123、1230、2301、3012。<br>袁☆同学现在心急如焚，于是他找到了你，希望你能够编一个程序，判断两个给定的描述是否代表同一个项链（注意，项链是不会翻转的）。</p>
<p>给定两个项链的表示，判断他们是否可能是一条项链。</p>
<h2 id="Solution">Solution</h2><p>对于比较循环同构的情况，直接对其进行最小表示法，比较他们的最小表示即可。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p1,p2,t,len;</span><br><span class="line"><span class="keyword">char</span> ch1[maxn],ch2[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minR</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;n&amp;&amp;j&lt;n&amp;&amp;k&lt;n)&#123;</span><br><span class="line">        t=a[(i+k)%n]-a[(j+k)%n];</span><br><span class="line">        <span class="keyword">if</span> (t==<span class="number">0</span>)&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (t&gt;<span class="number">0</span>) i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;<span class="number">0</span>) j+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i==j) i++;</span><br><span class="line">            k=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch1);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch2);</span><br><span class="line">    len=<span class="built_in">strlen</span>(ch1);</span><br><span class="line">    p1=minR(ch1,len);</span><br><span class="line">    p2=minR(ch2,len);</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        <span class="keyword">if</span> (ch1[(i+p1)%len]!=ch2[(i+p2)%len])&#123;</span><br><span class="line">            flag=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,ch1[(i+p1)%len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>对于刚学的最小表示法的巩固。。。<br>]]>
    
    </summary>
    
      <category term="vijos" scheme="http://blog.fractal128.tk/tags/vijos/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/categories/OI/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2882: 工艺]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/bzoj2882/"/>
    <id>http://blog.fractal128.tk/2015/09/27/bzoj2882/</id>
    <published>2015-09-26T17:18:59.000Z</published>
    <updated>2015-09-26T17:37:28.000Z</updated>
    <content type="html"><![CDATA[<p>第一道权限题。<br><a id="more"></a><br>题目链接<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2882" target="_blank" rel="external">戳</a></p>
<h2 id="Description">Description</h2><p>小敏和小燕是一对好朋友。<br>他们正在玩一种神奇的游戏，叫Minecraft。<br>他们现在要做一个由方块构成的长条工艺品。但是方块现在是乱的，而且由于机器的要求，他们只能做到把这个工艺品最左边的方块放到最右边。<br>他们想，在仅这一个操作下，最漂亮的工艺品能多漂亮。<br>两个工艺品美观的比较方法是，从头开始比较，如果第i个位置上方块不一样那么谁的瑕疵度小，那么谁就更漂亮，如果一样那么继续比较第i+1个方块。如果全都一样，那么这两个工艺品就一样漂亮。</p>
<h2 id="Solution">Solution</h2><p>学了一下最小表示法，主要作用是找出循环同构的数据的最小表示。<br>一开始直接看代码有点不懂，后来稍微想了想，差不多明白了［其实这么短，一下就背出来了。。<br>大概思想就是用两个指针选取首位进行比较，如果相同就一直往下比较，当达到了len的长度就说明已经得到了答案。具体请参看代码。</p>
<h2 id="Code">Code</h2><p>ps.这题对presentation有要求，末尾不能有空格。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,p,t;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minR</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;n&amp;&amp;j&lt;n&amp;&amp;k&lt;n)&#123;</span><br><span class="line">        t=a[(i+k)%n]-a[(j+k)%n];</span><br><span class="line">        <span class="keyword">if</span> (t==<span class="number">0</span>)&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (t&gt;<span class="number">0</span>) i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;<span class="number">0</span>) j+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i==j) i++;</span><br><span class="line">            k=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    p=minR();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n-<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[(i+p)%n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[(n-<span class="number">1</span>+p)%n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>第一道权限题。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/categories/OI/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva10635:Prince and Princess]]></title>
    <link href="http://blog.fractal128.tk/2015/09/26/uva10635/"/>
    <id>http://blog.fractal128.tk/2015/09/26/uva10635/</id>
    <published>2015-09-25T18:38:10.000Z</published>
    <updated>2015-09-26T05:26:06.000Z</updated>
    <content type="html"><![CDATA[<p>第一次使用virtual judge，居然交了很多遍代码都没交上去。。。<br><a id="more"></a><br>virtual judge提交<a href="http://acm.hust.edu.cn/vjudge/problem/viewProblem.action?id=19051" target="_blank" rel="external">入口</a></p>
<h2 id="Description">Description</h2><p>英文题面看不懂。。。<br>大概就是求个LCS吧。</p>
<h2 id="Solution">Solution</h2><p>将第二个序列元素在第一个序列中的次序倒序排起来做一遍LIS即可。<br>时间复杂度可降至Θ(nlogn)。<br>举个例子：<br>s1: 5 4 3 5 2<br>s2: 4 2 3 3 5<br>处理后得到的序列则为: 2 5 3 3 4 1<br>所以ans=3</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">1000000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">6500000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn],a[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],fir[maxn],f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T,ans;</span><br><span class="line"><span class="keyword">int</span> n,p,q,num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T); <span class="keyword">int</span> tt=T;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(fir,<span class="number">0</span>,<span class="keyword">sizeof</span>(fir));</span><br><span class="line">        <span class="built_in">memset</span>(nex,<span class="number">0</span>,<span class="keyword">sizeof</span>(nex));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;p,&amp;q);</span><br><span class="line">        p++; q++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=p; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t[i]);</span><br><span class="line">            nex[i]=fir[t[i]]; fir[t[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=q; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            <span class="keyword">int</span> u=fir[x];</span><br><span class="line">            <span class="keyword">while</span> (u)&#123;</span><br><span class="line">                a[++num]=u;</span><br><span class="line">                u=nex[u];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//		for (int i=1; i&lt;=num; i++) cout&lt;&lt;a[i]&lt;&lt;endl;</span></span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n; i++) c[i]=inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> l=<span class="number">0</span>,r=num;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (c[mid]&lt;a[i])&#123;</span><br><span class="line">                    tmp=mid;</span><br><span class="line">                    l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> r=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            f[i]=tmp+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (c[tmp+<span class="number">1</span>]&gt;a[i]) c[tmp+<span class="number">1</span>]=a[i];</span><br><span class="line">            <span class="keyword">if</span> (f[i]&gt;ans) ans=f[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;tt-T&lt;&lt;<span class="string">": "</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>第一次使用virtual judge，居然交了很多遍代码都没交上去。。。<br>]]>
    
    </summary>
    
      <category term="uva" scheme="http://blog.fractal128.tk/tags/uva/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/categories/OI/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1876: [SDOI2009]SuperGCD]]></title>
    <link href="http://blog.fractal128.tk/2015/09/26/bzoj1876/"/>
    <id>http://blog.fractal128.tk/2015/09/26/bzoj1876/</id>
    <published>2015-09-25T18:27:32.000Z</published>
    <updated>2015-09-26T05:16:19.000Z</updated>
    <content type="html"><![CDATA[<p>不会写高精度的我该怎么办呢？<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>Sheng bill有着惊人的心算能力，甚至能用大脑计算出两个巨大的数的GCD（最大公约 数）！因此他经常和别人比赛计算GCD。有一天Sheng bill很嚣张地找到了你，并要求和你比 赛，但是输给Sheng bill岂不是很丢脸！所以你决定写一个程序来教训他。</p>
<h2 id="Solution">Solution</h2><p>裸更相减损术实现［写高精度超时的我只能呵呵。。。</p>
<h2 id="Code">Code</h2><p>写超时了怎么还能贴代码呢？<br>但是看到了一个很厉害的东西(python大法好)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a,b=input(),input()</span><br><span class="line">c=a%b</span><br><span class="line"><span class="keyword">while</span> c!=<span class="number">0L</span>:</span><br><span class="line">    a=b</span><br><span class="line">    b=c</span><br><span class="line">    c=a%b</span><br><span class="line"><span class="keyword">print</span> b</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>不会写高精度的我该怎么办呢？<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初等数论（一）]]></title>
    <link href="http://blog.fractal128.tk/2015/09/18/number-theory1/"/>
    <id>http://blog.fractal128.tk/2015/09/18/number-theory1/</id>
    <published>2015-09-18T11:51:32.000Z</published>
    <updated>2015-09-20T04:47:37.000Z</updated>
    <content type="html"><![CDATA[<p>周四听了一个高一小爷讲了一堆听不懂的数论，虐得体无完肤，我会告诉你我紧张得一下课就跑了吗，真是搞笑了。特此打上自我反省的tag以警醒。找到了暑假上课时QY神犇的课件，好好学。。。<br><a id="more"></a></p>
<h1 id="初等数论">初等数论</h1><h2 id="数论常识">数论常识</h2><ol>
<li>整数／整除／约数</li>
<li>素数／合数</li>
<li>算数基本定理：任何一个大于1的自然数 N,如果N不为质数，那么N可以唯一分解成有限个质数的乘积 N=P1^a1<em>P2^a2\</em>P3^a3……*Pn^an，这里P1&lt;P2&lt;P3……&lt;Pn均为质数，其中指数ai是正整数。</li>
<li>除法／同余</li>
<li>最大公因数／最小公倍数</li>
<li>素数无限定理：证明可采用构造法，将所有已知质数相乘＋1得到不被其他质数所整除的新质数。</li>
<li>互素</li>
<li>进制位</li>
</ol>
<h2 id="欧几里德算法">欧几里德算法</h2><h3 id="辗转相除法">辗转相除法</h3><p>$$ gcd(a,b)=gcd(b,a\%b)$$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> b?gcd(b,a % b):a;&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="更相减损术">更相减损术</h3><p>$$ 1.gcd(a,b)=gcd(a,a-b)$$$$ 2.gcd(2a,2b)=2gcd(a,b)$$$$3.gcd(2a,b)=gcd(a,b)$$<br>我也不知道有什么用，不过我们可以百度一下嘛。。。<br>查到了！BZOJ1876，求高精度gcd,<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1876" target="_blank" rel="external">传送门</a></p>
<h3 id="扩展欧几里德exgcd">扩展欧几里德exgcd</h3><p>使用Qy的一张图便说明问题。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/图片1.png" alt="ORZ(QY)"><br>还有一发神牛的讲课手写代码。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> re=exgcd(b,a%b,x,y);</span><br><span class="line">        <span class="keyword">int</span> tmp=x;</span><br><span class="line">        x=y;</span><br><span class="line">        y=tmp-a/b*y;</span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;exgcd(a,b,x,y)&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">' '</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="裴蜀定理">裴蜀定理</h2><p>裴蜀定理（Bézout’s identity）得名于法国数学家艾蒂安·裴蜀，说明了对任何整数a、b和它们的最大公约数d，关于未知数x和y的线性丢番图方程（称为裴蜀等式）：若a,b是整数,且（a,b)=d，那么对于任意的整数x,y,ax+by都一定是d的倍数，特别地，一定存在整数x,y，使ax+by=d成立。</p>
<p>它的一个重要推论是：a,b互质的充要条件是存在整数x,y使ax+by=1.</p>
<p>它的一个重要推论是：设a1,a2,a3……an为n个整数，d是它们的最大公约数，那么存在整数x1……xn使得x1*a1+x2*a2+…xn*an=d。</p>
<p>证明可由扩展的欧几里得算法直观得到TAT!~[近距离膜拜大爷卖萌]</p>]]></content>
    <summary type="html">
    <![CDATA[<p>周四听了一个高一小爷讲了一堆听不懂的数论，虐得体无完肤，我会告诉你我紧张得一下课就跑了吗，真是搞笑了。特此打上自我反省的tag以警醒。找到了暑假上课时QY神犇的课件，好好学。。。<br>]]>
    
    </summary>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="面壁反省" scheme="http://blog.fractal128.tk/tags/%E9%9D%A2%E5%A3%81%E5%8F%8D%E7%9C%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2127:happiness]]></title>
    <link href="http://blog.fractal128.tk/2015/09/18/bzoj2127/"/>
    <id>http://blog.fractal128.tk/2015/09/18/bzoj2127/</id>
    <published>2015-09-18T10:39:07.000Z</published>
    <updated>2015-09-19T11:34:01.000Z</updated>
    <content type="html"><![CDATA[<p>想了一个礼拜才发现自己忘记了构双向边，也是醉了，一礼拜一道题的龟速也是醉了。。。听了几遍同学推荐的<a href="https://en.wikipedia.org/wiki/Owl_City" target="_blank" rel="external">Owl City</a>的电子类的音乐，还不错的样子，好歹也是上过Billboard的，强行安利一发好了。。。<br><a id="more"></a></p>
<p>连接在此<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2127" target="_blank" rel="external">🔗</a></p>
<h2 id="Description">Description</h2><p>高一一班的座位表是个n*m的矩阵，经过一个学期的相处，每个同学和前后左右相邻的同学互相成为了好朋友。这学期要分文理科了，每个同学对于选择文科与理科有着自己的喜悦值，而一对好朋友如果能同时选文科或者理科，那么他们又将收获一些喜悦值。作为计算机竞赛教练的scp大老板，想知道如何分配可以使得全班的喜悦值总和最大。</p>
<h2 id="Solution">Solution</h2><p>感觉有点像是最大点权闭合图的感觉，用最小割求出最少不能得到喜悦值，然后用所有的总喜悦值减去最小割的答案得到问题所求的答案。<br>具体构图的过程如下：  </p>
<ul>
<li>源点和所有表示同学的点连边，流量为该学生选取文科所得到的喜悦值加上因为他和其他点一起选文科得到的喜悦附加值的一半。  </li>
<li>汇点与各点连边，流量和同源点，改成选理科的就好。  </li>
<li>对于每一对相邻的点，<strong>相互</strong><del>傻逼错误就是这么出现的</del>连边，流量为一半的他们同时选文科的值加上一半他们选理科的值。<br>可能一开始不是很明白，自己画一下两个点的图，会发现，三种情况都是可以正确表示的。</li>
</ul>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x7fffffff</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s,t,n,m,tot;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">struct</span> edge&#123;</span><br><span class="line">    <span class="keyword">int</span> cap,op,nex,to,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"><span class="keyword">int</span> fir[maxn],nex[maxn],w[maxn],S[maxn],T[maxn],cur[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ex</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x-<span class="number">1</span>)*m+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cap)</span></span>&#123;</span><br><span class="line">    e[++tot].cap=cap; e[tot].to=y; e[tot].op=tot+<span class="number">1</span>; nex[tot]=fir[x]; fir[x]=tot;</span><br><span class="line">    e[++tot].cap=<span class="number">0</span>; e[tot].to=x; e[tot].op=tot-<span class="number">1</span>; nex[tot]=fir[y]; fir[y]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    vis[s]=<span class="number">1</span>; w[s]=<span class="number">0</span>; Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow)&#123;</span><br><span class="line">                vis[v]=<span class="number">1</span>; Q.push(v); w[v]=w[x]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (vis[t]) <span class="keyword">return</span> <span class="literal">true</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==t||a==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">while</span> (cur[x]!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=cur[x];</span><br><span class="line">        <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">        <span class="keyword">if</span> (w[x]+<span class="number">1</span>==w[v]&amp;&amp;(f=dfs(v,min(a,e[u].cap-e[u].flow))) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            e[u].flow+=f; e[e[u].op].flow-=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            a-=f;</span><br><span class="line">            <span class="keyword">if</span> (a==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur[x]=nex[cur[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxflow</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs())&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=t; i++) cur[i]=fir[i];</span><br><span class="line">        flow+=dfs(s,inf);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m); s=<span class="number">0</span>; t=n*m+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=<span class="number">2</span>*x;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=<span class="number">2</span>*x;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=x;</span><br><span class="line">            S[ex(i+<span class="number">1</span>,j)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i+<span class="number">1</span>,j),x); add(ex(i+<span class="number">1</span>,j),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=x;</span><br><span class="line">            T[ex(i+<span class="number">1</span>,j)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i+<span class="number">1</span>,j),x); add(ex(i+<span class="number">1</span>,j),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=x;</span><br><span class="line">            S[ex(i,j+<span class="number">1</span>)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i,j+<span class="number">1</span>),x); add(ex(i,j+<span class="number">1</span>),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=x;</span><br><span class="line">            T[ex(i,j+<span class="number">1</span>)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i,j+<span class="number">1</span>),x); add(ex(i,j+<span class="number">1</span>),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n*m; i++)&#123;</span><br><span class="line">        add(s,i,S[i]); add(i,t,T[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, sum-maxflow()/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="335" height="86" src="http://music.163.com/outchain/player?type=2&id=1807836&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>想了一个礼拜才发现自己忘记了构双向边，也是醉了，一礼拜一道题的龟速也是醉了。。。听了几遍同学推荐的<a href="https://en.wikipedia.org/wiki/Owl_City">Owl City</a>的电子类的音乐，还不错的样子，好歹也是上过Billboard的，强行安利一发好了。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="最小割" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1054: [HAOI2008]移动玩具]]></title>
    <link href="http://blog.fractal128.tk/2015/09/11/bzoj1054/"/>
    <id>http://blog.fractal128.tk/2015/09/11/bzoj1054/</id>
    <published>2015-09-11T12:15:20.000Z</published>
    <updated>2015-09-12T16:28:07.000Z</updated>
    <content type="html"><![CDATA[<p><del>强权下</del>转用LJOJ。。。可能是要暂时告别BZOJ的意思<br>见识了LJ的BZOJ的root账号，然而登进了admin后台却不会用。。。<br>最近看了minions就用它的照片吧= =<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>在一个4*4的方框内摆放了若干个相同的玩具，某人想将这些玩具重新摆放成为他心中理想的状态，规定移动时只能将玩具向上下左右四个方向移动，并且移动的位置不能有玩具，请你用最少的移动次数将初始的玩具状态移动到某人心中的目标状态。</p>
<h2 id="Solution">Solution</h2><p>只会强力BFS,也不是很慢嘛～用root看别人的程序，A*/IDA*居多，还有一个用KM的真是只能膜膜膜。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S=<span class="number">0</span>,E=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">gett</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'1'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(S); f[S]=<span class="number">0</span>; vis[S]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">int</span> tmp=x,s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (tmp&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> ((tmp&amp;<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> ((s%<span class="number">4</span>!=<span class="number">0</span>)&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s-<span class="number">1</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s-<span class="number">1</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&amp;<span class="number">3</span>)!=<span class="number">3</span>)&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s+<span class="number">1</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s+<span class="number">1</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&gt;<span class="number">3</span>))&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s-<span class="number">4</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s-<span class="number">4</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&lt;<span class="number">12</span>))&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s+<span class="number">4</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s+<span class="number">4</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            s++;</span><br><span class="line">            tmp/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">        S=S*<span class="number">2</span>+gett()-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">        E=E*<span class="number">2</span>+gett()-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,bfs());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><del>强权下</del>转用LJOJ。。。可能是要暂时告别BZOJ的意思<br>见识了LJ的BZOJ的root账号，然而登进了admin后台却不会用。。。<br>最近看了minions就用它的照片吧= =<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="搜索" scheme="http://blog.fractal128.tk/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="搜索" scheme="http://blog.fractal128.tk/categories/OI/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ [网络流24题] 最小路径覆盖问题]]></title>
    <link href="http://blog.fractal128.tk/2015/09/04/networkflow3/"/>
    <id>http://blog.fractal128.tk/2015/09/04/networkflow3/</id>
    <published>2015-09-04T03:45:06.000Z</published>
    <updated>2015-09-12T16:28:28.000Z</updated>
    <content type="html"><![CDATA[<p>突然发现今天是我生日，并没有什么感觉，只觉得越大越不中用了。。。<br><a id="more"></a><br>进度条：＃＃＃－－－－－－－－－－－－－－－－－－－－－ 3/24  </p>
<p>题目链接<a href="http://cojs.tk/cogs/problem/problem.php?pid=728" target="_blank" rel="external">🔗</a></p>
<h2 id="Description">Description</h2><p>给定有向图G=(V,E)。设P是G的一个简单路（顶点不相交）的集合。如果V中每个<br>顶点恰好在P的一条路上，则称P是G的一个路径覆盖。P中路径可以从V的任何一个顶<br>点开始，长度也是任意的，特别地，可以为0。G的最小路径覆盖是G的所含路径条数最少<br>的路径覆盖。<br>设计一个有效算法求一个有向无环图G的最小路径覆盖。</p>
<h2 id="Solution">Solution</h2><p>其实是做过类似的题目的，这题只是<a href="http://blog.fractal128.tk/2015/08/16/river祭祀/">祭祀</a>的子问题而已。。。<br>将每个拆点，对于边(u,v)，只需要连接二分图中的(u,v’)，然后直接做最大匹配即可得到答案。  </p>
<h2 id="Code">Code</h2><p>ps.这题使用网络流和匈牙利其实都可以［我就用了更短的匈牙利<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">14000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ans,size;</span><br><span class="line"><span class="keyword">int</span> p[maxn],fir[maxn],nex[maxn],b[maxn],q[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) &#123;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>) &#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    b[++size]=y; nex[size]=fir[x]; fir[x]=size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hungray</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=b[u];</span><br><span class="line">        <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">            vis[v]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (p[v]==<span class="number">0</span>||hungray(p[v]))&#123;</span><br><span class="line">                p[v]=x; q[x]=v; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(); m=read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=read(); y=read();</span><br><span class="line">        add(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">if</span> (hungray(i)) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, i); <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> k=i; </span><br><span class="line">        <span class="keyword">while</span> (q[k]!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, q[k]);</span><br><span class="line">            k=q[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Update<br>第一次看见生日快乐版的google，好好保存。。。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/屏幕快照%202015-09-04%20下午10.50.52.png" alt="再看到的话就成准高三狗了。。。
"></p>]]></content>
    <summary type="html">
    <![CDATA[<p>突然发现今天是我生日，并没有什么感觉，只觉得越大越不中用了。。。<br>]]>
    
    </summary>
    
      <category term="二分图" scheme="http://blog.fractal128.tk/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[网络流24题] 太空飞行计划]]></title>
    <link href="http://blog.fractal128.tk/2015/09/03/networkflow2/"/>
    <id>http://blog.fractal128.tk/2015/09/03/networkflow2/</id>
    <published>2015-09-03T15:44:07.000Z</published>
    <updated>2015-09-03T16:21:54.000Z</updated>
    <content type="html"><![CDATA[<p>延续低效啃题传统，又是一个下午，调了半天才发现自己不会求最小割方案。。。<br><a id="more"></a><br>进度条：＃＃－－－－－－－－－－－－－－－－－－－－－－ 2/24</p>
<p>题目链接<a href="http://cojs.tk/cogs/problem/problem.php?pid=727" target="_blank" rel="external">戳这里</a></p>
<h2 id="Description">Description</h2><p>W 教授正在为国家航天中心计划一系列的太空飞行。每次太空飞行可进行一系列商业性实验而获取利润。现已确定了一个可供选择的实验集合E={E1,E2,…,Em}，和进行这些实验需要使用的全部仪器的集合I={ I1, I2,…,In }。实验Ej 需要用到的仪器是I的子集Rj∈I。配置仪器Ik 的费用为ck 美元。实验Ej 的赞助商已同意为该实验结果支付pj 美元。W教授的任务是找出一个有效算法，确定在一次太空飞行中要进行哪些实验并因此而配置哪些仪器才能使太空飞行的净收益最大。这里净收益是指进行实验所获得的全部收入与配置仪器的全部费用的差额。</p>
<h2 id="Solution">Solution</h2><p>一开始根本不会做，看了论文才发现这其实是一种最小割的经典模型。。叫做最大权闭合图。稍微解释下模型的转换方法，严谨证明以及各种定义可以参见胡伯涛论文<a href="http://wenku.baidu.com/link?url=lfPkq0BOD2L6zby2PSRW48XNjfTmj9Xwyf-gTh2igRs2txeOWq8FPpx43Bd7I9j-j628LlPJPOoCu8cBRdOypSTal_A-6IGs-1aZtqzNMcq" target="_blank" rel="external">最小割模型在信息学竞赛中的应用</a><br>初步思考：将各个试验向他所需要的各个器材连边，这张图的最大权闭合图的权值就是所求的答案。（表示器材的点应该为负值）<br>先来看一下为什么这道题是求最大权闭合图</p>
<ul>
<li>因为每个试验要求所有需要器材缺一不可，所以选择的每个试验所连出去的边都会被选择入被选子图，即该子图一定为闭合图</li>
<li>题目要求最大收益，即最大的所有的试验所得－器材开支，刚好为所有所选合法子图中点权值和的最大值。</li>
</ul>
<p>具体方法是将试验-器材边的容量设为INF,并且从源点S向所有试验点连边，容量为试验收益，相同的，器材点和汇点T连边，容量为器材开支的绝对值（⚠注意），在此基础上跑最小割，最终答案为与S相连未被割去的边和与T相连被割去的边的容量和。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">20000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF <span class="number">1000000007</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> edge&#123;</span><br><span class="line">    <span class="keyword">int</span> cap,to,op,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cur[maxn],nex[maxn],fir[maxn];</span><br><span class="line"><span class="keyword">int</span> c[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> ans1[maxn],d[maxn],ans2[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,s,t,size,sum;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cap)</span></span>&#123;</span><br><span class="line">    e[++size].to=y; e[size].cap=cap; e[size].op=size+<span class="number">1</span>; nex[size]=fir[x]; fir[x]=size;</span><br><span class="line">    e[++size].to=x; e[size].cap=<span class="number">0</span>; e[size].op=size-<span class="number">1</span>; nex[size]=fir[y]; fir[y]=size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p[x]); add(s,x,p[x]);</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">1</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'\r'</span>&amp;&amp;ch!=<span class="string">'\n'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>) &amp;&amp; k!=<span class="number">0</span>)&#123;</span><br><span class="line">            add(x,k+n,INF); k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>) k=k*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;<span class="number">0</span>) add(x,k+n,INF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    vis[s]=<span class="number">1</span>; Q.push(s); d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow)&#123;</span><br><span class="line">                vis[v]=<span class="number">1</span>; Q.push(v); d[v]=d[x]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (vis[t]) <span class="keyword">return</span> <span class="literal">true</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==t||a==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">while</span> (cur[x]!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=cur[x];</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[e[u].to] &amp;&amp; (f=dfs(e[u].to,min(a,e[u].cap-e[u].flow))) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            e[u].flow+=f; e[e[u].op].flow-=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            a-=f;</span><br><span class="line">            <span class="keyword">if</span> (a==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur[x]=nex[cur[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs())&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n+m+<span class="number">1</span>; i++) cur[i]=fir[i];</span><br><span class="line">        flow += dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">        <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow) Dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    Dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=size; i++) </span><br><span class="line">    <span class="keyword">if</span> (e[i].cap&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> y=e[i].to,x=e[e[i].op].to;</span><br><span class="line">        <span class="keyword">if</span> ((vis[x]^vis[y])==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (y==t) &#123;sum-=e[i].cap, ans2[++ans2[<span class="number">0</span>]]=x;&#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (x==s) &#123;sum+=e[i].cap, ans1[++ans1[<span class="number">0</span>]]=y;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ans1+<span class="number">1</span>,ans1+<span class="number">1</span>+ans1[<span class="number">0</span>]); sort(ans2+<span class="number">1</span>,ans2+<span class="number">1</span>+ans2[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=ans1[<span class="number">0</span>]; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans1[i]); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=ans2[<span class="number">0</span>]; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans2[i]-n); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    s=<span class="number">0</span>; t=n+m+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        read(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">        add(i+n,t,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    dinic();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>延续低效啃题传统，又是一个下午，调了半天才发现自己不会求最小割方案。。。<br>]]>
    
    </summary>
    
      <category term="最大流" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
      <category term="最小割" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ [网络流24题] 搭配飞行员]]></title>
    <link href="http://blog.fractal128.tk/2015/09/03/network-flow1/"/>
    <id>http://blog.fractal128.tk/2015/09/03/network-flow1/</id>
    <published>2015-09-03T06:10:55.000Z</published>
    <updated>2015-09-03T16:20:43.000Z</updated>
    <content type="html"><![CDATA[<p>稍微复习了下网络流发现根本不会写了［窘。。。<br>找到了这个传奇的24题神坑,感觉像是立下了未来全A这24题的flag<br><a id="more"></a><br>进度条：＃－－－－－－－－－－－－－－－－－－－－－－－ 1/24</p>
<p>在线提交来自<a href="http://cojs.tk/cogs/problem/problem.php?pid=14" target="_blank" rel="external">cojs.tk</a></p>
<h2 id="Description">Description</h2><p>飞行大队有若干个来自各地的驾驶员，专门驾驶一种型号的飞机，这种飞机每架有两个驾驶员,需一个正驾驶员和一个副驾驶员。由于种种原因，例如相互配合的问题，有些驾驶员不能在同一架飞机上飞行，问如何搭配驾驶员才能使出航的飞机最多。</p>
<h2 id="Solution">Solution</h2><p>标准二分图匹配，没写匈牙利只是为了练一练dinic<br>原点S和每个正驾驶员连一条容量为1的边，汇点和副驾驶员连，然后正副之间也连一连。。。然后随意的写一个最大流［我才不会告诉你我调了半个小时</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxm <span class="number">1000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">500</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF <span class="number">1000000007</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> edge</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> to,cap,flow,op;</span><br><span class="line">&#125;e[maxm];</span><br><span class="line"><span class="keyword">int</span> fir[maxn],nex[maxm],cur[maxn],d[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,size,s,t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>) &#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cap)</span></span>&#123;</span><br><span class="line">    e[++size].to=y; e[size].cap=cap; e[size].op=size+<span class="number">1</span>; nex[size]=fir[x]; fir[x]=size;</span><br><span class="line">    e[++size].to=x; e[size].cap=<span class="number">0</span>; e[size].op=size-<span class="number">1</span>; nex[size]=fir[y]; fir[y]=size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    vis[s]=<span class="number">1</span>; Q.push(s); d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow)&#123;</span><br><span class="line">                vis[v]=<span class="number">1</span>; Q.push(v); d[v]=d[x]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (vis[t]) <span class="keyword">return</span> <span class="literal">true</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==t||a==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">while</span> (cur[x]!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=cur[x];</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[e[u].to] &amp;&amp; (f=dfs(e[u].to,min(a,e[u].cap-e[u].flow))) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            e[u].flow+=f; e[e[u].op].flow-=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            a-=f;</span><br><span class="line">            <span class="keyword">if</span> (a==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur[x]=nex[cur[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs())&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n+<span class="number">1</span>; i++) cur[i]=fir[i];</span><br><span class="line">        flow += dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    s=<span class="number">0</span>; t=n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y)==<span class="number">2</span>)&#123;</span><br><span class="line">        add(x,y,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i&gt;m) add(i,t,<span class="number">1</span>); <span class="keyword">else</span> add(s,i,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dinic());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>稍微复习了下网络流发现根本不会写了［窘。。。<br>找到了这个传奇的24题神坑,感觉像是立下了未来全A这24题的flag<br>]]>
    
    </summary>
    
      <category term="最大流" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ3110:[Zjoi2013]K大数查询]]></title>
    <link href="http://blog.fractal128.tk/2015/09/03/bzoj3110/"/>
    <id>http://blog.fractal128.tk/2015/09/03/bzoj3110/</id>
    <published>2015-09-02T17:42:48.000Z</published>
    <updated>2015-09-03T04:31:13.000Z</updated>
    <content type="html"><![CDATA[<p>说是树套树裸题，然而连线段树都打不熟的我怎么可能会能，感觉真的好腻害的样子，从昨天和HanTY一起学，到今天写出来，再加一堆调试，终于。。。<a id="more"></a></p>
<p>链接<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3110" target="_blank" rel="external">戳这</a></p>
<h2 id="Description">Description</h2><p>有N个位置，M个操作。操作有两种，每次操作如果是1 a b c的形式表示在第a个位置到第b个位置，每个位置加入一个数c;如果是2 a b c形式，表示询问从第a个位置到第b个位置，第C大的数是多少。</p>
<h2 id="Solution">Solution</h2><p>方法好像很多。。。［感觉我学的是最<ruby>基础<rp> (</rp><rt>shuǐ shuǐ</rt><rp>) </rp></ruby>的<br>外层树维护每一种不同的权值，内层树维护区间范围，计算答案的时候用二分枚举答案，然后每次调用来求［枚举的答案,权值的最大值(=n)］这一段中，位于所求区间[a,b]段的元素的个数。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">20000007</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch==<span class="string">'-'</span>) f=-<span class="number">1</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lazy[maxn],ls[maxn],rs[maxn],sum[maxn],root[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,size;</span><br><span class="line"><span class="keyword">int</span> o,a,b,c;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!lazy[k]||l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (ls[k]==<span class="number">0</span>) ls[k]=++size;</span><br><span class="line">    <span class="keyword">if</span> (rs[k]==<span class="number">0</span>) rs[k]=++size;</span><br><span class="line">    lazy[ls[k]]+=lazy[k]; lazy[rs[k]]+=lazy[k];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    sum[ls[k]]+=(mid-l+<span class="number">1</span>)*lazy[k];</span><br><span class="line">    sum[rs[k]]+=(r-mid)*lazy[k];</span><br><span class="line">    lazy[k]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod</span><span class="params">(<span class="keyword">int</span> &amp;k,<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> a, <span class="keyword">int</span> b,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k==<span class="number">0</span>) k=++size;</span><br><span class="line">    pushdown(k,l,r);</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=l&amp;&amp;r&lt;=b)&#123;</span><br><span class="line">        sum[k]+=r-l+<span class="number">1</span>;</span><br><span class="line">        lazy[k]+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=mid) mod(ls[k],l,mid,a,b,x);</span><br><span class="line">    <span class="keyword">if</span> (mid&lt;b) mod(rs[k],mid+<span class="number">1</span>,r,a,b,x);</span><br><span class="line">    sum[k]=sum[ls[k]]+sum[rs[k]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> c,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,k=<span class="number">1</span>;</span><br><span class="line">    mod(root[k],<span class="number">1</span>,n,a,b,k);</span><br><span class="line">    <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (mid&lt;c)&#123;</span><br><span class="line">            k=k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;</span><br><span class="line">            mod(root[k],<span class="number">1</span>,n,a,b,k);</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            k=k&lt;&lt;<span class="number">1</span>;</span><br><span class="line">            mod(root[k],<span class="number">1</span>,n,a,b,k);</span><br><span class="line">            r=mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    pushdown(k,l,r);</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=l&amp;&amp;r&lt;=b)&#123;</span><br><span class="line">        <span class="keyword">return</span> sum[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>,mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a&lt;=mid) ret+=get_sum(ls[k],l,mid,a,b);</span><br><span class="line">    <span class="keyword">if</span> (mid&lt;b) ret+=get_sum(rs[k],mid+<span class="number">1</span>,r,a,b); </span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,t=c,k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=get_sum(root[k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>],<span class="number">1</span>,n,a,b);</span><br><span class="line">        <span class="keyword">if</span> (tmp&lt;t)&#123;</span><br><span class="line">            t-=tmp; k&lt;&lt;=<span class="number">1</span>; r=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            k=k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>; l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(); m=read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        o=read(); a=read(); b=read(); c=read();</span><br><span class="line">        <span class="keyword">if</span> (o==<span class="number">1</span>) insert(c,a,b);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(a,b,c));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>说是树套树裸题，然而连线段树都打不熟的我怎么可能会能，感觉真的好腻害的样子，从昨天和HanTY一起学，到今天写出来，再加一堆调试，终于。。。]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="ZJOI" scheme="http://blog.fractal128.tk/tags/ZJOI/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记暑假之颓]]></title>
    <link href="http://blog.fractal128.tk/2015/08/30/%E8%AE%B0%E6%9A%91%E5%81%87%E4%B9%8B%E9%A2%93/"/>
    <id>http://blog.fractal128.tk/2015/08/30/记暑假之颓/</id>
    <published>2015-08-29T19:19:46.000Z</published>
    <updated>2015-08-30T15:21:22.000Z</updated>
    <content type="html"><![CDATA[<p>现在已经是8月30日，暑假的最后一天?<br>累觉不爱啊。。。<br><a id="more"></a><br>下面开始清点未完成之暑假作业<br>－－－－－－画风突变的分割线－－－－－－</p>
<ul>
<li>NCE还有4课没背，［据开学还有个20多小时你看着办啊</li>
<li>听说英语开学检测，什么单词什么的好像根本不知道是什么。。。</li>
<li>好巧啊，语文组好像也发了短信说要考试啊！</li>
<li>更重要的，历史地理学考了一点都没复习啊，虚死＝ ＝</li>
<li>NOIP马上考试，考不好就滚粗了，听说高一来了个初一红名爷，感觉膝盖已不是我的</li>
</ul>
<p>感觉暑假真的没做什么啊，这种像是得了失忆的感觉真是太<ruby>奇妙<rp> (</rp><rt>cāo dàn</rt><rp>) </rp></ruby>了。  </p>
<p>心累。。。洗洗睡了[明天预计睡到12点，NCE怎么办!!!</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=210284&auto=1&height=66"></iframe>

<p>[UPD date:Aug.30 23:15:48]成功背完NCE，前面背的全忘光了也算的话。。。<br>Anyway,the deadline is coming。。。</p>]]></content>
    <summary type="html">
    <![CDATA[<p>现在已经是8月30日，暑假的最后一天?<br>累觉不爱啊。。。<br>]]>
    
    </summary>
    
      <category term="面壁反省" scheme="http://blog.fractal128.tk/tags/%E9%9D%A2%E5%A3%81%E5%8F%8D%E7%9C%81/"/>
    
      <category term="随记" scheme="http://blog.fractal128.tk/categories/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1004:[HNOI2008]Cards]]></title>
    <link href="http://blog.fractal128.tk/2015/08/21/bzoj1004-%EF%BC%BBHNOI2008%EF%BC%BDCards/"/>
    <id>http://blog.fractal128.tk/2015/08/21/bzoj1004-［HNOI2008］Cards/</id>
    <published>2015-08-21T05:52:40.000Z</published>
    <updated>2015-08-27T15:35:20.000Z</updated>
    <content type="html"><![CDATA[<p>算是水题吧，早已经嘴巴AC不知道多少遍了，实际写起来也花了些时间［希望赶快写了这篇blog好<ruby>补作业<rp> (</rp><rt>dǎ yóu xì</rt><rp>) </rp></ruby>。。。<br><a id="more"></a><br>题目链接<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1004/&quot;OTZ&quot;" target="_blank" rel="external">在此</a><br><br><br></p>
<h2 id="题目大意">题目大意</h2><p>n张牌用3种颜色进行染色，并且有m种洗牌的方式，并规定任意两种可以用洗牌而相互变化的染色方式算为一种，问总染色方法数。</p>
<h2 id="Solution">Solution</h2><p>如若没听过置换群之类的东西请先向⬇️浏览<br>明显m种洗牌方式为m中1～n的排列，并且可发现加上不洗牌的方式，即1-&gt;1,2-&gt;2,….,n-&gt;n构成一个置换群。<br>引用burnside引理可以得到：<br>$$ L={1\over|G|}\cdot\sum_{i=1}^{s} D(a_{i})\ $$<br>公式解释：其中s为置换的数量，D(a[i])表示的是第i个置换后不发生变化的染色可能(不动点)的数量，L为等价类的数量，即题目所求的答案。<br>然而我们发现D(a[i])并不是很好求，介绍一个循环的概念：</p>
<ul>
<li>每个置换都可以写若⼲干互不相交的循环的乘积,两个 循环(a1a2…an)和(b1b2…bn)互不相交是指ai≠bj, i,j=1,2,…,n。例如:<br>$$\begin{pmatrix} 1&amp;2&amp;3&amp;4&amp;5  \\ 3&amp;5&amp;1&amp;4&amp;2\end{pmatrix}=(13)(25)(4)$$<br>容易发现，不动点的所有循环内的颜色应该一样，题目就被转化为一个简单的背包问题：每次对整一个循环内的染色方案进行决策，可设计方程：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f[i][r][b]表示前i 个循环用去r个红色染色，b个蓝色染色的方案，g可以通过前缀和-r-b进行计算。  </span><br><span class="line">转移方程: f[i][r][b]=f[i-<span class="number">1</span>][r<span class="operator">-s</span>[i]][b]+f[i-<span class="number">1</span>][r][b<span class="operator">-s</span>[i]]+f[i-<span class="number">1</span>][r][b]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>最后$$ ans = {每个方程的DP方程答案之和\over |G|} (mod    P) $$</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[maxn],ss[maxn],a[maxn],dp[maxn][<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> Sr,Sg,Sb,m,M,sum;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>)&#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>; sum++;</span><br><span class="line">    <span class="keyword">if</span> (!vis[a[x]]) dfs(a[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=(a%=M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> q=b-<span class="number">1</span>; q&gt;<span class="number">0</span>; q=q&gt;&gt;<span class="number">1</span>)&#123; <span class="keyword">if</span> (q&amp;<span class="number">1</span>) ans=(ans*a) % M; a=(a*a) % M;&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Sr=read(); Sb=read(); Sg=read(); m=read(); M=read();</span><br><span class="line">    <span class="keyword">int</span> n=Sr+Sb+Sg;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m+<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i!=m+<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)&#123;</span><br><span class="line">                a[j]=read();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++) a[j]=j;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        <span class="keyword">if</span> (!vis[j])&#123;</span><br><span class="line">            sum=<span class="number">0</span>;</span><br><span class="line">            dfs(j);</span><br><span class="line">            s[++t]=sum;</span><br><span class="line">            ss[t]=ss[t-<span class="number">1</span>]+sum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=t; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> r=<span class="number">0</span>; r&lt;=Sr; r++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> b=<span class="number">0</span>; b&lt;=Sb; b++)&#123;</span><br><span class="line">                    <span class="keyword">int</span> g=ss[j]-r-b;</span><br><span class="line">                    <span class="keyword">if</span> (g&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (r&gt;=s[j]) tmp=(tmp+dp[j-<span class="number">1</span>][r-s[j]][b]) % M;</span><br><span class="line">                    <span class="keyword">if</span> (b&gt;=s[j]) tmp=(tmp+dp[j-<span class="number">1</span>][r][b-s[j]]) % M;</span><br><span class="line">                    <span class="keyword">if</span> (g&gt;=s[j]) tmp=(tmp+dp[j-<span class="number">1</span>][r][b]) % M;</span><br><span class="line">                    dp[j][r][b]=tmp;</span><br><span class="line">                &#125;</span><br><span class="line">        ans+=dp[t][Sr][Sb]; ans%=M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans*(<span class="built_in">pow</span>(m+<span class="number">1</span>,M-<span class="number">2</span>)) % M);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="And_more…">And more…</h2><p>最后对于群论和pólya进行介绍和初步证明。</p>
<h3 id="群">群</h3><p>给定一个集合G={a,b,c,…}和集合G上的⼆元运算,并满足:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(a) 封闭性:∀a,b∈G, ∃c∈G, a*b=c。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(b) 结合律:∀a,b,c∈G, (a*b)*c=a*(b*c)。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(c) 单位元:∃e∈G, ∀a∈G, a*e=e*a=a。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(d) 逆元:∀a∈G, ∃b∈G, a*b=b*a=e,记b=a-1。</p>
<h3 id="置换">置换</h3><p>置换:n个元素1,2,…,n之间的一个置换表示1被1到n 中的某个数a1取代,2被1到n中的某个数a2取代,直到n被1到n中的 某个数an取代,且a1,a2,…,an互不相同。</p>
<h3 id="置换群">置换群</h3><p>将上面两个概念合并。置换群的元素是置换,运算是置换的连接。例如：<br>$$\begin{pmatrix} 1&amp;2&amp;3&amp;4  \\ 3&amp;1&amp;2&amp;4\end{pmatrix}\begin{pmatrix} 1&amp;2&amp;3&amp;4  \\ 4&amp;3&amp;2&amp;1\end{pmatrix}=\begin{pmatrix} 1&amp;2&amp;3&amp;4  \\ 2&amp;4&amp;3&amp;1\end{pmatrix}$$<br>ps.置换群需满足群的所有性质，例如本题如果不加入不洗牌的决策，即单位元<br>$$\begin{pmatrix} 1&amp;2&amp;3&amp;4  \\ 1&amp;2&amp;3&amp;4\end{pmatrix} $$其余的置换并不能构成置换群。</p>
<h3 id="一个有用的公式：|E[k]|*|Z[k]|=|G|">一个有用的公式：|E[k]|*|Z[k]|=|G|</h3><ul>
<li><strong>Z[k] (K不动置换类)</strong>:设G是1…n的置换群。若K是1…n中某个元素, G中使K保持不变的置换的全体,记以Z[k],叫做G中使K保持不动的置换类,简称K不动置换类。</li>
<li><strong>E[k](等价类)</strong>:设G是1…n的置换群。若K是1…n中某个元素,K在G 作用下的轨迹,记作E[k]。即K在G的作用下所能变化成的所有元素的集合。</li>
<li><ruby>限于篇幅<rp> (</rp><rt>yīn wèi bú huì</rt><rp>) </rp></ruby>,这里就不对这个定理进行证明。</li>
</ul>
<h3 id="Burnside引理">Burnside引理</h3><p>设N={1,……,n}中共有L个等价类,N=E1+ E2+……+EL, 则当j和k属于同一等价类时,有│Zj│=│Zk│。所以<br>$$ \sum_{k=1}^{n} |Z_k|=\sum_{i=1}^{L}{\sum_{k∈E_i}|Z_k|}=\sum_{i=1}^{L} {|E_i|\cdot |Z_i|}= L\cdot |G|$$<br>$$L={1\over{|G|}}\sum_{k=1}^{n}{|Z_k|}={1\over{|G|}}\sum_{j=1}^{s}{|D_j|}$$</p>
<h3 id="pólya定理">pólya定理</h3><p>如果对于染色的数量没有限制，即将题目改成，用m种颜色染色，那么我们依然可以用某一置换不动点的每个循环的颜色相同的性质，得到式子：<br>$$L={1\over|G|}(m^{c(g1)}+m^{c(g2)}+…+m^{c(gn)})$$<br>其中c(gi)表示第i个置换的循环数量。</p>]]></content>
    <summary type="html">
    <![CDATA[<p>算是水题吧，早已经嘴巴AC不知道多少遍了，实际写起来也花了些时间［希望赶快写了这篇blog好<ruby>补作业<rp> (</rp><rt>dǎ yóu xì</rt><rp>) </rp></ruby>。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="HNOI" scheme="http://blog.fractal128.tk/tags/HNOI/"/>
    
      <category term="burnside引理" scheme="http://blog.fractal128.tk/tags/burnside%E5%BC%95%E7%90%86/"/>
    
      <category term="pólya" scheme="http://blog.fractal128.tk/tags/polya/"/>
    
      <category term="一般递推" scheme="http://blog.fractal128.tk/tags/%E4%B8%80%E8%88%AC%E9%80%92%E6%8E%A8/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="群论" scheme="http://blog.fractal128.tk/categories/OI/%E7%BE%A4%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读东野圭吾《解忧杂货店》的感受]]></title>
    <link href="http://blog.fractal128.tk/2015/08/17/%E8%AF%BB%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE%E3%80%8A%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97%E3%80%8B%E7%9A%84%E6%84%9F%E5%8F%97/"/>
    <id>http://blog.fractal128.tk/2015/08/17/读东野圭吾《解忧杂货店》的感受/</id>
    <published>2015-08-16T20:09:34.000Z</published>
    <updated>2015-08-27T15:54:03.000Z</updated>
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如今回顾写作过程，我发现自己始终在思考一个问题：站在人生的岔路口，人究竟应该怎么做？我希望读者能在掩卷时喃喃自语：我从没读过这样的小说。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————东野圭吾《解忧杂货店》<br><a id="more"></a></p>
<h2 id="Preface">Preface</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上个月我看了一本东野圭吾的书——《解忧杂货店》，若因为不是暑假的征文作业，也许人生中便要错失错失一次如此奇幻的经历了。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只花了一个下午，便在咖啡馆读完了这整本书，是一种流畅，快活的感觉。不同的人，不同的故事，个个感人泪下，而在这些珍珠连成项链的时候，相信多数人都会不禁地赞叹世间万物的奇妙。给我的感觉，这本书就像是豆瓣里很多人评价的那样——最不“东野圭吾”的东野圭吾小说。  </p>
<h2 id="About">About</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;整本书讲了很多的故事，多到读完全书以后很有可能记不住所有的故事，但神奇的是，你对于这些故事的感觉依然强烈。这份独特的心情，伴你一直从开篇到了结尾。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我也不想赘述每一个故事的起因经过，只是大概的聊聊这个杂货店。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这间杂货店因为因为店主爷爷和附近孩子们开的一些玩笑而提供了解忧的服务，起初也只是些孩子们的玩笑，慢慢地，店里收到了真正的烦恼和忧愁，而店主爷爷浪矢也用认真、真诚的态度回信，虽然有些时候并不能提供什么完美的解决方法，却也可以让那些咨询的人感到认同感或是有人陪伴的感觉，其实也如书中浪矢爷爷所说的一样“<strong>通常咨询者心里已经有了答案，找人咨询的目的，只是为了确认这个答案是正确的。所以，有些咨询者在看了我的回信后，会再写信给我，可能是我的回答和他原本想的不一样。</strong>”<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;时光一转30多年过去了，网路上再次传来了有关于“解忧杂货店”的消息，称当年的杂货店咨询窗口会“复活”，希望当年接受过咨询的人们可以写一封回信诉说这些年来因为这些建议而带来的影响。那些因为浪矢爷爷的回信而改变了一生的人们纷纷从老店的卷闸门投入或是倾诉或是感激的回信，令人感到神奇的是，这些信件竟穿越了时空来到了33年前的杂货店，交到了浪矢的手中。而那些没有被浪矢所看见的咨询信，也鬼使神差地来到了33年后，被三个在店中暂时避难的小偷给拿到了，小偷们利用了过去的历史，即求助人的未来，真诚地给出自己的见解，虽然文化有限，连书写时也是错字连篇，也第一次感觉到了帮助别人解决烦恼的开心。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;与常常出现出现于东野书中的连环杀人，密室悬疑不同，这本书中的故事更为“生活”，例如亲人与事业之间的两难、背井离乡打拼与继承家业的选择，这些都是常能出现于生活中的事，是每个人的故事。写出这样一个又一个本就闪耀的故事，再用上穿越时空这般神奇的丝线将其缀连，作者究竟想表达些什么呢？</p>
<h2 id="Thoughts">Thoughts</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;思索中，我想起浪矢爷爷最后给那个投递空白信件的人的回信，其中的一句令我印象深刻：“<strong>地图是白纸当然很伤脑筋，任何人都会不知所措。但是，不妨换一个角度思考，正因为是白纸，所以可以画任何地图，一切都掌握在你自己手上。你很自由，充满了无限可能。这是很棒的事。我衷心祈祷你可以相信自己，无悔地燃烧自己的人生。</strong> ”这段励志的文字足以激起每个迷茫的人内心的希望，白纸并不意味着你无处可走，相反，它意味着你无处不可走。丢失了地图，并不会迷路，而是有了重新画一张地图的机会。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有时想想，人生便就如同在一张地图上的旅程，有时走的是阳关大道，有事却是泥泞小路，也会碰上很多的岔路口，人们会在哪儿稍作停留，权衡着应该走哪条路才会有更好的未来。这是，也有人会犯难，求助别人的帮助，征求别人的意见，期待别人的赞同或是别人的经验。然而听了再多，想了再多，真正做出了这次改变的，以及整个人生的改变的，仍然是脚下的这个路口和被选择的那条路。一旦决定，大家便要各自向前，站在新的起点，继续旅程。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;没有人会在那一刻知道选择了左或右，在以后意味着什么，唯一能告诉你事实的是未来。它就像浪矢先生般，接受了每一个人的咨询，耐心细致地进行回答，并在合适的时刻给你它的回信。</p>
<h2 id="Example">Example</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这让我想起一位名人的故事。若不是Jobs在读大学时辍学，很有可能我们更本见不到Apple这个品牌的建立，若不是他在休学时学习了美术字的课程，了解了大量字体设计的艺术，那么现在个人电脑就不会有现在这么美妙的字型了。当然Jobs在大学的时候，还不可能把从前的点点滴滴串连起来，但是当他十年后回顾这一切的时候，真的豁然开朗了。他在斯坦福大学的演讲也提到了这件事，并说：“<strong>你在向前展望的时候不可能将这些片断串连起来，你只能在回顾的时候将点点滴滴串连起来。所以你必须相信这些片断会在你未来的某一天串连起来。你必须要相信某些东西：你的勇气、目的、生命、因缘。这个过程从来没有令我失望,只是让我的生命更加地与众不同而已。</strong>”</p>
<h2 id="End">End</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;书中的魔法，使得过去与未来相通，也使得浪矢可以近距离地咨询未来：我的那些回答在未来会是怎样？这就像是成人世界的童话，美妙却无法达到。回到现实，则犹如弗罗斯特所说的：</p>
<blockquote>
<p>我将轻轻叹息，叙述这一切<br>许多许多年以后：<br>林子里有两条路，<br>我——选择了行人稀少的那一条<br>它改变了我的一生。</p>
</blockquote>
<blockquote><p>I shall be telling this with a sigh<br>Somewhere ages and ages hence:<br>Two roads diverged in a wood, and I–<br>I took the one less traveled by,<br>And that has made all the difference.</p><footer><strong>Robert Frost</strong><cite>The Road Not Taken</cite></footer></blockquote>]]></content>
    <summary type="html">
    <![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如今回顾写作过程，我发现自己始终在思考一个问题：站在人生的岔路口，人究竟应该怎么做？我希望读者能在掩卷时喃喃自语：我从没读过这样的小说。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————东野圭吾《解忧杂货店》<br>]]>
    
    </summary>
    
      <category term="东野圭吾" scheme="http://blog.fractal128.tk/tags/%E4%B8%9C%E9%87%8E%E5%9C%AD%E5%90%BE/"/>
    
      <category term="随记" scheme="http://blog.fractal128.tk/categories/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1143: [CTSC2008]祭祀river]]></title>
    <link href="http://blog.fractal128.tk/2015/08/16/river%E7%A5%AD%E7%A5%80/"/>
    <id>http://blog.fractal128.tk/2015/08/16/river祭祀/</id>
    <published>2015-08-15T23:09:34.000Z</published>
    <updated>2015-09-26T16:32:10.000Z</updated>
    <content type="html"><![CDATA[<p>前些日子WCMG给我（蒟蒻）们上过二分图，也讲了这道题，然而课上晕头转向，并没有搞清楚什么，这次认真学习了然而并没有什么用<br><a id="more"></a><br>题目链接：<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1143" target="_blank" rel="external">http://www.lydsy.com/JudgeOnline/problem.php?id=1143</a></p>
<h2 id="题目大意:">题目大意:</h2><p>给出一个DAG，求出其最大点独立集（集合间任意两点不联通）</p>
<h2 id="Solution&amp;Story:">Solution&amp;Story:</h2><p>根据foreseeable大爷的课件，此问题可以转化为求改图的最小可相交路径覆盖。（下文会解释为什么）</p>
<p>我们可以先讨论一下如何求出改图的最小不可相交路径覆盖，可以讲图上的点u拆为(u,u’)，对于任意边(u,v),则连接(u,v’)，形成一个二分图，在上面跑二分图匹配，可得，</p>
<blockquote>
<p>  最小路径覆盖数＝G的点数－最小路径覆盖中的边数。</p>
</blockquote>
<p>应该使得最小路径覆盖中的边数尽量多，但是又不能让两条边在同一个顶点相交。</p>
<p>所以又可以得到最小路径覆盖数＝G的点数－二分图最大匹配数。而如果如果要求的是可相交路径覆盖，只需要预处理时用floyd得到两点间联通性然后手动加边即可。</p>
<p>下面再来填一下一开始的坑，为什么此问题可以转化为求改图的最小可相交路径覆盖。foreseeable大爷的课件上明明白白地写着dilworth定理，并写了一些介绍： 偏序集最大独立集（最长反链）＝最小链覆盖大小，然而这个公式我却根本看不懂，什么偏序集，什么反链，是该科普一下。</p>
<ul>
<li>偏序集：（可自行参看wikipedia）。而foreseeable大爷对其进行了简单说 明：什么是偏序关系:具有自反性，反对称性，传递性的一种关系。(更严谨定义请看组合数学类的书)</li>
<li>链:一个集合,集合中的任意数可比。</li>
<li>反链：一个集合，集合中任意的两数均不可以比较。</li>
</ul>
<p>接下来就是dilworth定理的严谨证明，foreseeable因课件空间太小不能完美地写下而留作了回家作业（费马既视感＝ ＝），下面便是交作业的时候了其实根本不会</p>
<blockquote>
<p>dilworth定理:最长反链＝最小链覆盖的大小（其对偶定理：最长链＝最小反链覆盖的大小</p>
</blockquote>
<ol>
<li><ul>
<li>首先，我们假设偏序集X最长反链长度为p,最小链覆盖为r。</li>
<li>因为反链内的任意两点不可比，所以它们肯定出现于不同的链中，所以r≤p。</li>
</ul>
</li>
<li><p>接下来我们分为两种情况进行考虑</p>
<ul>
<li>最长反链为最小元的集合或是最大元的集合或两者都是，那么我们可以取出一个最小元x和一个对应最大元y，然后通过归纳假设，可得偏序集X-{x,y}的最小链覆盖为r-1,加上x,y所形成的边覆盖，形成共有r条边的覆盖  </li>
<li>最长链既不为最小元的集合也不为最大元的集合，此时设这个最长链为A，并定义一下两个集合：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> P = &#123;x | x对于A中的某个a,有a≤x&#125;</span><br><span class="line"><span class="built_in">set</span> Q = &#123;x | x对于A中的某个a,有x≤a&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<p>有性质如下</p>
<ol>
<li>由于存在一个不在A中的极小元，故 P ≠ X;</li>
<li>由于存在一个不在A中的最大元，故 Q ≠ X;</li>
<li>P ∩ Q = A, 这是因为假如存在一个元素 x, 在 P ∩ Q中但不在A中, 那么我们就会对A中的某元素a1和a2有a1&lt;x&lt;a2, 这与A是反链矛盾。</li>
<li>P ∪ Q = X, 这是因为加入存在一个元素 x不在P ∪ Q 中，那么A ∪ {x}就是一个大小比A还要大的反链。</li>
</ol>
<p>然后我们可以使用归纳假设法，得到A+和A-都可以被划分为r个链，并且这些链的起点和终点分别都在A上，所以可以将A+和A-中的不同的链经过共同点而相连，最终形成覆盖的r条链。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">110</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> n,m,ind,ans,tot;</span><br><span class="line"><span class="keyword">bool</span> f[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> state[maxn],p[maxn],fir[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn*maxn],nex[maxn*maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch==<span class="string">'-'</span>) f=-<span class="number">1</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>)&#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    b[++tot]=y; nex[tot]=fir[x]; fir[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hungray</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">        <span class="keyword">if</span> (state[b[u]]!=ind)&#123;</span><br><span class="line">            state[b[u]]=ind;</span><br><span class="line">            <span class="keyword">if</span> (p[b[u]]==<span class="number">0</span>||hungray(p[b[u]]))&#123;</span><br><span class="line">                p[b[u]]=x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(); m=read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=read(); <span class="keyword">int</span> y=read();</span><br><span class="line">        f[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            f[i][j]|=f[i][k]&amp;f[k][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span> (f[i][j]) add(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="number">0</span>; ind=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        ind++;</span><br><span class="line">        <span class="keyword">if</span> (hungray(i)) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n-ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>前些日子WCMG给我（蒟蒻）们上过二分图，也讲了这道题，然而课上晕头转向，并没有搞清楚什么，这次认真学习了然而并没有什么用<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="ctsc" scheme="http://blog.fractal128.tk/tags/ctsc/"/>
    
      <category term="dilworth定理" scheme="http://blog.fractal128.tk/tags/dilworth%E5%AE%9A%E7%90%86/"/>
    
      <category term="二分图" scheme="http://blog.fractal128.tk/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="二分图" scheme="http://blog.fractal128.tk/categories/OI/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World!]]></title>
    <link href="http://blog.fractal128.tk/2015/08/15/hello-world/"/>
    <id>http://blog.fractal128.tk/2015/08/15/hello-world/</id>
    <published>2015-08-15T06:09:34.000Z</published>
    <updated>2015-09-12T05:31:11.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is our very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<iframe src="https://embed-ssl.ted.com/talks/jane_goodall_at_tedglobal_07.html" width="640" height="360" frameborder="0" scrolling="no" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is our very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>]]>
    
    </summary>
    
      <category term="test" scheme="http://blog.fractal128.tk/tags/test/"/>
    
      <category term="随记" scheme="http://blog.fractal128.tk/categories/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
</feed>
