<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fractal128 ： We are OIers]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.fractal128.tk/"/>
  <updated>2015-10-04T19:53:10.000Z</updated>
  <id>http://blog.fractal128.tk/</id>
  
  <author>
    <name><![CDATA[fractal128]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BZOJ3043: IncDec Sequence]]></title>
    <link href="http://blog.fractal128.tk/2015/10/05/bzoj3043/"/>
    <id>http://blog.fractal128.tk/2015/10/05/bzoj3043/</id>
    <published>2015-10-04T19:30:24.000Z</published>
    <updated>2015-10-04T19:53:10.000Z</updated>
    <content type="html"><![CDATA[<p>每天水一发。。。颓得不行啊刚又花了2小时看了碟中谍5，假期余额已不足。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>给定一个长度为n的数列{a1,a2…an}，每次可以选择一个区间[l,r]，使这个区间内的数都加一或者都减一。<br>问至少需要多少次操作才能使数列中的所有数都一样,并求出在保证最少次数的前提下,最终得到的数列有多少种。</p>
<h2 id="Solution">Solution</h2><p>求出数列的差分序列。<br>考虑每次对于一个字串[L,R]加1，等价于d[L]加1，d[R + 1]减1，反之则反之。那么我们可以采用正负数同时消去的方法得到最少的操作次数，设d[i](i ∈ [2,n])中正值的和为pos,负值为neg,那么第一问的ans就是max(pos, -neg)。<br>第二问则考虑，在正负消去都完成的情况下，还剩下abs(pos+neg)未消去，它可以选择和d[1]进行配对消去（修改[1,i]整一段的值），或是自己消去（增加或减少自己的值）。由此，a[1]既d[1]的取值则为ans2 = abs(pos+neg) + 1。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">500000</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll n, pos = <span class="number">0</span>, neg = <span class="number">0</span>;</span><br><span class="line">ll a[maxn], d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i] = read(); d[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (d[i] &gt; <span class="number">0</span>) pos += d[i]; <span class="keyword">else</span> neg += d[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    neg *= -<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n%lld"</span>, max(pos, neg), <span class="built_in">abs</span>(pos - neg) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>每天水一发。。。颓得不行啊刚又花了2小时看了碟中谍5，假期余额已不足。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="数列差分" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E5%88%97%E5%B7%AE%E5%88%86/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="水题" scheme="http://blog.fractal128.tk/categories/OI/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NOIP2015模拟题集]]></title>
    <link href="http://blog.fractal128.tk/2015/10/04/mock_noip2015/"/>
    <id>http://blog.fractal128.tk/2015/10/04/mock_noip2015/</id>
    <published>2015-10-04T14:39:49.000Z</published>
    <updated>2015-10-04T16:16:48.000Z</updated>
    <content type="html"><![CDATA[<p>收录模拟赛中一些我不会做的或是我侥幸做出的题。。。<br><a id="more"></a></p>
<h2 id="Problem:A">Problem:A</h2><h3 id="Description">Description</h3><p>给出一张n个点m条边的<em>带边权</em>无向图，询问从0到n-1这两点间是否有长度为T的路径。其中 2 &lt;= n &lt;= 50 , 1 &lt;= m &lt;= 100 , 1 &lt;=  &lt;= 10000 , 1 &lt;= T &lt;= 10^18 , Case &lt;= 5.</p>
<h3 id="Solution">Solution</h3><p>这么难，根本不会做。<a href="http://i301void.gitcafe.io" target="_blank" rel="external">I301void</a>在UOJ上问了一发，被瞬秒，还是太弱了。。。不过北大爷rzy没做出来我的心情还是愉悦得很啊。<br>30%：<br>当T&lt;= 10000的时候，可以设 vis[i][j] 代表到达第i个点时间为j是否合法。 这样是O(T*m)，可以拿到小数据。<br>另外的那30%：各种奇怪的骗分方法。选手自行考虑。<br>100%：<br>当T很大的时候，我们考虑 如果0 -&gt; x -&gt; n - 1路径时间为T，且 从x出发有一个时间为d的环，则 一定存在一个K满足 K + p*d = T（至少T满足条件），这样我们就能绕着环走p次就能构成一条时间为T的路径。<br>显然要求的路径一定经过 0，而且在合法情况下从0号点出发一定存在一条边，否则0号点和n - 1号就是不联通的。随便取一条边时间为d, 则能构成从0号点出发的一个时间为2d的环。这样原题就化为最短路问题了，dis[i][j] 代表到达i号点，时间为 j + p <em> 2d，最小的 j+p\</em>2d，<br>最后判断dis[n -1][T % 2d] 是否小于等于T即可。<br>实际上就是在30%的基础上缩减状态。<br>时间复杂度为O(m*d)。</p>
<p>其实，还是并不十分深刻理解，主要还是T的大小和做法的界限问题，并且也没能力证明该方法的正确性，希望明白真相的神犇们可以指点一下。</p>
<p>写了一下T很大时的部分：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">300</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxlen <span class="number">30000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">1000000000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[maxn][maxlen], fir[maxn], nex[maxn], c[maxn], b[maxn];</span><br><span class="line"><span class="keyword">bool</span> inq[maxn];</span><br><span class="line"><span class="keyword">int</span> sum, n, m, T, d;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((x == <span class="number">0</span>) &amp;&amp; (d == <span class="number">0</span>))&#123;</span><br><span class="line">        d = <span class="number">2</span> * z;</span><br><span class="line">    &#125;</span><br><span class="line">    b[++sum] = y; c[sum] = z; nex[sum] = fir[x]; fir[x] = sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">    dis[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    inq[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x = Q.front();</span><br><span class="line">        Q.pop(); inq[x] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u = fir[x]; u; u = nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v = b[u], len = c[u];</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d; j++)</span><br><span class="line">            <span class="keyword">if</span> (dis[x][j] != inf &amp;&amp; dis[x][j] + len &lt; dis[v][(j + len) % d])&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                dis[v][(j + len) % d] = dis[x][j] + len;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag &amp; !inq[v])&#123;</span><br><span class="line">                Q.push(v); inq[v] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cas;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; cas;</span><br><span class="line">    <span class="keyword">while</span> (cas--)&#123;</span><br><span class="line">        sum = d = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(fir, <span class="number">0</span>, <span class="keyword">sizeof</span>(fir));</span><br><span class="line">        <span class="built_in">memset</span>(nex, <span class="number">0</span>, <span class="keyword">sizeof</span>(nex));</span><br><span class="line">        <span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; T;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x, y, z;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">            add(x, y, z); add(y, x, z);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d; j++) dis[i][j] = inf;</span><br><span class="line"></span><br><span class="line">        spfa();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dis[n - <span class="number">1</span>][T % d] &lt;= T) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Possible"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>收录模拟赛中一些我不会做的或是我侥幸做出的题。。。<br>]]>
    
    </summary>
    
      <category term="NOIP2015" scheme="http://blog.fractal128.tk/tags/NOIP2015/"/>
    
      <category term="最短路" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="面壁反省" scheme="http://blog.fractal128.tk/tags/%E9%9D%A2%E5%A3%81%E5%8F%8D%E7%9C%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="比赛" scheme="http://blog.fractal128.tk/categories/OI/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #58 (div.2)]]></title>
    <link href="http://blog.fractal128.tk/2015/10/03/bcRound58/"/>
    <id>http://blog.fractal128.tk/2015/10/03/bcRound58/</id>
    <published>2015-10-03T14:42:58.000Z</published>
    <updated>2015-10-03T16:33:43.000Z</updated>
    <content type="html"><![CDATA[<p>第一场BC，一如既往地蒻翻了。<br><a id="more"></a></p>
<h2 id="Problems">Problems</h2><h3 id="1001:Card_Game">1001:Card Game</h3><h4 id="Description">Description</h4><p>Soda and Beta are good friends. They are going to play a card game today. Soda has n cards with number a1,a2,…,an while Beta has n cards with number b1,b2,…,bn.</p>
<p>First, they choose a number m no larger than n. Then they both randomly select m cards from their own n cards. The one with larger sum of the selected cards will win. Soda wants to know if he can always win no mater what cards will be randomly selected from him and Beta.</p>
<h4 id="Solution">Solution</h4><p>签到题。</p>
<h4 id="Code">Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">800</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,m,sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[j]) swap(a[i], a[j]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) sum += a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span> (b[i] &lt; b[j]) swap(b[i], b[j]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) sum -= b[i];</span><br><span class="line">        <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"YES"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1002:LCS">1002:LCS</h3><h4 id="Description-1">Description</h4><p>You are given two sequence {a1,a2,…,an} and {b1,b2,…,bn}. Both sequences are permutation of {1,2,…,n}. You are going to find another permutation {p1,p2,…,pn} such that the length of LCS (longest common subsequence) of {ap1,ap2,…,apn} and {bp1,bp2,…,bpn} is maximum.</p>
<h4 id="Solution-1">Solution</h4><p>应为对应的两个a,b是不能分开的，看成是置换的话，则我们可以找到置换中的一些环，并且，一个n个数的环最多可以组成n-1的LCS(n&gt;1)，时间复杂度Θ(n)</p>
<h4 id="Code-1">Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,m,sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">            p[a[i]] = b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (vis[i] == <span class="number">0</span>)&#123;</span><br><span class="line">            vis[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> x = i;</span><br><span class="line">            <span class="keyword">if</span> (vis[p[x]] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">while</span> (!vis[p[x]])&#123;</span><br><span class="line">                x = p[x];</span><br><span class="line">                vis[x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n - sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1003:Beauty_of_Sequence">1003:Beauty of Sequence</h3><h4 id="Description-2">Description</h4><p>Sequence is beautiful and the beauty of an integer sequence is defined as follows: removes all but the first element from every consecutive group of equivalent elements of the sequence (i.e. unique function in C++ STL) and the summation of rest integers is the beauty of the sequence.</p>
<p>Now you are given a sequence A of n integers {a1,a2,…,an}. You need find the summation of the beauty of all the sub-sequence of A. As the answer may be very large, print it modulo 10^9+7.</p>
<p>Note: In mathematics, a sub-sequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example {1,3,2} is a sub-sequence of {1,4,3,5,2,1}.</p>
<h4 id="Solution-2">Solution</h4><p>对与某个数a[i],构造它可以提供贡献的情况，有ans += a[i] + f(前面的数和它不相同) * 2^(n-i)，并且，对于前面的符合要求的计算，可以使用正难则反的思想，计算前面的数相同的情况。</p>
<h4 id="Code-2">Code</h4><p>ps.第一次用map这个神器。。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, ll&gt; f;</span><br><span class="line">ll b[maxn];</span><br><span class="line"><span class="keyword">int</span> x,T,n,m;</span><br><span class="line">ll sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000</span>; i++) b[i] = (b[i-<span class="number">1</span>] * <span class="number">2</span>) % MOD;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        f.clear();</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            ll tmp = (b[i - <span class="number">1</span>] - f[x] + MOD) % MOD;</span><br><span class="line">            ans = (ans + <span class="number">1L</span>L * x * tmp % MOD * b[n - i]) % MOD;</span><br><span class="line">            f[x] = (f[x] + b[i - <span class="number">1</span>]) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans % MOD &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="1004:Inversion">1004:Inversion</h3><h4 id="Description-3">Description</h4><p>You have a sequence {a1,a2,…,an} and you can delete a contiguous subsequence of length m. So what is the minimum number of inversions after the deletion.</p>
<h4 id="Solution-3">Solution</h4><p>没来得及看。。。<br>但是看了题解觉得很有道理。<br>官方题解：令gi表示在i前面比ai大的数的个数,fi表示在i后面比ai小的数的个数, 这两个都可以用树状数组轻松求出来. 那么对于一个长度L的连续子序列, 删掉它之后逆序对减少的个数就是这段区间中gi的和 + 这段区间fi的和 - 这段区间的逆序对个数. 求区间逆序对个数只要用一个树状数组维护就好了, 每次只是删除最左端的一个数和加入最右端的一个数, 分别统计下贡献.</p>]]></content>
    <summary type="html">
    <![CDATA[<p>第一场BC，一如既往地蒻翻了。<br>]]>
    
    </summary>
    
      <category term="BestCoder" scheme="http://blog.fractal128.tk/tags/BestCoder/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="比赛" scheme="http://blog.fractal128.tk/categories/OI/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2142: 礼物]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj2142/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj2142/</id>
    <published>2015-10-02T15:51:28.000Z</published>
    <updated>2015-10-03T06:48:34.000Z</updated>
    <content type="html"><![CDATA[<p>一道综合型数论题。。。写的慢炸了，900MS＋<br><a id="more"></a><br>click <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2142" target="_blank" rel="external">here</a> to solve the problem</p>
<h2 id="Description">Description</h2><p>一年一度的圣诞节快要来到了。每年的圣诞节小E都会收到许多礼物，当然他也会送出许多礼物。不同的人物在小E心目中的重要性不同，在小E心中分量越重的人，收到的礼物会越多。小E从商店中购买了n件礼物，打算送给m个人，其中送给第i个人礼物数量为wi。请你帮忙计算出送礼物的方案数（两个方案被认为是不同的，当且仅当存在某个人在这两种方案中收到的礼物不同）。由于方案数可能会很大，你只需要输出模P后的结果。</p>
<h2 id="Solution">Solution</h2><p>列一下组合数的式子并上下约分可以得到答案为<br>$$ {n!}\over{w_{1}!*w_{2}!…w_{m}!*(n-w_{1}-w_{2}…-w_{m})!}$$</p>
<p>首先我们考虑P为质数时的情况，可得n!在[1,P-1]后是循环的，便可以先算出1~P-1时阶乘模P的值之后约去P的倍数，递归求解即可。</p>
<p>对于P为合数的情况，将P分解，将在模pi^ci的答案使用中国剩余定理进行合并即可。<br>具体题解可参看<a href="http://wenku.baidu.com/view/98ac0f93bb68a98271fefaef" target="_blank" rel="external">魏源的国家队训练报告</a></p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll n,P,m,cnt,ans=<span class="number">0</span>,tot=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">ll fac[<span class="number">100010</span>],invfac[<span class="number">100010</span>];</span><br><span class="line">ll a[<span class="number">10</span>],q[<span class="number">10</span>],M[<span class="number">10</span>];</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a, ll b, ll p)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>) ret = (ret + a) % p;</span><br><span class="line">        a = (a + a) % p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a, ll b, ll p)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>) ret = mul(ret, a, p);</span><br><span class="line">        a = mul(a, a, p);</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;d, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>)&#123;</span><br><span class="line">        x = <span class="number">1</span>; y = <span class="number">0</span>; d = a;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        exgcd(b, a % b, d, y, x); y -= x*(a/b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">get_inv</span><span class="params">(ll a, ll p)</span></span>&#123;</span><br><span class="line">    ll ret,y,d;</span><br><span class="line">    exgcd(a, p, d, ret, y);</span><br><span class="line">    <span class="keyword">return</span> (ret + p) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(ll x, ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; p_i) <span class="keyword">return</span> fac[x];</span><br><span class="line">    ll seg = x / p; ll res = x % p;</span><br><span class="line">    ll ret = mul(<span class="built_in">pow</span>(fac[p - <span class="number">1</span>], seg, p), fac[res], p);</span><br><span class="line">    cnt += x / p_i;</span><br><span class="line">    <span class="keyword">return</span> mul(ret, calc(x / p_i, p_i, p), p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">invcalc</span><span class="params">(ll x, ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; p_i) <span class="keyword">return</span> invfac[x];</span><br><span class="line">    ll seg = x / p; ll res = x % p;</span><br><span class="line">    ll ret = mul(<span class="built_in">pow</span>(invfac[p - <span class="number">1</span>], seg, p), invfac[res], p);</span><br><span class="line">    cnt -= x / p_i;</span><br><span class="line">    <span class="keyword">return</span> mul(ret, invcalc(x / p_i, p_i, p), p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">sol</span><span class="params">(ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p; i++)&#123;</span><br><span class="line">        fac[i] = fac[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i % p_i != <span class="number">0</span>) fac[i] = mul(fac[i], i, p);</span><br><span class="line">    &#125;</span><br><span class="line">    invfac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p; i++)&#123;</span><br><span class="line">        invfac[i] = invfac[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i % p_i != <span class="number">0</span>) invfac[i] = mul(invfac[i], get_inv(i, p), p);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ret = calc(n, p_i, p);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        ret = mul(ret, invcalc(a[i], p_i, p), p);</span><br><span class="line">    &#125;</span><br><span class="line">    ret = mul(ret, invcalc(n - sum, p_i, p), p);</span><br><span class="line">    ret = mul(ret, <span class="built_in">pow</span>(p_i, cnt, p), p);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">CRT</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; i++)&#123;</span><br><span class="line">        ll e = P / M[i];</span><br><span class="line">        ans = (ans + <span class="function">e * <span class="title">get_inv</span><span class="params">(e, M[i])</span> * q[i]) % P</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    P = read(); n = read(); m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        a[i] = read();</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &gt; n)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Impossible"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll tmp = P;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(P); i++)</span><br><span class="line">    <span class="keyword">if</span> (tmp % i==<span class="number">0</span>)&#123;</span><br><span class="line">        ll p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (tmp % i==<span class="number">0</span>)&#123;</span><br><span class="line">            tmp /= i;</span><br><span class="line">            p *= i;</span><br><span class="line">        &#125;</span><br><span class="line">        q[++tot] = sol(i, p);</span><br><span class="line">        M[tot] = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tmp &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        q[++tot] = sol(tmp, tmp);</span><br><span class="line">        M[tot] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>, CRT());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><p>口琴部分很好听。。。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=22782025&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>一道综合型数论题。。。写的慢炸了，900MS＋<br>]]>
    
    </summary>
    
      <category term="中国剩余定理" scheme="http://blog.fractal128.tk/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
      <category term="乘法逆元" scheme="http://blog.fractal128.tk/tags/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2705: [SDOI2012]Longge的问题]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj2705/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj2705/</id>
    <published>2015-10-02T05:42:49.000Z</published>
    <updated>2015-10-02T06:05:28.000Z</updated>
    <content type="html"><![CDATA[<p>最近都只是做一些简单数论慢慢巩固吧。<br>昨晚上装<a href="http://www.apple.com/osx/" target="_blank" rel="external">OS X El Capitan</a>了，没好好看介绍也不知道升级了些什么，窘。<br><a id="more"></a><br>link:<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2705" target="_blank" rel="external">BZOJ2705: [SDOI2012]Longge的问题</a><br>另：bzoj上AC50题留念。</p>
<h2 id="Description">Description</h2><p>Longge的数学成绩非常好，并且他非常乐于挑战高难度的数学问题。现在问题来了：给定一个整数N，你需要求出∑gcd(i, N)(1&lt;=i &lt;=N)。</p>
<h2 id="Solution">Solution</h2><p>O(√n)欧拉函数<br>$$ ans=\sum^{d=1}_{d&lt;=n\&amp;d|n}φ(d)*{n\over{d}}$$</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">100001</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll t=x,ret=x;</span><br><span class="line">    <span class="keyword">for</span> (ll i=<span class="number">2</span>; i*i&lt;=x; i++)</span><br><span class="line">    <span class="keyword">if</span> (t % i==<span class="number">0</span>)&#123;</span><br><span class="line">        ret=ret/i*(i-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (t % i==<span class="number">0</span>) t/=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t&gt;<span class="number">1</span>) ret=ret/t*(t-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i*i&lt;=n; i++)</span><br><span class="line">    <span class="keyword">if</span> (n % i == <span class="number">0</span>)&#123;</span><br><span class="line">            ans += <span class="function">i * <span class="title">phi</span><span class="params">(n/i)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (i*i&lt;n) ans += (ll)(n/i) * phi(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans+phi(n)+n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>最近都只是做一些简单数论慢慢巩固吧。<br>昨晚上装<a href="http://www.apple.com/osx/">OS X El Capitan</a>了，没好好看介绍也不知道升级了些什么，窘。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="SDOI" scheme="http://blog.fractal128.tk/tags/SDOI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ3098: Hash Killer II]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj3098/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj3098/</id>
    <published>2015-10-01T18:01:17.000Z</published>
    <updated>2015-10-04T16:22:50.000Z</updated>
    <content type="html"><![CDATA[<p>神奇的题目，膜膜膜。<br>一道高手一看就会，而我看了题解也没什么想法的题。<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3098" target="_blank" rel="external">戳出</a>链接</p>
<h2 id="Description">Description</h2><p>这天天气不错，hzhwcmhf神犇给VFleaKing出了一道题：<br>给你一个长度为N的字符串S，求有多少个不同的长度为L的子串。<br>子串的定义是S[l]、S[l + 1]、… S[r]这样连续的一段。<br>两个字符串被认为是不同的当且仅当某个位置上的字符不同。</p>
<p>VFleaKing一看觉得这不是Hash的裸题么！于是果断写了哈希 + 排序。<br>而hzhwcmhf神犇心里自然知道，这题就是后缀数组的height中 &lt; L的个数 + 1，就是后缀自动机上代表的长度区间包含L的结点个数，就是后缀树深度为L的结点的数量。<br>但是hzhwcmhf神犇看了看VFleaKing的做法表示非常汗。于是想卡掉他。</p>
<p>VFleaKing使用的是字典序哈希，其代码大致如下：<br>u64 val = 0;<br>for (int i = 0; i &lt; l; i++)<br> val = (val * base + s[i] - ‘a’) % Mod;<br>u64是无符号int64，范围是[0, 2^64)。<br>base是一个常量，VFleaKing会根据心情决定其值。<br>Mod等于1000000007。<br>VFleaKing还求出来了base ^ l % Mod，即base的l次方除以Mod的余数，这样就能方便地求出所有长度为L的子串的哈希值。<br>然后VFleaKing给哈希值排序，去重，求出有多少个不同的哈希值，把这个数作为结果。<br>其算法的C++代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> u64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">hash_handle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s, <span class="keyword">const</span> <span class="keyword">int</span> &amp;n, <span class="keyword">const</span> <span class="keyword">int</span> &amp;l, <span class="keyword">const</span> <span class="keyword">int</span> &amp;base)</span></span><br><span class="line"></span>&#123;</span><br><span class="line"> <span class="keyword">const</span> <span class="keyword">int</span> Mod = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"> u64 hash_pow_l = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= l; i++)</span><br><span class="line">  hash_pow_l = (hash_pow_l * base) % Mod;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> li_n = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">int</span> li[MaxN];</span><br><span class="line"></span><br><span class="line"> u64 val = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">  val = (val * base + s[i] - <span class="string">'a'</span>) % Mod;</span><br><span class="line"> li[li_n++] = val;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; n; i++)</span><br><span class="line"> &#123;</span><br><span class="line">  val = (val * base + s[i] - <span class="string">'a'</span>) % Mod;</span><br><span class="line">  val = (val + Mod - ((s[i - l] - <span class="string">'a'</span>) * hash_pow_l) % Mod) % Mod;</span><br><span class="line">  li[li_n++] = val;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> sort(li, li + li_n);</span><br><span class="line"> li_n = unique(li, li + li_n) - li;</span><br><span class="line"> <span class="keyword">return</span> li_n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>hzhwcmhf当然知道怎么卡啦！但是他想考考你。</p>
<h2 id="Solution">Solution</h2><p>看了很久才稍微有点明白。<br>把每一次计算hash当成是随机数，然后就可以使用生日悖论的性质（在pollard-rho中也是这个性质），所以大概就是把n取到100000，然后乱搞就行了。<br>注意l要稍微去大一点，不然的话算出的hash值就不是那么随机了。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">100000</span>,l=<span class="number">30</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">' '</span>&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(rand()%<span class="number">26</span>+<span class="string">'a'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>神奇的题目，膜膜膜。<br>一道高手一看就会，而我看了题解也没什么想法的题。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ4291: [PA2015]Kieszonkowe]]></title>
    <link href="http://blog.fractal128.tk/2015/10/01/bzoj4291/"/>
    <id>http://blog.fractal128.tk/2015/10/01/bzoj4291/</id>
    <published>2015-10-01T14:40:02.000Z</published>
    <updated>2015-10-01T18:19:48.000Z</updated>
    <content type="html"><![CDATA[<p>刷水题，保平安。fractal如是说。<br><a id="more"></a><br>给<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4291" target="_blank" rel="external">链接</a><br>另:我好喜欢这张图啊。</p>
<h2 id="Description">Description</h2><p>给定n个数，请从中选出若干个数，使得总和为偶数，请最大化这个总和。</p>
<h2 id="Solution">Solution</h2><p>怎么做都可以吧。。。<br>但还是很开心代码比jcvb快的。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">100001</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n,sum=<span class="number">0</span>,mi=inf;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x; x=read();</span><br><span class="line">        sum+=x;</span><br><span class="line">        <span class="keyword">if</span> ((x % <span class="number">2</span>==<span class="number">1</span>)&amp;&amp;x&lt;mi) mi=x; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum % <span class="number">2</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum); <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (mi!=sum) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, sum-mi); <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"NIESTETY\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>刷水题，保平安。fractal如是说。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="水题" scheme="http://blog.fractal128.tk/categories/OI/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2190: [SDOI2008]仪仗队]]></title>
    <link href="http://blog.fractal128.tk/2015/10/01/bzoj2190/"/>
    <id>http://blog.fractal128.tk/2015/10/01/bzoj2190/</id>
    <published>2015-10-01T07:42:09.000Z</published>
    <updated>2015-10-01T07:54:22.000Z</updated>
    <content type="html"><![CDATA[<p>线性筛计算欧拉函数模板。<br><a id="more"></a></p>
<p>题目链接<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2190" target="_blank" rel="external">在此</a></p>
<h2 id="Description">Description</h2><p>作为体育委员，C君负责这次运动会仪仗队的训练。仪仗队是由学生组成的N * N的方阵，为了保证队伍在行进中整齐划一，C君会跟在仪仗队的左后方，根据其视线所及的学生人数来判断队伍是否整齐。<br>现在，C君希望你告诉他队伍整齐时能看到的学生人数。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/2190.jpg.gif" alt="2190"></p>
<h2 id="Solution">Solution</h2><p>将图沿对角线分开，可以得到答案公式:<br>$$ ans=2\cdot\sum^{i=2}_{i&lt;n}{φ(i)}+3$$<br>用线性筛求各数的欧拉函数即可。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000000</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll vis[maxn],phi[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> tot,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_phi</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i] == <span class="number">0</span>)&#123;</span><br><span class="line">            vis[i] = <span class="number">1</span>; p[++tot] = i;</span><br><span class="line">            phi[i] = i-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= tot; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i*p[j]&gt;n) <span class="keyword">break</span>;</span><br><span class="line">            vis[i*p[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p[j] == <span class="number">0</span>)&#123;</span><br><span class="line">                phi[i * p[j]] = phi[i] * p[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                phi[i * p[j]] = phi[i] * (p[j]-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    get_phi();</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n-<span class="number">1</span>; i ++)&#123;</span><br><span class="line">        sum+=phi[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,sum * <span class="number">2</span> + <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>线性筛计算欧拉函数模板。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="SDOI" scheme="http://blog.fractal128.tk/tags/SDOI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初等数论（三）]]></title>
    <link href="http://blog.fractal128.tk/2015/10/01/number-theory3/"/>
    <id>http://blog.fractal128.tk/2015/10/01/number-theory3/</id>
    <published>2015-09-30T17:16:35.000Z</published>
    <updated>2015-09-30T17:48:58.000Z</updated>
    <content type="html"><![CDATA[<p>数论好难啊。。。<br><a id="more"></a></p>
<h1 id="初等数论">初等数论</h1><h2 id="积性函数">积性函数</h2><p>在非数论的领域，积性函数指所有对于任何a,b都有性质f(ab)=f(a)f(b)的函数。<br>在数论中的积性函数：对于正整数n的一个算术函数 f(n)，若f(1)=1，且当a,b互质时f(ab)=f(a)f(b)，在数论上就称它为积性函数。若对于某积性函数 f(n) ，就算a, b不互质，也有f(ab)=f(a)f(b)，则称它为完全积性的。</p>
<p>列了一堆奇怪的函数。。。</p>
<blockquote>
<ul>
<li>φ(n) －欧拉函数，计算与n互质的正整数之数目</li>
<li>μ(n) －莫比乌斯函数，关于非平方数的质因子数目</li>
<li>gcd(n,k) －最大公因子，当k固定的情况</li>
<li>d(n) －n的正因子数目</li>
<li>σ(n) －n的所有正因子之和</li>
<li>σk(n) － 因子函数，n的所有正因子的k次幂之和，当中k可为任何复数。</li>
<li>1(n) －不变的函数，定义为 1(n) = 1 （完全积性）</li>
<li>Id(n) －单位函数，定义为 Id(n) = n（完全积性）</li>
<li>Idk(n) －幂函数，对于任何复数、实数k，定义为Idk(n) = n^k （完全积性）</li>
<li>ε(n) －定义为：若n = 1，ε(n)=1；若 n &gt; 1，ε(n)=0。别称为“对于狄利克雷卷积的乘法单位”（完全积性）</li>
<li>λ(n) －刘维尔函数，关于能整除n的质因子的数目</li>
<li>γ(n)，定义为γ(n)=(-1)^ω(n)，在此加性函数ω(n)是不同能整除n的质数的数目</li>
</ul>
</blockquote>
<p>另外，所有狄利克雷特征均是完全积性的</p>
<h2 id="欧拉函数">欧拉函数</h2><p>在数论，对正整数n，欧拉函数是少于或等于n的数中与n互质的数的数目。此函数以其首名研究者欧拉命名，它又称为Euler’s totient function、φ函数、欧拉商数等。 例如φ(8)=4，因为1,3,5,7均和8互质。 从欧拉函数引伸出来在环论方面的事实和拉格朗日定理构成了欧拉定理的证明。</p>
<h3 id="公式">公式</h3><p>$$ φ(x)=x\cdot\prod( 1-{1\over{p_i}}) $$</p>
<h3 id="实现">实现</h3><p>由于其积性函数的性质，可以很好的在线性筛中实现。</p>
<h2 id="乘法逆元">乘法逆元</h2><p>aa’=a’a=e</p>
<p>质数：费马小定理+快速幂<br>任意数：Exgcd</p>
<h2 id="中国剩余定理">中国剩余定理</h2><p>已知X除以若干数的余数，求X的解集</p>
<p>构造法:<br>x≡A (mod N)  且  x≡B (mod M)<br>若A%gcd(N,M)≠B%gcd(N,M)无解<br>否则<br>ans=(A*M*ni(M,N)+B*N*ni(N,M))+k*lcm(N,M)</p>
<p>模非质数P时先做质因数分解，在各个模下求解在中国剩余定理合并</p>
<h2 id="阶">阶</h2><p>设a，p是整数，有：a^n≡1 (mod p)<br>可以使上式成立的最小正整数n叫做a模p的阶。</p>
<h2 id="原根与指标">原根与指标</h2><p>xk mod n 对于k&lt;φ(n)互不相同，x是模n的原根<br>离散对数：ab≡c (mod n)  →  indac=b (mod φ(n))<br>ab≡c (mod n)  →  b*indpa=indpc (mod φ(n))<br>存在原根的数：2,4,pa,2pa(p是素数)  </p>]]></content>
    <summary type="html">
    <![CDATA[<p>数论好难啊。。。<br>]]>
    
    </summary>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[摇曳的九月。]]></title>
    <link href="http://blog.fractal128.tk/2015/09/30/201509/"/>
    <id>http://blog.fractal128.tk/2015/09/30/201509/</id>
    <published>2015-09-30T13:24:53.000Z</published>
    <updated>2015-09-30T14:00:52.000Z</updated>
    <content type="html"><![CDATA[<p>Sept. 30<br><a id="more"></a><br>九月快过了。是时候写的什么总结什么的了。。。</p>
<ul>
<li><p>y小姐去Germany了，感觉班里少了点以前早已成为习惯的东西。。。看了她写的博文，是有点小感动。<a href="http://user.qzone.qq.com/814218105" target="_blank" rel="external">🔗</a></p>
</li>
<li><p>msc去北京了，背着我们，大概是要去读中关村文理学院了。</p>
</li>
<li><p>fj去白马湖了，剩下几个不知道该怎么办的OIers，迎来了新的一个人和一个新的OJ，高一强得爆炸，坚持别退队最要紧。。。</p>
</li>
<li><p>马上的考试：各种学考，以及NOIP，也不知道Wen还搞不搞信奥。</p>
</li>
</ul>
<p>这就是九月，纠结个不停，但还是很开心和同学们一起的，度过这个摇曳的九月。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=108164&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>Sept. 30<br>]]>
    
    </summary>
    
      <category term="随记" scheme="http://blog.fractal128.tk/categories/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初等数论（二）]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/number-theory2/"/>
    <id>http://blog.fractal128.tk/2015/09/27/number-theory2/</id>
    <published>2015-09-27T07:11:45.000Z</published>
    <updated>2015-10-04T16:15:35.000Z</updated>
    <content type="html"><![CDATA[<p>中秋快乐！<br>继续填坑喽。。。<br><a id="more"></a></p>
<h1 id="初等数论">初等数论</h1><h2 id="数论筛法">数论筛法</h2><h3 id="Eraosthens筛法">Eraosthens筛法</h3><p>基本筛法，一般情况下都不会被卡，时间复杂度Θ(nlogn)[我不会算。。。</p>
<h3 id="线性筛法(积性函数)">线性筛法(积性函数)</h3><p>时间复杂度Θ(n)[还是不会算。。。<br>直接放代码。。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=i;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!mindiv[i])prime[++tot]=mindiv[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=tot&amp;&amp;prime[j]&lt;=mindiv[i]&amp;&amp;(k=prime[j]*i)&lt;=n;j++)</span><br><span class="line">    mindiv[k]=prime[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//mindiv[k]表示k的最小质因数，这样保证了每一个数只会被他的最小质因数筛掉一遍。</span></span><br></pre></td></tr></table></figure></p>
<h3 id="常用性质">常用性质</h3><p>n以内素数个数O(n/ln(n))</p>
<h2 id="素数测试">素数测试</h2><h3 id="Fermat素数测试">Fermat素数测试</h3><h4 id="费马小定理">费马小定理</h4><blockquote>
<p>对于素数p与任意与p互素的整数a满足a(p-1) ≡1(mod p)</p>
</blockquote>
<h4 id="证明">证明</h4><blockquote><p>这个证明就有点麻烦了。<br>    首先我们证明这样一个结论：如果p是一个素数的话，那么对任意一个小于p的正整数a，a, 2a, 3a, …, (p-1)a除以p的余数正好是一个1到p-1的排列。例如，5是素数，3, 6, 9, 12除以5的余数分别为3, 1, 4, 2，正好就是1到4这四个数。<br>    反证法，假如结论不成立的话，那么就是说有两个小于p的正整数m和n使得na和ma除以p的余数相同。不妨假设n&gt;m，则p可以整除a(n-m)。但p是素数，那么a和n-m中至少有一个含有因子p。这显然是不可能的，因为a和n-m都比p小。<br>    用同余式表述，我们证明了：<br>(p-1)! ≡ a * 2a * 3a * … * (p-1)a (mod p)<br>    也即：<br>(p-1)! ≡ (p-1)! * a^(p-1) (mod p)<br>    两边同时除以(p-1)!，就得到了我们的最终结论：<br>1 ≡ a^(p-1) (mod p)</p><footer><strong>Matrix67</strong><cite><a href="http://www.matrix67.com/blog/archives/234" target="_blank" rel="external">数论部分第一节：素数与素性测试</a></cite></footer></blockquote>
<h4 id="限制与伪素数">限制与伪素数</h4><blockquote><p>谈到Fermat小定理，数学历史上有很多误解。很长一段时间里，人们都认为Fermat小定理的逆命题是正确的，并且有人亲自验证了a=2, p&lt;300的所有情况。国外甚至流传着一种说法，认为中国在孔子时代就证明了这样的定理：如果n整除2^(n-1)-1，则n就是素数。后来某个英国学者进行考证后才发现那是因为他们翻译中国古文时出了错。1819年有人发现了Fermat小定理逆命题的第一个反例：虽然2的340次方除以341余1，但341=11*31。后来，人们又发现了561, 645, 1105等数都表明a=2时Fermat小定理的逆命题不成立。虽然这样的数不多，但不能忽视它们的存在。于是，人们把所有能整除2^(n-1)-1的合数n叫做伪素数(pseudoprime)，意思就是告诉人们这个素数是假的。</p>
<p>不满足2^(n-1) mod n = 1的n一定不是素数；如果满足的话则多半是素数。这样，一个比试除法效率更高的素性判断方法出现了：制作一张伪素数表，记录某个范围内的所有伪素数，那么所有满足2^(n-1) mod n = 1且不在伪素数表中的n就是素数。之所以这种方法更快，是因为我们可以使用二分法快速计算2^(n-1) mod n 的值，这在计算机的帮助下变得非常容易；在计算机中也可以用二分查找有序数列、Hash表开散列、构建Trie树等方法使得查找伪素数表效率更高。</p>
<p>有人自然会关心这样一个问题：伪素数的个数到底有多少？换句话说，如果我只计算2^(n-1) mod n的值，事先不准备伪素数表，那么素性判断出错的概率有多少？研究这个问题是很有价值的，毕竟我们是OIer，不可能背一个长度上千的常量数组带上考场。统计表明，在前10亿个自然数中共有50847534个素数，而满足2^(n-1) mod n = 1的合数n有5597个。这样算下来，算法出错的可能性约为0.00011。这个概率太高了，如果想免去建立伪素数表的工作，我们需要改进素性判断的算法。  </p>
<p>最简单的想法就是，我们刚才只考虑了a=2的情况。对于式子a^(n-1) mod n，取不同的a可能导致不同的结果。一个合数可能在a=2时通过了测试，但a=3时的计算结果却排除了素数的可能。于是，人们扩展了伪素数的定义，称满足a^(n-1) mod n = 1的合数n叫做以a为底的伪素数(pseudoprime to base a)。前10亿个自然数中同时以2和3为底的伪素数只有1272个，这个数目不到刚才的1/4。这告诉我们如果同时验证a=2和a=3两种情况，算法出错的概率降到了0.000025。容易想到，选择用来测试的a越多，算法越准确。通常我们的做法是，随机选择若干个小于待测数的正整数作为底数a进行若干次测试，只要有一次没有通过测试就立即把这个数扔回合数的世界。这就是Fermat素性测试。</p>
<p>人们自然会想，如果考虑了所有小于n的底数a，出错的概率是否就可以降到0呢？没想到的是，居然就有这样的合数，它可以通过所有a的测试（这个说法不准确，详见我在地核楼层的回复）。Carmichael第一个发现这样极端的伪素数，他把它们称作Carmichael数。你一定会以为这样的数一定很大。错。第一个Carmichael数小得惊人，仅仅是一个三位数，561。前10亿个自然数中Carmichael数也有600个之多。Carmichael数的存在说明，我们还需要继续加强素性判断的算法。</p><footer><strong>Matrix67</strong><cite><a href="http://www.matrix67.com/blog/archives/234" target="_blank" rel="external">数论部分第一节：素数与素性测试</a></cite></footer></blockquote>
<h3 id="Miller-Rabin_素性测试与二次探测">Miller-Rabin 素性测试与二次探测</h3><blockquote>
<p>Miller-Rabin算法是目前主流的基于概率的素数测试算法，在构建密码安全体系中占有重要的地位。通过比较各种素数测试算法和对Miller-Rabin算法进行的仔细研究，证明在计算机中构建密码安全体系时， Miller-Rain算法是完成素数测试的最佳选择。通过对Miller-Rabin 算法底层运算的优化，可以取得较以往实现更好的性能。</p>
</blockquote>
<p>以上基本没用。。下面是该算法的一些引理</p>
<blockquote>
<p>二次探测引理：若p为奇素数，方程x^2≡1(mod p)的解只有±1<br>long long 范围内的所有整数均能用前9个素数进行准确的二次探测</p>
</blockquote>
<h3 id="实践">实践</h3><p><a href="http://codevs.cn/problem/1702/" target="_blank" rel="external">codevs1702</a><br>一个数，他是素数么？<br>设他为P满足(P&lt;=2^63-1)</p>
<p>Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n=<span class="number">16</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">17</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,<span class="number">53</span>&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll x;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=a; ans%=MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        a=(a+a)%MOD;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Yes"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="质因数分解法">质因数分解法</h2><h3 id="O(sqrt(n))暴力分解">O(sqrt(n))暴力分解</h3><h3 id="Pollard-Rho椭圆曲线分解法">Pollard-Rho椭圆曲线分解法</h3><p>这坑太大了，有点填不动该怎么办。。。</p>
<p>经过一晚上的学习，终于<del>还是没懂</del><br>其实是找到了一个关于pollard-rho算法的很好的<a href="http://wenku.baidu.com/link?url=T5oeGiGSqfaurODiXMoErWJS1G8z4M0pnXf24x-gqgxswPyNmxdLdd2UByJPVYAqW-991k5UjJIeABtzQlu1MOGZ4072fQPeBopHiGiPm7m" target="_blank" rel="external">Tutorial</a><br>牵扯到圆锥曲线的方面<ruby>不讲了<rp> (</rp><rt>tài nán liǎo</rt><rp>) </rp></ruby>，有兴趣的可以自行深入研究，然后我们了解一下pollard-rho的原理。<br>据研究可得(具体可以看那个tutorial)，当我们在一定范围内随机数的时候，随记一些数并使用它们的差值作为结果效果会远远优于朴素的枚举法［生日悖论］。<br>利用以上性质我们可以设计一种算法，来随机枚举一个可以整除待分解大质数的数，具体如下。</p>
<p>我们使用一个函数来生成伪随机数。<br>换句话说,我们不断地使用函数 𝑓 来生成(看上去或者说感觉上像的)随机数。 并不是所有的函都能够这样做,但是有一个神奇的函数可以。它就是</p>
<p> $$ f(x)=x^2+c$$</p>
<p>( 我们可以自己指定𝑎,也可以用 rand()随即函数来生成,这不是重点 )<br>我们从𝑥1 = 2 或者其他数开始,让𝑥2 = 𝑓(𝑥1), 𝑥3 = 𝑓(𝑥2), … … 生成规则为𝑥𝑛+1 = 𝑓(𝑥𝑛)</p>
<p>具体实现和详细过程都在那份PDF中［我只是个搬运工。。。</p>
<p>自己写的bzoj3667, 为什么T了。。。不懂，以后再改吧。</p>
<p>错误的Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NN=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">61</span>,<span class="number">24251</span>&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line">ll x;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&lt;y) swap(x,y);</span><br><span class="line">    ll r = x % y;</span><br><span class="line">    <span class="keyword">while</span> (r!=<span class="number">0</span>)&#123;</span><br><span class="line">        ll tmp = r;</span><br><span class="line">        r = y % r;</span><br><span class="line">        x = y;</span><br><span class="line">        y = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll p)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll tmp=(a*b-(ll)((<span class="keyword">long</span> <span class="keyword">double</span>)a/p*b+<span class="number">1e-8</span>)*p);</span><br><span class="line">    <span class="keyword">return</span> tmp&lt;<span class="number">0</span>?tmp+p:tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MR</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=NN; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (mul(x,x,y)+rand()+<span class="number">12894</span>)%y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Prho</span><span class="params">(ll N)</span></span>&#123;</span><br><span class="line">    ll p=<span class="number">1</span>,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (MR(N)==<span class="number">1</span>) <span class="keyword">return</span> N;</span><br><span class="line">    ll a=<span class="number">2</span>,b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        a=f(a,N);</span><br><span class="line">        b=f(f(b,N),N);</span><br><span class="line">        <span class="keyword">if</span> (a==b) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (a&gt;b) t=a-b; <span class="keyword">else</span> t=b-a;</span><br><span class="line">        p=gcd(t,N);</span><br><span class="line">        <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">return</span> max(Prho(p),Prho(N/p)); <span class="keyword">else</span> <span class="keyword">return</span> N;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        x=read();</span><br><span class="line">        <span class="keyword">if</span> (x==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>); </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Prime"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=Prho(x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>发现我在写f(x)的时候每次都rand()了，这是极端错误的。。。<br>而且情况是这样的，如果在miller-rabin算法中用2,3,7,61,24251,那么会有一个十分厉害的叫做46 856 248 255 981的超强伪素数的存在，OTL</p>
<p>AC的Code<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NN=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll p[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">61</span>,<span class="number">24251</span>&#125;;</span><br><span class="line">ll ran;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line">ll x;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&lt;y) swap(x,y);</span><br><span class="line">    ll r = x % y;</span><br><span class="line">    <span class="keyword">while</span> (r!=<span class="number">0</span>)&#123;</span><br><span class="line">        ll tmp = r;</span><br><span class="line">        r = y % r;</span><br><span class="line">        x = y;</span><br><span class="line">        y = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a,ll b,ll p)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll tmp=(a*b-(ll)((<span class="keyword">long</span> <span class="keyword">double</span>)a/p*b+<span class="number">1e-8</span>)*p);</span><br><span class="line">    <span class="keyword">return</span> tmp&lt;<span class="number">0</span>?tmp+p:tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a,ll b,ll MOD)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>)==<span class="number">1</span>) ans=mul(ans,a,MOD);</span><br><span class="line">        a=mul(a,a,MOD);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Isprime</span><span class="params">(ll a, ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> ((b==<span class="number">1</span>)||((b &amp; <span class="number">1</span>)==<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll t=b-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t &amp; <span class="number">1</span>)==<span class="number">0</span>) t&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    ll tmp=power(a,t,b);</span><br><span class="line">    <span class="keyword">while</span> ((t!=b-<span class="number">1</span>)&amp;&amp;(tmp!=<span class="number">1</span>)&amp;&amp;(tmp!=b-<span class="number">1</span>))&#123;</span><br><span class="line">        tmp=mul(tmp,tmp,b);</span><br><span class="line">        t&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((tmp==b-<span class="number">1</span>)||((t &amp; <span class="number">1</span>)==<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MR</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">46856248255981</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=NN; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==x)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            flag=<span class="function">flag &amp; <span class="title">Isprime</span><span class="params">(p[i],x)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (flag==<span class="number">0</span>) &#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (mul(x,x,y)+ran+<span class="number">12894</span>)%y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Prho</span><span class="params">(ll N)</span></span>&#123;</span><br><span class="line">    ll p=<span class="number">1</span>,t=<span class="number">0</span>;</span><br><span class="line">    ll a=<span class="number">2</span>,b=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        a=f(a,N);</span><br><span class="line">        b=f(f(b,N),N);</span><br><span class="line">        <span class="keyword">if</span> (a==b) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (a&gt;b) t=a-b; <span class="keyword">else</span> t=b-a;</span><br><span class="line">        p=gcd(t,N);</span><br><span class="line">        <span class="keyword">if</span> (p&gt;<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">4</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    ll p=x;</span><br><span class="line">    <span class="keyword">while</span> (p==x||p==<span class="number">1</span>)&#123;</span><br><span class="line">        ran=rand()+<span class="number">19990128</span>; ran%=x;</span><br><span class="line">        p=Prho(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max(work(p),work(x/p));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        x=read();</span><br><span class="line">        <span class="keyword">if</span> (x==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>); </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (MR(x)==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Prime"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=work(x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>data</strong><br><a href="http://pan.baidu.com/s/1o6064WU" target="_blank" rel="external">http://pan.baidu.com/s/1o6064WU</a></p>]]></content>
    <summary type="html">
    <![CDATA[<p>中秋快乐！<br>继续填坑喽。。。<br>]]>
    
    </summary>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vijos1382：寻找主人]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/vijos1382/"/>
    <id>http://blog.fractal128.tk/2015/09/27/vijos1382/</id>
    <published>2015-09-26T17:59:53.000Z</published>
    <updated>2015-09-27T04:10:01.000Z</updated>
    <content type="html"><![CDATA[<p>对于刚学的最小表示法的巩固。。。<br><a id="more"></a><br>题目：<a href="https://vijos.org/p/1382" target="_blank" rel="external">vijos p1382</a></p>
<h2 id="Description">Description</h2><p>有一天，袁☆同学绵了一条价值连城宝石项链，但是，一个严重的问题是，他竟然忘记了项链的主人是谁！在得知此事后，很多人向☆同学发来了很多邮件，都说项链是自己的，要求他归还（显然其中最多只有一个人说了真话）。 ☆同学要求每个人都写了一段关于自己项链的描述： 项链上的宝石用数字0至9来标示。一个对于项链的表示就是从项链的某个宝石开始，顺指针绕一圈，沿途记下经过的宝石，比如如下项链： 1-2-3-4 　　它的可能的四种表示是0123、1230、2301、3012。<br>袁☆同学现在心急如焚，于是他找到了你，希望你能够编一个程序，判断两个给定的描述是否代表同一个项链（注意，项链是不会翻转的）。</p>
<p>给定两个项链的表示，判断他们是否可能是一条项链。</p>
<h2 id="Solution">Solution</h2><p>对于比较循环同构的情况，直接对其进行最小表示法，比较他们的最小表示即可。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p1,p2,t,len;</span><br><span class="line"><span class="keyword">char</span> ch1[maxn],ch2[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minR</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;n&amp;&amp;j&lt;n&amp;&amp;k&lt;n)&#123;</span><br><span class="line">        t=a[(i+k)%n]-a[(j+k)%n];</span><br><span class="line">        <span class="keyword">if</span> (t==<span class="number">0</span>)&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (t&gt;<span class="number">0</span>) i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;<span class="number">0</span>) j+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i==j) i++;</span><br><span class="line">            k=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch1);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch2);</span><br><span class="line">    len=<span class="built_in">strlen</span>(ch1);</span><br><span class="line">    p1=minR(ch1,len);</span><br><span class="line">    p2=minR(ch2,len);</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        <span class="keyword">if</span> (ch1[(i+p1)%len]!=ch2[(i+p2)%len])&#123;</span><br><span class="line">            flag=<span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,ch1[(i+p1)%len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>对于刚学的最小表示法的巩固。。。<br>]]>
    
    </summary>
    
      <category term="vijos" scheme="http://blog.fractal128.tk/tags/vijos/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/categories/OI/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2882: 工艺]]></title>
    <link href="http://blog.fractal128.tk/2015/09/27/bzoj2882/"/>
    <id>http://blog.fractal128.tk/2015/09/27/bzoj2882/</id>
    <published>2015-09-26T17:18:59.000Z</published>
    <updated>2015-09-26T17:37:28.000Z</updated>
    <content type="html"><![CDATA[<p>第一道权限题。<br><a id="more"></a><br>题目链接<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2882" target="_blank" rel="external">戳</a></p>
<h2 id="Description">Description</h2><p>小敏和小燕是一对好朋友。<br>他们正在玩一种神奇的游戏，叫Minecraft。<br>他们现在要做一个由方块构成的长条工艺品。但是方块现在是乱的，而且由于机器的要求，他们只能做到把这个工艺品最左边的方块放到最右边。<br>他们想，在仅这一个操作下，最漂亮的工艺品能多漂亮。<br>两个工艺品美观的比较方法是，从头开始比较，如果第i个位置上方块不一样那么谁的瑕疵度小，那么谁就更漂亮，如果一样那么继续比较第i+1个方块。如果全都一样，那么这两个工艺品就一样漂亮。</p>
<h2 id="Solution">Solution</h2><p>学了一下最小表示法，主要作用是找出循环同构的数据的最小表示。<br>一开始直接看代码有点不懂，后来稍微想了想，差不多明白了［其实这么短，一下就背出来了。。<br>大概思想就是用两个指针选取首位进行比较，如果相同就一直往下比较，当达到了len的长度就说明已经得到了答案。具体请参看代码。</p>
<h2 id="Code">Code</h2><p>ps.这题对presentation有要求，末尾不能有空格。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,p,t;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minR</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;n&amp;&amp;j&lt;n&amp;&amp;k&lt;n)&#123;</span><br><span class="line">        t=a[(i+k)%n]-a[(j+k)%n];</span><br><span class="line">        <span class="keyword">if</span> (t==<span class="number">0</span>)&#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (t&gt;<span class="number">0</span>) i+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;<span class="number">0</span>) j+=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i==j) i++;</span><br><span class="line">            k=<span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    p=minR();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n-<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[(i+p)%n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[(n-<span class="number">1</span>+p)%n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>第一道权限题。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="最小表示法" scheme="http://blog.fractal128.tk/categories/OI/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[uva10635:Prince and Princess]]></title>
    <link href="http://blog.fractal128.tk/2015/09/26/uva10635/"/>
    <id>http://blog.fractal128.tk/2015/09/26/uva10635/</id>
    <published>2015-09-25T18:38:10.000Z</published>
    <updated>2015-09-26T05:26:06.000Z</updated>
    <content type="html"><![CDATA[<p>第一次使用virtual judge，居然交了很多遍代码都没交上去。。。<br><a id="more"></a><br>virtual judge提交<a href="http://acm.hust.edu.cn/vjudge/problem/viewProblem.action?id=19051" target="_blank" rel="external">入口</a></p>
<h2 id="Description">Description</h2><p>英文题面看不懂。。。<br>大概就是求个LCS吧。</p>
<h2 id="Solution">Solution</h2><p>将第二个序列元素在第一个序列中的次序倒序排起来做一遍LIS即可。<br>时间复杂度可降至Θ(nlogn)。<br>举个例子：<br>s1: 5 4 3 5 2<br>s2: 4 2 3 3 5<br>处理后得到的序列则为: 2 5 3 3 4 1<br>所以ans=3</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">1000000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">6500000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn],a[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],fir[maxn],f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T,ans;</span><br><span class="line"><span class="keyword">int</span> n,p,q,num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T); <span class="keyword">int</span> tt=T;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        num=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(fir,<span class="number">0</span>,<span class="keyword">sizeof</span>(fir));</span><br><span class="line">        <span class="built_in">memset</span>(nex,<span class="number">0</span>,<span class="keyword">sizeof</span>(nex));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;p,&amp;q);</span><br><span class="line">        p++; q++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=p; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t[i]);</span><br><span class="line">            nex[i]=fir[t[i]]; fir[t[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=q; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            <span class="keyword">int</span> u=fir[x];</span><br><span class="line">            <span class="keyword">while</span> (u)&#123;</span><br><span class="line">                a[++num]=u;</span><br><span class="line">                u=nex[u];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//		for (int i=1; i&lt;=num; i++) cout&lt;&lt;a[i]&lt;&lt;endl;</span></span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n; i++) c[i]=inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=num; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> l=<span class="number">0</span>,r=num;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (c[mid]&lt;a[i])&#123;</span><br><span class="line">                    tmp=mid;</span><br><span class="line">                    l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> r=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            f[i]=tmp+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (c[tmp+<span class="number">1</span>]&gt;a[i]) c[tmp+<span class="number">1</span>]=a[i];</span><br><span class="line">            <span class="keyword">if</span> (f[i]&gt;ans) ans=f[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;tt-T&lt;&lt;<span class="string">": "</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>第一次使用virtual judge，居然交了很多遍代码都没交上去。。。<br>]]>
    
    </summary>
    
      <category term="uva" scheme="http://blog.fractal128.tk/tags/uva/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/categories/OI/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1876: [SDOI2009]SuperGCD]]></title>
    <link href="http://blog.fractal128.tk/2015/09/26/bzoj1876/"/>
    <id>http://blog.fractal128.tk/2015/09/26/bzoj1876/</id>
    <published>2015-09-25T18:27:32.000Z</published>
    <updated>2015-09-26T05:16:19.000Z</updated>
    <content type="html"><![CDATA[<p>不会写高精度的我该怎么办呢？<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>Sheng bill有着惊人的心算能力，甚至能用大脑计算出两个巨大的数的GCD（最大公约 数）！因此他经常和别人比赛计算GCD。有一天Sheng bill很嚣张地找到了你，并要求和你比 赛，但是输给Sheng bill岂不是很丢脸！所以你决定写一个程序来教训他。</p>
<h2 id="Solution">Solution</h2><p>裸更相减损术实现［写高精度超时的我只能呵呵。。。</p>
<h2 id="Code">Code</h2><p>写超时了怎么还能贴代码呢？<br>但是看到了一个很厉害的东西(python大法好)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a,b=input(),input()</span><br><span class="line">c=a%b</span><br><span class="line"><span class="keyword">while</span> c!=<span class="number">0L</span>:</span><br><span class="line">    a=b</span><br><span class="line">    b=c</span><br><span class="line">    c=a%b</span><br><span class="line"><span class="keyword">print</span> b</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>不会写高精度的我该怎么办呢？<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初等数论（一）]]></title>
    <link href="http://blog.fractal128.tk/2015/09/18/number-theory1/"/>
    <id>http://blog.fractal128.tk/2015/09/18/number-theory1/</id>
    <published>2015-09-18T11:51:32.000Z</published>
    <updated>2015-09-20T04:47:37.000Z</updated>
    <content type="html"><![CDATA[<p>周四听了一个高一小爷讲了一堆听不懂的数论，虐得体无完肤，我会告诉你我紧张得一下课就跑了吗，真是搞笑了。特此打上自我反省的tag以警醒。找到了暑假上课时QY神犇的课件，好好学。。。<br><a id="more"></a></p>
<h1 id="初等数论">初等数论</h1><h2 id="数论常识">数论常识</h2><ol>
<li>整数／整除／约数</li>
<li>素数／合数</li>
<li>算数基本定理：任何一个大于1的自然数 N,如果N不为质数，那么N可以唯一分解成有限个质数的乘积 N=P1^a1<em>P2^a2\</em>P3^a3……*Pn^an，这里P1&lt;P2&lt;P3……&lt;Pn均为质数，其中指数ai是正整数。</li>
<li>除法／同余</li>
<li>最大公因数／最小公倍数</li>
<li>素数无限定理：证明可采用构造法，将所有已知质数相乘＋1得到不被其他质数所整除的新质数。</li>
<li>互素</li>
<li>进制位</li>
</ol>
<h2 id="欧几里德算法">欧几里德算法</h2><h3 id="辗转相除法">辗转相除法</h3><p>$$ gcd(a,b)=gcd(b,a\%b)$$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> b?gcd(b,a % b):a;&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="更相减损术">更相减损术</h3><p>$$ 1.gcd(a,b)=gcd(a,a-b)$$$$ 2.gcd(2a,2b)=2gcd(a,b)$$$$3.gcd(2a,b)=gcd(a,b)$$<br>我也不知道有什么用，不过我们可以百度一下嘛。。。<br>查到了！BZOJ1876，求高精度gcd,<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1876" target="_blank" rel="external">传送门</a></p>
<h3 id="扩展欧几里德exgcd">扩展欧几里德exgcd</h3><p>使用Qy的一张图便说明问题。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/图片1.png" alt="ORZ(QY)"><br>还有一发神牛的讲课手写代码。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> re=exgcd(b,a%b,x,y);</span><br><span class="line">        <span class="keyword">int</span> tmp=x;</span><br><span class="line">        x=y;</span><br><span class="line">        y=tmp-a/b*y;</span><br><span class="line">        <span class="keyword">return</span> re;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;exgcd(a,b,x,y)&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">' '</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="裴蜀定理">裴蜀定理</h2><p>裴蜀定理（Bézout’s identity）得名于法国数学家艾蒂安·裴蜀，说明了对任何整数a、b和它们的最大公约数d，关于未知数x和y的线性丢番图方程（称为裴蜀等式）：若a,b是整数,且（a,b)=d，那么对于任意的整数x,y,ax+by都一定是d的倍数，特别地，一定存在整数x,y，使ax+by=d成立。</p>
<p>它的一个重要推论是：a,b互质的充要条件是存在整数x,y使ax+by=1.</p>
<p>它的一个重要推论是：设a1,a2,a3……an为n个整数，d是它们的最大公约数，那么存在整数x1……xn使得x1*a1+x2*a2+…xn*an=d。</p>
<p>证明可由扩展的欧几里得算法直观得到TAT!~[近距离膜拜大爷卖萌]</p>]]></content>
    <summary type="html">
    <![CDATA[<p>周四听了一个高一小爷讲了一堆听不懂的数论，虐得体无完肤，我会告诉你我紧张得一下课就跑了吗，真是搞笑了。特此打上自我反省的tag以警醒。找到了暑假上课时QY神犇的课件，好好学。。。<br>]]>
    
    </summary>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="面壁反省" scheme="http://blog.fractal128.tk/tags/%E9%9D%A2%E5%A3%81%E5%8F%8D%E7%9C%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2127:happiness]]></title>
    <link href="http://blog.fractal128.tk/2015/09/18/bzoj2127/"/>
    <id>http://blog.fractal128.tk/2015/09/18/bzoj2127/</id>
    <published>2015-09-18T10:39:07.000Z</published>
    <updated>2015-09-19T11:34:01.000Z</updated>
    <content type="html"><![CDATA[<p>想了一个礼拜才发现自己忘记了构双向边，也是醉了，一礼拜一道题的龟速也是醉了。。。听了几遍同学推荐的<a href="https://en.wikipedia.org/wiki/Owl_City" target="_blank" rel="external">Owl City</a>的电子类的音乐，还不错的样子，好歹也是上过Billboard的，强行安利一发好了。。。<br><a id="more"></a></p>
<p>连接在此<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2127" target="_blank" rel="external">🔗</a></p>
<h2 id="Description">Description</h2><p>高一一班的座位表是个n*m的矩阵，经过一个学期的相处，每个同学和前后左右相邻的同学互相成为了好朋友。这学期要分文理科了，每个同学对于选择文科与理科有着自己的喜悦值，而一对好朋友如果能同时选文科或者理科，那么他们又将收获一些喜悦值。作为计算机竞赛教练的scp大老板，想知道如何分配可以使得全班的喜悦值总和最大。</p>
<h2 id="Solution">Solution</h2><p>感觉有点像是最大点权闭合图的感觉，用最小割求出最少不能得到喜悦值，然后用所有的总喜悦值减去最小割的答案得到问题所求的答案。<br>具体构图的过程如下：  </p>
<ul>
<li>源点和所有表示同学的点连边，流量为该学生选取文科所得到的喜悦值加上因为他和其他点一起选文科得到的喜悦附加值的一半。  </li>
<li>汇点与各点连边，流量和同源点，改成选理科的就好。  </li>
<li>对于每一对相邻的点，<strong>相互</strong><del>傻逼错误就是这么出现的</del>连边，流量为一半的他们同时选文科的值加上一半他们选理科的值。<br>可能一开始不是很明白，自己画一下两个点的图，会发现，三种情况都是可以正确表示的。</li>
</ul>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">0x7fffffff</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s,t,n,m,tot;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">struct</span> edge&#123;</span><br><span class="line">    <span class="keyword">int</span> cap,op,nex,to,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"><span class="keyword">int</span> fir[maxn],nex[maxn],w[maxn],S[maxn],T[maxn],cur[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ex</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x-<span class="number">1</span>)*m+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cap)</span></span>&#123;</span><br><span class="line">    e[++tot].cap=cap; e[tot].to=y; e[tot].op=tot+<span class="number">1</span>; nex[tot]=fir[x]; fir[x]=tot;</span><br><span class="line">    e[++tot].cap=<span class="number">0</span>; e[tot].to=x; e[tot].op=tot-<span class="number">1</span>; nex[tot]=fir[y]; fir[y]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    vis[s]=<span class="number">1</span>; w[s]=<span class="number">0</span>; Q.push(s);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow)&#123;</span><br><span class="line">                vis[v]=<span class="number">1</span>; Q.push(v); w[v]=w[x]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (vis[t]) <span class="keyword">return</span> <span class="literal">true</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==t||a==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">while</span> (cur[x]!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=cur[x];</span><br><span class="line">        <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">        <span class="keyword">if</span> (w[x]+<span class="number">1</span>==w[v]&amp;&amp;(f=dfs(v,min(a,e[u].cap-e[u].flow))) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            e[u].flow+=f; e[e[u].op].flow-=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            a-=f;</span><br><span class="line">            <span class="keyword">if</span> (a==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur[x]=nex[cur[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxflow</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs())&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=t; i++) cur[i]=fir[i];</span><br><span class="line">        flow+=dfs(s,inf);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m); s=<span class="number">0</span>; t=n*m+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=<span class="number">2</span>*x;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=<span class="number">2</span>*x;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=x;</span><br><span class="line">            S[ex(i+<span class="number">1</span>,j)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i+<span class="number">1</span>,j),x); add(ex(i+<span class="number">1</span>,j),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=x;</span><br><span class="line">            T[ex(i+<span class="number">1</span>,j)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i+<span class="number">1</span>,j),x); add(ex(i+<span class="number">1</span>,j),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            S[ex(i,j)]+=x;</span><br><span class="line">            S[ex(i,j+<span class="number">1</span>)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i,j+<span class="number">1</span>),x); add(ex(i,j+<span class="number">1</span>),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;m; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); sum+=x;</span><br><span class="line">            T[ex(i,j)]+=x;</span><br><span class="line">            T[ex(i,j+<span class="number">1</span>)]+=x;</span><br><span class="line">            add(ex(i,j),ex(i,j+<span class="number">1</span>),x); add(ex(i,j+<span class="number">1</span>),ex(i,j),x);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n*m; i++)&#123;</span><br><span class="line">        add(s,i,S[i]); add(i,t,T[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, sum-maxflow()/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="335" height="86" src="http://music.163.com/outchain/player?type=2&id=1807836&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>想了一个礼拜才发现自己忘记了构双向边，也是醉了，一礼拜一道题的龟速也是醉了。。。听了几遍同学推荐的<a href="https://en.wikipedia.org/wiki/Owl_City">Owl City</a>的电子类的音乐，还不错的样子，好歹也是上过Billboard的，强行安利一发好了。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="最小割" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1054: [HAOI2008]移动玩具]]></title>
    <link href="http://blog.fractal128.tk/2015/09/11/bzoj1054/"/>
    <id>http://blog.fractal128.tk/2015/09/11/bzoj1054/</id>
    <published>2015-09-11T12:15:20.000Z</published>
    <updated>2015-09-12T16:28:07.000Z</updated>
    <content type="html"><![CDATA[<p><del>强权下</del>转用LJOJ。。。可能是要暂时告别BZOJ的意思<br>见识了LJ的BZOJ的root账号，然而登进了admin后台却不会用。。。<br>最近看了minions就用它的照片吧= =<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>在一个4*4的方框内摆放了若干个相同的玩具，某人想将这些玩具重新摆放成为他心中理想的状态，规定移动时只能将玩具向上下左右四个方向移动，并且移动的位置不能有玩具，请你用最少的移动次数将初始的玩具状态移动到某人心中的目标状态。</p>
<h2 id="Solution">Solution</h2><p>只会强力BFS,也不是很慢嘛～用root看别人的程序，A*/IDA*居多，还有一个用KM的真是只能膜膜膜。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S=<span class="number">0</span>,E=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">gett</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'1'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(S); f[S]=<span class="number">0</span>; vis[S]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">int</span> tmp=x,s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (tmp&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> ((tmp&amp;<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> ((s%<span class="number">4</span>!=<span class="number">0</span>)&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s-<span class="number">1</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s-<span class="number">1</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&amp;<span class="number">3</span>)!=<span class="number">3</span>)&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s+<span class="number">1</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s+<span class="number">1</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&gt;<span class="number">3</span>))&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s-<span class="number">4</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s-<span class="number">4</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (((s&lt;<span class="number">12</span>))&amp;&amp;((x&amp;(<span class="number">1</span>&lt;&lt;(s+<span class="number">4</span>)))==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="keyword">int</span> v=x|(<span class="number">1</span>&lt;&lt;(s+<span class="number">4</span>));</span><br><span class="line">                    v=v-(<span class="number">1</span>&lt;&lt;s);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                        Q.push(v);</span><br><span class="line">                        vis[v]=<span class="number">1</span>; f[v]=f[x]+<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (v==E) <span class="keyword">return</span> f[v];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            s++;</span><br><span class="line">            tmp/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">        S=S*<span class="number">2</span>+gett()-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">        E=E*<span class="number">2</span>+gett()-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,bfs());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><del>强权下</del>转用LJOJ。。。可能是要暂时告别BZOJ的意思<br>见识了LJ的BZOJ的root账号，然而登进了admin后台却不会用。。。<br>最近看了minions就用它的照片吧= =<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="搜索" scheme="http://blog.fractal128.tk/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="搜索" scheme="http://blog.fractal128.tk/categories/OI/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ [网络流24题] 最小路径覆盖问题]]></title>
    <link href="http://blog.fractal128.tk/2015/09/04/networkflow3/"/>
    <id>http://blog.fractal128.tk/2015/09/04/networkflow3/</id>
    <published>2015-09-04T03:45:06.000Z</published>
    <updated>2015-09-12T16:28:28.000Z</updated>
    <content type="html"><![CDATA[<p>突然发现今天是我生日，并没有什么感觉，只觉得越大越不中用了。。。<br><a id="more"></a><br>进度条：＃＃＃－－－－－－－－－－－－－－－－－－－－－ 3/24  </p>
<p>题目链接<a href="http://cojs.tk/cogs/problem/problem.php?pid=728" target="_blank" rel="external">🔗</a></p>
<h2 id="Description">Description</h2><p>给定有向图G=(V,E)。设P是G的一个简单路（顶点不相交）的集合。如果V中每个<br>顶点恰好在P的一条路上，则称P是G的一个路径覆盖。P中路径可以从V的任何一个顶<br>点开始，长度也是任意的，特别地，可以为0。G的最小路径覆盖是G的所含路径条数最少<br>的路径覆盖。<br>设计一个有效算法求一个有向无环图G的最小路径覆盖。</p>
<h2 id="Solution">Solution</h2><p>其实是做过类似的题目的，这题只是<a href="http://blog.fractal128.tk/2015/08/16/river祭祀/">祭祀</a>的子问题而已。。。<br>将每个拆点，对于边(u,v)，只需要连接二分图中的(u,v’)，然后直接做最大匹配即可得到答案。  </p>
<h2 id="Code">Code</h2><p>ps.这题使用网络流和匈牙利其实都可以［我就用了更短的匈牙利<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">14000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ans,size;</span><br><span class="line"><span class="keyword">int</span> p[maxn],fir[maxn],nex[maxn],b[maxn],q[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) &#123;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>) &#123; x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    b[++size]=y; nex[size]=fir[x]; fir[x]=size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hungray</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=b[u];</span><br><span class="line">        <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">            vis[v]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (p[v]==<span class="number">0</span>||hungray(p[v]))&#123;</span><br><span class="line">                p[v]=x; q[x]=v; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(); m=read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=read(); y=read();</span><br><span class="line">        add(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">if</span> (hungray(i)) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d"</span>, i); <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> k=i; </span><br><span class="line">        <span class="keyword">while</span> (q[k]!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, q[k]);</span><br><span class="line">            k=q[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Update<br>第一次看见生日快乐版的google，好好保存。。。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/屏幕快照%202015-09-04%20下午10.50.52.png" alt="再看到的话就成准高三狗了。。。
"></p>]]></content>
    <summary type="html">
    <![CDATA[<p>突然发现今天是我生日，并没有什么感觉，只觉得越大越不中用了。。。<br>]]>
    
    </summary>
    
      <category term="二分图" scheme="http://blog.fractal128.tk/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[网络流24题] 太空飞行计划]]></title>
    <link href="http://blog.fractal128.tk/2015/09/03/networkflow2/"/>
    <id>http://blog.fractal128.tk/2015/09/03/networkflow2/</id>
    <published>2015-09-03T15:44:07.000Z</published>
    <updated>2015-09-03T16:21:54.000Z</updated>
    <content type="html"><![CDATA[<p>延续低效啃题传统，又是一个下午，调了半天才发现自己不会求最小割方案。。。<br><a id="more"></a><br>进度条：＃＃－－－－－－－－－－－－－－－－－－－－－－ 2/24</p>
<p>题目链接<a href="http://cojs.tk/cogs/problem/problem.php?pid=727" target="_blank" rel="external">戳这里</a></p>
<h2 id="Description">Description</h2><p>W 教授正在为国家航天中心计划一系列的太空飞行。每次太空飞行可进行一系列商业性实验而获取利润。现已确定了一个可供选择的实验集合E={E1,E2,…,Em}，和进行这些实验需要使用的全部仪器的集合I={ I1, I2,…,In }。实验Ej 需要用到的仪器是I的子集Rj∈I。配置仪器Ik 的费用为ck 美元。实验Ej 的赞助商已同意为该实验结果支付pj 美元。W教授的任务是找出一个有效算法，确定在一次太空飞行中要进行哪些实验并因此而配置哪些仪器才能使太空飞行的净收益最大。这里净收益是指进行实验所获得的全部收入与配置仪器的全部费用的差额。</p>
<h2 id="Solution">Solution</h2><p>一开始根本不会做，看了论文才发现这其实是一种最小割的经典模型。。叫做最大权闭合图。稍微解释下模型的转换方法，严谨证明以及各种定义可以参见胡伯涛论文<a href="http://wenku.baidu.com/link?url=lfPkq0BOD2L6zby2PSRW48XNjfTmj9Xwyf-gTh2igRs2txeOWq8FPpx43Bd7I9j-j628LlPJPOoCu8cBRdOypSTal_A-6IGs-1aZtqzNMcq" target="_blank" rel="external">最小割模型在信息学竞赛中的应用</a><br>初步思考：将各个试验向他所需要的各个器材连边，这张图的最大权闭合图的权值就是所求的答案。（表示器材的点应该为负值）<br>先来看一下为什么这道题是求最大权闭合图</p>
<ul>
<li>因为每个试验要求所有需要器材缺一不可，所以选择的每个试验所连出去的边都会被选择入被选子图，即该子图一定为闭合图</li>
<li>题目要求最大收益，即最大的所有的试验所得－器材开支，刚好为所有所选合法子图中点权值和的最大值。</li>
</ul>
<p>具体方法是将试验-器材边的容量设为INF,并且从源点S向所有试验点连边，容量为试验收益，相同的，器材点和汇点T连边，容量为器材开支的绝对值（⚠注意），在此基础上跑最小割，最终答案为与S相连未被割去的边和与T相连被割去的边的容量和。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">20000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF <span class="number">1000000007</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> edge&#123;</span><br><span class="line">    <span class="keyword">int</span> cap,to,op,flow;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cur[maxn],nex[maxn],fir[maxn];</span><br><span class="line"><span class="keyword">int</span> c[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> ans1[maxn],d[maxn],ans2[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,s,t,size,sum;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cap)</span></span>&#123;</span><br><span class="line">    e[++size].to=y; e[size].cap=cap; e[size].op=size+<span class="number">1</span>; nex[size]=fir[x]; fir[x]=size;</span><br><span class="line">    e[++size].to=x; e[size].cap=<span class="number">0</span>; e[size].op=size-<span class="number">1</span>; nex[size]=fir[y]; fir[y]=size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p[x]); add(s,x,p[x]);</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">1</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch!=<span class="string">'\r'</span>&amp;&amp;ch!=<span class="string">'\n'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((ch&gt;<span class="string">'9'</span> || ch&lt;<span class="string">'0'</span>) &amp;&amp; k!=<span class="number">0</span>)&#123;</span><br><span class="line">            add(x,k+n,INF); k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>) k=k*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;<span class="number">0</span>) add(x,k+n,INF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    vis[s]=<span class="number">1</span>; Q.push(s); d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow)&#123;</span><br><span class="line">                vis[v]=<span class="number">1</span>; Q.push(v); d[v]=d[x]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (vis[t]) <span class="keyword">return</span> <span class="literal">true</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==t||a==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>,f;</span><br><span class="line">    <span class="keyword">while</span> (cur[x]!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=cur[x];</span><br><span class="line">        <span class="keyword">if</span> (d[x]+<span class="number">1</span>==d[e[u].to] &amp;&amp; (f=dfs(e[u].to,min(a,e[u].cap-e[u].flow))) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            e[u].flow+=f; e[e[u].op].flow-=f;</span><br><span class="line">            flow+=f;</span><br><span class="line">            a-=f;</span><br><span class="line">            <span class="keyword">if</span> (a==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur[x]=nex[cur[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bfs())&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n+m+<span class="number">1</span>; i++) cur[i]=fir[i];</span><br><span class="line">        flow += dfs(s,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> u=fir[x]; u; u=nex[u])&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[u].to;</span><br><span class="line">        <span class="keyword">if</span> (!vis[v]&amp;&amp;e[u].cap&gt;e[u].flow) Dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    Dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=size; i++) </span><br><span class="line">    <span class="keyword">if</span> (e[i].cap&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> y=e[i].to,x=e[e[i].op].to;</span><br><span class="line">        <span class="keyword">if</span> ((vis[x]^vis[y])==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (y==t) &#123;sum-=e[i].cap, ans2[++ans2[<span class="number">0</span>]]=x;&#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (x==s) &#123;sum+=e[i].cap, ans1[++ans1[<span class="number">0</span>]]=y;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ans1+<span class="number">1</span>,ans1+<span class="number">1</span>+ans1[<span class="number">0</span>]); sort(ans2+<span class="number">1</span>,ans2+<span class="number">1</span>+ans2[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=ans1[<span class="number">0</span>]; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans1[i]); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=ans2[<span class="number">0</span>]; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans2[i]-n); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    s=<span class="number">0</span>; t=n+m+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        read(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c[i]);</span><br><span class="line">        add(i+n,t,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    dinic();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>延续低效啃题传统，又是一个下午，调了半天才发现自己不会求最小割方案。。。<br>]]>
    
    </summary>
    
      <category term="最大流" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
      <category term="最小割" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="网络流" scheme="http://blog.fractal128.tk/categories/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
</feed>
