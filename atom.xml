<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fractal128 ： We are OIers]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.fractal128.tk/"/>
  <updated>2015-10-23T15:31:04.000Z</updated>
  <id>http://blog.fractal128.tk/</id>
  
  <author>
    <name><![CDATA[fractal128]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[BZOJ2829: 信用卡凸包]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj2829/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj2829/</id>
    <published>2015-10-23T13:30:03.000Z</published>
    <updated>2015-10-23T15:31:04.000Z</updated>
    <content type="html"><![CDATA[<p>玄学。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p><img src="http://7xl5lt.com1.z0.glb.clouddn.com/118.jpg.gif" alt=""></p>
<h2 id="Solution">Solution</h2><p>复习一下凸包。<br>看错了题以后将一切怪罪于玄学是我的不对［客观唯心主义片面性</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi acos(-<span class="number">1</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, sum, tot;</span><br><span class="line"><span class="keyword">double</span> a, b, R, theta; </span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> point&#123;</span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    point <span class="keyword">operator</span> -(point q)&#123;</span><br><span class="line">        point t;</span><br><span class="line">        t.x = x - q.x; t.y = y - q.y;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> +(point q)&#123;</span><br><span class="line">        point t;</span><br><span class="line">        t.x = x + q.x; t.y = y + q.y;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="string">" "</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">point <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> theta)</span></span>&#123;</span><br><span class="line">        point t;</span><br><span class="line">        t.x = <span class="function">x * <span class="title">cos</span><span class="params">(theta)</span> - y * <span class="title">sin</span><span class="params">(theta)</span></span>;</span><br><span class="line">        t.y = <span class="function">x * <span class="title">sin</span><span class="params">(theta)</span> + y * <span class="title">cos</span><span class="params">(theta)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;s[maxn], d[<span class="number">5</span>], k[maxn], p[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(point a, point b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x &lt; b.x || (a.x == b.x &amp;&amp; a.y &lt; b.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(point p, point q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p.x * q.y - p.y * q.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(point p, point q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> dx = p.x - q.x, dy = p.y - q.y;</span><br><span class="line">    <span class="keyword">double</span> t = <span class="built_in">sqrt</span>(dx * dx + dy * dy);</span><br><span class="line">    <span class="keyword">if</span> (t &lt; <span class="number">1e-10</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="keyword">else</span> <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Andrew</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sort(s, s + sum, cmp);</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sum; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span> (tot &gt; <span class="number">1</span> &amp;&amp; cross(p[tot - <span class="number">1</span>] - p[tot - <span class="number">2</span>], s[i] - p[tot - <span class="number">2</span>]) &lt;= <span class="number">0</span>) tot--;</span><br><span class="line">        p[tot++] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = tot;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = sum - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">while</span> (tot &gt; <span class="function">k &amp;&amp; <span class="title">cross</span><span class="params">(p[tot - <span class="number">1</span>] - p[tot - <span class="number">2</span>], s[i] - p[tot - <span class="number">2</span>])</span> &lt;</span>= <span class="number">0</span>) tot--;</span><br><span class="line">        p[tot++] = s[i]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%lf%lf%lf"</span>, &amp;n, &amp;b, &amp;a, &amp;R);</span><br><span class="line">    b -= <span class="number">2</span> * R; a -= <span class="number">2</span>*R;</span><br><span class="line">    d[<span class="number">1</span>].x = a/<span class="number">2</span>; d[<span class="number">1</span>].y = b/<span class="number">2</span>;</span><br><span class="line">    d[<span class="number">2</span>].x = -a/<span class="number">2</span>; d[<span class="number">2</span>].y = b/<span class="number">2</span>;</span><br><span class="line">    d[<span class="number">3</span>].x = -a/<span class="number">2</span>; d[<span class="number">3</span>].y = -b/<span class="number">2</span>;</span><br><span class="line">    d[<span class="number">4</span>].x = a/<span class="number">2</span>; d[<span class="number">4</span>].y = -b/<span class="number">2</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;k[i].x, &amp;k[i].y, &amp;theta);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">4</span>; j++)&#123;</span><br><span class="line">            point t = d[j].rotate(theta);</span><br><span class="line">            s[sum++] = t + k[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Andrew();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> ans = dist(p[tot - <span class="number">2</span>], p[<span class="number">0</span>]) + <span class="number">2</span> * pi * R;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot - <span class="number">2</span>; i++)&#123;</span><br><span class="line">        ans = ans + dist(p[i], p[i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>玄学。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="凸包" scheme="http://blog.fractal128.tk/tags/%E5%87%B8%E5%8C%85/"/>
    
      <category term="计算几何" scheme="http://blog.fractal128.tk/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="计算几何" scheme="http://blog.fractal128.tk/categories/OI/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1699: [Usaco2007 Jan]Balanced Lineup排队]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj1699/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj1699/</id>
    <published>2015-10-23T13:29:52.000Z</published>
    <updated>2015-10-23T15:25:32.000Z</updated>
    <content type="html"><![CDATA[<p>复习题。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>每天,农夫 John 的N(1 &lt;= N &lt;= 50,000)头牛总是按同一序列排队. 有一天, John 决定让一些牛们玩一场飞盘比赛. 他准备找一群在对列中为置连续的牛来进行比赛. 但是为了避免水平悬殊,牛的身高不应该相差太大. John 准备了Q (1 &lt;= Q &lt;= 180,000) 个可能的牛的选择和所有牛的身高 (1 &lt;= 身高 &lt;= 1,000,000). 他想知道每一组里面最高和最低的牛的身高差别. 注意: 在最大数据上, 输入和输出将占用大部分运行时间.</p>
<h2 id="Solution">Solution</h2><p>RMQ裸题。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn][<span class="number">20</span>], b[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> l, r, n, q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>) ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">'0'</span>; ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_max</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">1</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (tmp * <span class="number">2</span> &lt;= (r - l +<span class="number">1</span>))&#123;</span><br><span class="line">        x ++; tmp *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max(b[l][x], b[r - tmp + <span class="number">1</span>][x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_min</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">1</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (tmp * <span class="number">2</span> &lt;= (r - l +<span class="number">1</span>))&#123;</span><br><span class="line">        x ++; tmp *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(a[l][x], a[r - tmp + <span class="number">1</span>][x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(); q = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i][<span class="number">0</span>] = b[i][<span class="number">0</span>] = read();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; t &lt;= n; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = i + t; </span><br><span class="line">        a[i][j] = a[i][j - <span class="number">1</span>];</span><br><span class="line">        b[i][j] = b[i][j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (k &lt;= n)&#123;</span><br><span class="line">            a[i][j] = min(a[i][j - <span class="number">1</span>], a[k][j - <span class="number">1</span>]);</span><br><span class="line">            b[i][j] = max(b[i][j - <span class="number">1</span>], b[k][j - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        t *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; i++)&#123;</span><br><span class="line">        l = read(); r = read();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, get_max() - get_min());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>复习题。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="USACO" scheme="http://blog.fractal128.tk/tags/USACO/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1115: [POI2009]石子游戏Kam]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj1115/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj1115/</id>
    <published>2015-10-23T13:29:32.000Z</published>
    <updated>2015-10-23T15:22:55.000Z</updated>
    <content type="html"><![CDATA[<p>其实这题是不会的。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>有N堆石子，除了第一堆外，每堆石子个数都不少于前一堆的石子个数。两人轮流操作每次操作可以从一堆石子中移走任意多石子，但是要保证操作后仍然满足初始时的条件谁没有石子可移时输掉游戏。问先手是否必胜。</p>
<h2 id="Solution">Solution</h2><p>玄学。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,a[<span class="number">1001</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    T=read();</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        n=read();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            a[i]=read();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">1</span>;i-=<span class="number">2</span>)</span><br><span class="line">            ans^=(a[i]-a[i-<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)ans^=a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(ans)<span class="built_in">printf</span>(<span class="string">"TAK\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NIE\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>其实这题是不会的。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="博弈论" scheme="http://blog.fractal128.tk/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="博弈论" scheme="http://blog.fractal128.tk/categories/OI/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1968: [Ahoi2005]COMMON 约数研究]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj1968/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj1968/</id>
    <published>2015-10-23T13:29:32.000Z</published>
    <updated>2015-10-23T15:30:46.000Z</updated>
    <content type="html"><![CDATA[<p>水。。。<a id="more"></a></p>
<h2 id="Description">Description</h2><p><img src="http://7xl5lt.com1.z0.glb.clouddn.com/1968.jpg.gif" alt=""></p>
<h2 id="Solution">Solution</h2><p>直接枚举因子即可</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000001</span>], c[<span class="number">1000001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        ans += n/i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>水。。。]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2463: [中山市选2009]谁能赢呢？]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj2463/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj2463/</id>
    <published>2015-10-23T13:29:10.000Z</published>
    <updated>2015-10-23T15:30:15.000Z</updated>
    <content type="html"><![CDATA[<p>水。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>小明和小红经常玩一个博弈游戏。给定一个n×n的棋盘，一个石头被放在棋盘的左上角。他们轮流移动石头。每一回合，选手只能把石头向上，下，左，右四个方向移动一格，并且要求移动到的格子之前不能被访问过。谁不能移动石头了就算输。假如小明先移动石头，而且两个选手都以最优策略走步，问最后谁能赢？</p>
<h2 id="Solution">Solution</h2><p>奇数先手必胜，反之反之。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n); <span class="keyword">if</span> (n== <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> ((n &amp; <span class="number">1</span>)) <span class="built_in">puts</span>(<span class="string">"Bob"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Alice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>水。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="博弈论" scheme="http://blog.fractal128.tk/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="博弈论" scheme="http://blog.fractal128.tk/categories/OI/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1045(1465): [HAOI2008] 糖果传递]]></title>
    <link href="http://blog.fractal128.tk/2015/10/23/bzoj1045/"/>
    <id>http://blog.fractal128.tk/2015/10/23/bzoj1045/</id>
    <published>2015-10-23T13:26:48.000Z</published>
    <updated>2015-10-23T15:20:00.000Z</updated>
    <content type="html"><![CDATA[<p>什么题都做不出来惹。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>有n个小朋友坐成一圈，每人有ai个糖果。每人只能给左右两人传递糖果。每人每次传递一个糖果代价为1。</p>
<p>求使所有人获得均等糖果的最小代价。</p>
<h2 id="Solution">Solution</h2><p>思路很关键！<br>设c[i]为第i位同学交给他右边的人的糖果数（n的右边为1)，那么必定满足下式<br>$$ Ave = a_i - c_i + c_{i-1} (边界例外)$$<br>然后又可以知道<br>$$ Ans = \sum_{i &lt;= n}^{i = 1}{|c_i|}$$<br>现将c[i]的表达式写出来：<br>$$c_2 = a_2 - Ave + c_{1}<br>$$<br>$$<br>c_3 = a_3 - Ave + c_{2} = a_3 - Ave + a_2 - Ave + c_1<br>$$<br>$$…$$<br>这样我们就可以写出ans的终极形式：<br>$$ Ans = \sum_{i &lt;= n}^{i = 1}{(c_1+\sum_{k &lt;= i}^{k = 2}{a_k-k*Ave})}$$<br>问题成功转化为求取数轴上一点，使其到其余点的距离最小，求其中位数即可。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll sum;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>], c[<span class="number">1000000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ave = sum / n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        c[i] = c[i - <span class="number">1</span>] + a[i] - ave;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(c + <span class="number">1</span>, c + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> T = c[(n &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) ans += <span class="built_in">abs</span>(c[i] - T);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>什么题都做不出来惹。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="找规律" scheme="http://blog.fractal128.tk/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="其他" scheme="http://blog.fractal128.tk/categories/OI/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UVa11774:Doom‘s Day]]></title>
    <link href="http://blog.fractal128.tk/2015/10/18/uva11774/"/>
    <id>http://blog.fractal128.tk/2015/10/18/uva11774/</id>
    <published>2015-10-17T17:05:51.000Z</published>
    <updated>2015-10-17T18:23:29.000Z</updated>
    <content type="html"><![CDATA[<p>画了一个晚自习的图，发现看错题了，这智商啊。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>给定一个3^n*3^m的矩阵，要求每次按行优先取出，按列优先放回，问几次能回复原状</p>
<h2 id="Solution">Solution</h2><p>写个暴力找规律，发现ans = (n+m)/gcd(n,m)<br>然后就不懂了，为什么要放到置换分类呢？<br>之后看到了强人的强文。。。</p>
<blockquote>
<p>We can associate at each cell a base 3-number, the log3(R) most significant digits is the index of the row of the cell and the log3(C) least significant digits is the index of his column.</p>
<p>What are the transformation now ?</p>
<p>position in row-major order is rC+c</p>
<p>position in column-major order is cR+r</p>
<p>We should shift down by log3(C) the most significant digits and shift up the least significant digits by log3(R).</p>
<p>C=3^6, R=3^4</p>
<p>now : rrrrcccccc (rrrr)(cccccc)</p>
<p>then: ccccccrrrr (cccc)(ccrrrr)</p>
<p>the first 4 digit are always the number of row (0-indexed) and the last 6 digit the number of column of the cell (0-indexed)</p>
<p>Now this process is valid for each possible r or c, so we can choose r=1 and c=0 and find a the length of this recurring cycle.</p>
<p>Calling L the length of this basic cycle, all other cycle are combination of this one so the only possible length are divisor of L, so the solution of our problem is (m+n)/L</p>
<p>rrrr=0001</p>
<p>cccccc=000000</p>
<p>day 0 : 0001000000 (0001)(000000)</p>
<p>day 1 : 0000000001 (0000)(000001)</p>
<p>day 2 : 0000010000 (0000)(010000)</p>
<p>day 3 : 0100000000 (0100)(000000)</p>
<p>day 4 : 0000000100 (0000)(000100)</p>
<p>day 5 : 0001000000 (0001)(000000)</p>
<p>For solving this problem we can find the the minimal x such that x*n mod (n+m)=0, this imply x=gcd(n, n+m)=gcd(n, m).</p>
<p>The solution of our original problem is (n+m)/x or (n+m)/gcd(n,m).</p>
</blockquote>
<p>其实是看不懂的，在patina27英语狂魔的<del>极其不屑</del>耐心帮助下，半懂不懂的大概可以忽悠HJ了。</p>
<p>把行号和列好写成3进制放在一起，然后发现每一次的变换就是把整个数左移，所以得到ans为<code>n*x=0(mod(n+m))</code>的最小正整数解，既(n+m)/gcd(n,m)。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, n, m, ans, T;</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn], g[maxn][maxn], h[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)</span><br><span class="line">        <span class="keyword">if</span> (h[i][j] != f[i][j]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) <span class="keyword">return</span> x; <span class="keyword">else</span> <span class="keyword">return</span> gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; n) swap(n, m);</span><br><span class="line">        <span class="keyword">int</span> t = (n + m)/gcd(n, m);</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">"Case %d: %d\n"</span>,++a, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    a = <span class="number">1</span>; b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= max(n, m); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= n) a *= <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= m) b *= <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ind = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)&#123;</span><br><span class="line">            f[i][j] = ind ++;	</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(g, f, <span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>, y = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++)&#123;</span><br><span class="line">                h[i][j] = g[x][y];</span><br><span class="line">                y++;</span><br><span class="line">                <span class="keyword">if</span> (y &gt; b)&#123;</span><br><span class="line">                    x++; y = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">if</span> (check())&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memcpy</span>(g, h, <span class="keyword">sizeof</span>(f));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>画了一个晚自习的图，发现看错题了，这智商啊。。。<br>]]>
    
    </summary>
    
      <category term="uva" scheme="http://blog.fractal128.tk/tags/uva/"/>
    
      <category term="找规律" scheme="http://blog.fractal128.tk/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
      <category term="置换" scheme="http://blog.fractal128.tk/tags/%E7%BD%AE%E6%8D%A2/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="其他" scheme="http://blog.fractal128.tk/categories/OI/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2186: [Sdoi2008]沙拉公主的困惑]]></title>
    <link href="http://blog.fractal128.tk/2015/10/17/bzoj2186/"/>
    <id>http://blog.fractal128.tk/2015/10/17/bzoj2186/</id>
    <published>2015-10-17T07:35:51.000Z</published>
    <updated>2015-10-17T09:14:42.000Z</updated>
    <content type="html"><![CDATA[<p>在BZOJ和code vs上WA满10发。。。太难了<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>大富翁国因为通货膨胀，以及假钞泛滥，政府决定推出一项新的政策：现有钞票编号范围为1到N的阶乘，但是，政府只发行编号与M!互质的钞票。房地产第一大户沙拉公主决定预测一下大富翁国现在所有真钞票的数量。现在，请你帮助沙拉公主解决这个问题，由于可能张数非常大，你只需计算出对R取模后的答案即可。R是一个质数。</p>
<h2 id="Solution">Solution</h2><p>一开始想着用莫比乌斯函数乱搞容斥原理，什么鬼。。。大概是中了初赛时候的毒了，当时兴致勃勃在某神犇面前炫耀自己初赛满分的时候真是太SB了。。。<br>正解：欧拉函数。ans=phi(m!) * n! / m!<br>代入 $$ φ(x)=x\cdot\prod( 1-{1\over{p_i}}) $$<br>然后可得</p>
<p>$$ ans=n!*\prod_{p_i&lt;=m}( 1-{1\over{p_i}})$$</p>
<h2 id="Code">Code</h2><p>ps.虽然在BZoj上A掉了，然而并不会写模数下求不出逆元的情况，求大爷们指教。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10000005</span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn], fac[maxn], inv[maxn], t[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> T, M, tot, x, y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_prime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])&#123;</span><br><span class="line">            p[++tot] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= tot; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (p[j] * i &gt; maxn) <span class="keyword">break</span>;</span><br><span class="line">            vis[p[j] * i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>)&#123;</span><br><span class="line">        x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d = exgcd(b, a % b, x, y);</span><br><span class="line">        <span class="keyword">int</span> t = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = t - a / b * y;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_inv</span><span class="params">()</span></span>&#123;</span><br><span class="line">    inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn&amp;&amp;i&lt;M;i++)</span><br><span class="line">        inv[i]=(M-(ll)M/i*inv[M%i]%M);</span><br><span class="line">    <span class="keyword">return</span> ; <span class="comment">//递推法求逆元</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> d = exgcd(p[i], M, x, y);</span><br><span class="line">        <span class="keyword">if</span> (d == <span class="number">1</span>) inv[p[i]] = (x + M) % M;</span><br><span class="line">    &#125;<span class="comment">//exgcd求逆元</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    T = read(); M = read();</span><br><span class="line">    get_prime();</span><br><span class="line">    get_inv();</span><br><span class="line">    fac[<span class="number">0</span>] = t[<span class="number">0</span>] = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++)&#123;</span><br><span class="line">        fac[i] = (ll) fac[i - <span class="number">1</span>] * i % M; </span><br><span class="line">        t[i] = t[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">1</span> &amp;&amp; !vis[i])&#123;</span><br><span class="line">            t[i] = (ll) t[i] * (i - <span class="number">1</span>) % M * inv[i] % M;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        n = read(); m = read();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ((ll) fac[n] * t[m] % M) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>在BZOJ和code vs上WA满10发。。。太难了<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="乘法逆元" scheme="http://blog.fractal128.tk/tags/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="欧拉函数" scheme="http://blog.fractal128.tk/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1230: [Usaco2008 Nov]lites 开关灯]]></title>
    <link href="http://blog.fractal128.tk/2015/10/17/bzoj1230/"/>
    <id>http://blog.fractal128.tk/2015/10/17/bzoj1230/</id>
    <published>2015-10-17T07:35:42.000Z</published>
    <updated>2015-10-17T14:11:25.000Z</updated>
    <content type="html"><![CDATA[<p>刷水都刷不动了，唉。。。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>Farmer John尝试通过和奶牛们玩益智玩具来保持他的奶牛们思维敏捷. 其中一个大型玩具是牛栏中的灯. N (2 &lt;= N &lt;= 100,000) 头奶牛中的每一头被连续的编号为1..N, 站在一个彩色的灯下面.刚到傍晚的时候, 所有的灯都是关闭的. 奶牛们通过N个按钮来控制灯的开关; 按第i个按钮可以改变第i个灯的状态.奶牛们执行M (1 &lt;= M &lt;= 100,000)条指令, 每个指令都是两个整数中的一个(0 &lt;= 指令号 &lt;= 1). 第1种指令(用0表示)包含两个数字S_i和E_i (1 &lt;= S_i &lt;= E_i &lt;= N), 它们表示起始开关和终止开关. 奶牛们只需要把从S_i到E_i之间的按钮都按一次, 就可以完成这个指令. 第2种指令(用1表示)同样包含两个数字S_i和E_i (1 &lt;= S_i &lt;= E_i &lt;= N), 不过这种指令是询问从S_i到E_i之间的灯有多少是亮着的. 帮助FJ确保他的奶牛们可以得到正确的答案.</p>
<h2 id="Solution">Solution</h2><p>线段树＋标记下传</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3000010</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, ql, qr;</span><br><span class="line"><span class="keyword">int</span> d[maxn], s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    d[x] = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    d[x * <span class="number">2</span>] ^= <span class="number">1</span>; s[x * <span class="number">2</span>] = (mid + <span class="number">1</span> - l) - s[x * <span class="number">2</span>];</span><br><span class="line">    d[x * <span class="number">2</span> + <span class="number">1</span>] ^= <span class="number">1</span>; s[x * <span class="number">2</span> + <span class="number">1</span>] = (r - mid) - s[x *<span class="number">2</span> + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (d[x] == <span class="number">1</span>) pd(x, l, r);</span><br><span class="line">    <span class="keyword">if</span> (ql &lt;= l &amp;&amp; r &lt;= qr)&#123;</span><br><span class="line">        d[x] = <span class="number">1</span>; s[x] = (r - l +<span class="number">1</span>) - s[x];</span><br><span class="line"><span class="comment">//		cout &lt;&lt; l &lt;&lt; " " &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= mid ) turn(x * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">if</span> (qr &gt; mid) turn(x * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        s[x] = s[<span class="number">2</span> * x] + s[x * <span class="number">2</span> + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (d[x] == <span class="number">1</span>) pd(x, l, r);</span><br><span class="line">    <span class="keyword">if</span> (ql &lt;= l &amp;&amp; r &lt;= qr)&#123;</span><br><span class="line">        <span class="keyword">return</span> s[x];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (ql &lt;= mid ) sum += query(x * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">    <span class="keyword">if</span> (qr &gt; mid) sum += query(x * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    n = read(); m = read();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = read();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> ql, qr;</span><br><span class="line">            ql = read(); qr = read();</span><br><span class="line">            turn(<span class="number">1</span>, <span class="number">1</span>, n, ql, qr); </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ql, qr;</span><br><span class="line">            ql = read(); qr = read();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, query(<span class="number">1</span>, <span class="number">1</span>, n, ql, qr));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=18161816&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>刷水都刷不动了，唉。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="USACO" scheme="http://blog.fractal128.tk/tags/USACO/"/>
    
      <category term="线段树" scheme="http://blog.fractal128.tk/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1355: [Baltic2009]Radio Transmission]]></title>
    <link href="http://blog.fractal128.tk/2015/10/17/bzoj1355/"/>
    <id>http://blog.fractal128.tk/2015/10/17/bzoj1355/</id>
    <published>2015-10-17T07:34:40.000Z</published>
    <updated>2015-10-17T08:35:46.000Z</updated>
    <content type="html"><![CDATA[<p>KMP模板复习。。［不会早说嘛。。。</p>
<a id="more"></a>
<h2 id="Description">Description</h2><p>给你一个字符串，它是由某个字符串不断自我连接形成的。 但是这个字符串是不确定的，现在只想知道它的最短长度是多少.</p>
<h2 id="Solution">Solution</h2><p>ans = n - p[n]<br>其中p[n]即为KMP算法中的失配函数。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">1000000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, i, j, ans;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> p[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; s[j + <span class="number">1</span>] != s[i]) j = p[j];</span><br><span class="line">        <span class="keyword">if</span> (s[j+<span class="number">1</span>] == s[i]) p[i] = (++ j); <span class="keyword">else</span> p[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, n - p[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>KMP模板复习。。［不会早说嘛。。。</p>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="KMP" scheme="http://blog.fractal128.tk/tags/KMP/"/>
    
      <category term="字符串" scheme="http://blog.fractal128.tk/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="KMP算法" scheme="http://blog.fractal128.tk/categories/OI/KMP%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1600: [Usaco2008 Oct]建造栅栏]]></title>
    <link href="http://blog.fractal128.tk/2015/10/17/bzoj1600/"/>
    <id>http://blog.fractal128.tk/2015/10/17/bzoj1600/</id>
    <published>2015-10-16T17:24:16.000Z</published>
    <updated>2015-10-17T12:39:33.000Z</updated>
    <content type="html"><![CDATA[<p>OTL.<br><a id="more"></a><br>link: <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1600" target="_blank" rel="external">here</a></p>
<h2 id="Description">Description</h2><p>勤奋的Farmer John想要建造一个四面的栅栏来关住牛们。他有一块长为n（4&lt;=n&lt;=2500）的木板，他想把这块本板切成4块。这四块小木板可以是任何一个长度只要Farmer John能够把它们围成一个合理的四边形。他能够切出多少种不同的合理方案。注意： *只要大木板的切割点不同就当成是不同的方案（像全排列那样），不要担心另外的特殊情况，go ahead。 *栅栏的面积要大于0. *输出保证答案在longint范围内。 *整块木板都要用完。</p>
<h2 id="Solution">Solution</h2><p>只要保证任意一边小于其余三边之和，就可以保证四边形合法性。<br>f[i][j]表示前i条边何为j的情况，暴力转移即可。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">3000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, n, m, ans, T;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5</span>][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    a = (n+<span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= min(j, a); k++)</span><br><span class="line">            f[i][j] += f[i - <span class="number">1</span>][j - k];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[<span class="number">4</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>OTL.<br>]]>
    
    </summary>
    
      <category term="USACO" scheme="http://blog.fractal128.tk/tags/USACO/"/>
    
      <category term="一般递推" scheme="http://blog.fractal128.tk/tags/%E4%B8%80%E8%88%AC%E9%80%92%E6%8E%A8/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/categories/OI/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1430: 小猴打架]]></title>
    <link href="http://blog.fractal128.tk/2015/10/11/bzoj1430/"/>
    <id>http://blog.fractal128.tk/2015/10/11/bzoj1430/</id>
    <published>2015-10-10T16:41:43.000Z</published>
    <updated>2015-10-16T15:55:47.000Z</updated>
    <content type="html"><![CDATA[<p>想起今天（其实是昨天）做初赛的时候看到一道算prufer编码的题目居然发现自己不会做了，赶紧学一发。。。<br><a id="more"></a></p>
<h2 id="Prufer编码">Prufer编码</h2><p><a href="http://www.cnblogs.com/zhj5chengfeng/archive/2013/08/23/3278557.html" target="_blank" rel="external">大神的博客</a><br>看了这个学会的。。。图文并茂，深入浅出，反正让我写肯定是一团浆糊。</p>
<h2 id="Description">Description</h2><p>一开始森林里面有N只互不相识的小猴子，它们经常打架，但打架的双方都必须不是好朋友。每次打完架后，打架的双方以及它们的好朋友就会互相认识，成为好朋友。经过N-1次打架之后，整个森林的小猴都会成为好朋友。 现在的问题是，总共有多少种不同的打架过程。 比如当N=3时，就有{1-2,1-3}{1-2,2-3}{1-3,1-2}{1-3,2-3}{2-3,1-2}{2-3,1-3}六种不同的打架过程。</p>
<h2 id="Solution">Solution</h2><p>唯一的一题不需要高精度的prufer裸题，可得<br>$$ ans=n^{n-2}*(n-1)!$$</p>
<h2 id="Code">Code</h2><p>没写ll跪了两发WA。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MOD <span class="number">9999991</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a, ll b, ll p)</span></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>)&#123;ans *= a, ans %= MOD;&#125;</span><br><span class="line">        a *= a; a %= MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">ll n,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    ans = <span class="built_in">pow</span>(n, n - <span class="number">2</span>, MOD);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ans *= i; ans %=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>想起今天（其实是昨天）做初赛的时候看到一道算prufer编码的题目居然发现自己不会做了，赶紧学一发。。。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="prufer编码" scheme="http://blog.fractal128.tk/tags/prufer%E7%BC%96%E7%A0%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="prufer编码" scheme="http://blog.fractal128.tk/categories/OI/prufer%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2442: [Usaco2011 Open]修剪草坪]]></title>
    <link href="http://blog.fractal128.tk/2015/10/10/bzoj2442/"/>
    <id>http://blog.fractal128.tk/2015/10/10/bzoj2442/</id>
    <published>2015-10-10T12:18:58.000Z</published>
    <updated>2015-10-10T13:39:15.000Z</updated>
    <content type="html"><![CDATA[<p>水题保平安。。。初赛求过，RP++<br><a id="more"></a><br>link:click <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2442" target="_blank" rel="external">here</a></p>
<h2 id="Description">Description</h2><p>在一年前赢得了小镇的最佳草坪比赛后，FJ变得很懒，再也没有修剪过草坪。现在，<br>新一轮的最佳草坪比赛又开始了，FJ希望能够再次夺冠。</p>
<p>然而，FJ的草坪非常脏乱，因此，FJ只能够让他的奶牛来完成这项工作。FJ有N<br>(1 &lt;= N &lt;= 100,000)只排成一排的奶牛，编号为1…N。每只奶牛的效率是不同的，<br>奶牛i的效率为E_i(0 &lt;= E_i &lt;= 1,000,000,000)。</p>
<p>靠近的奶牛们很熟悉，因此，如果FJ安排超过K只连续的奶牛，那么，这些奶牛就会罢工<br>去开派对:)。因此，现在FJ需要你的帮助，计算FJ可以得到的最大效率，并且该方案中<br>没有连续的超过K只奶牛。</p>
<h2 id="Solution">Solution</h2><p>问题等价于在数列中取出一些数，这些数之间的距离不能超过K，求这些数的和的最小值T。那么问题答案变为SUM－T。<br>其中求T的时候可以使用DP＋单调数列。f[i]表示选了a[i]的前i个数的选取最小值，T=min{f[n-k],…,f[n-1],f[n]}</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">100010</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line">ll n, k, h, t;</span><br><span class="line">ll sum = <span class="number">0</span>, ans = <span class="number">10000000000000</span>;</span><br><span class="line">ll q[maxn], a[maxn], f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    freopen(<span class="string">"1.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"1.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"></span><br><span class="line">    n = read(); k = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i] = read(); sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    h = t = <span class="number">1</span>;</span><br><span class="line">    q[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span> (i - k - <span class="number">1</span> &gt; q[h]) h++;</span><br><span class="line">        f[i] = f[q[h]] + a[i];</span><br><span class="line">        <span class="keyword">while</span> (f[q[t]] &gt;= f[i]) t--;</span><br><span class="line">        q[++t] = i;</span><br><span class="line">        <span class="keyword">if</span> (i + k &gt;= n) ans = min(ans, f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>, sum - ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=16426514&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>水题保平安。。。初赛求过，RP++<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="USACO" scheme="http://blog.fractal128.tk/tags/USACO/"/>
    
      <category term="单调队列" scheme="http://blog.fractal128.tk/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="动态规划" scheme="http://blog.fractal128.tk/categories/OI/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ1595: [Usaco2008 Jan]人工湖]]></title>
    <link href="http://blog.fractal128.tk/2015/10/05/bzoj1595/"/>
    <id>http://blog.fractal128.tk/2015/10/05/bzoj1595/</id>
    <published>2015-10-05T11:14:48.000Z</published>
    <updated>2015-10-05T17:02:58.000Z</updated>
    <content type="html"><![CDATA[<p>2年前就写了，佩服我当时的勇气。<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/1.png" alt=""><br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>夏日那让人喘不过气的酷热将奶牛们的烦躁情绪推到了最高点．最终，约翰决定建一个人工湖供奶牛消暑之用．为了使湖看起来更加真实，约翰决定将湖的横截面建成N(1≤N≤105)个连续的平台高低错落的组合状，所有的平台从左到右按1到N依次编号．当然咯，在湖中注入水后，这些平台都将被淹没．    平台i在设计图上用它的宽度wi(l≤wi≤1000)和高度（你可以理解为该平台顶离约翰挖的地基的高度）Hi.（1≤Hi≤1000000）来描述的．所有平台的高度都是独一无二的．湖的边缘可以视为无限高的平台．下面给出了一张约翰的设计图：<br><img src="http://7xl5lt.com1.z0.glb.clouddn.com/2213.jpg.gif" alt=""><br>    按约翰的设想，在坑挖好后，他会以1单位每分钟的速度往最低的那个平台上注水．水在离开水管后立即下落，直到撞到平台顶或是更早些时候注入的水然后，与所有常温下的水一样，它会迅速地流动、扩散．简单起见，你可以认为这些都是在瞬间完成的．约翰想知道，对于每一个平台，它的顶部是从哪个时刻开始，与水面的距离至少为1单位长度．</p>
<h2 id="Solution">Solution</h2><p>双向链表加上模拟。<br>当时的变量名也是真醉了。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">var pre,nex:<span class="built_in">array</span>[<span class="number">0.</span><span class="number">.100001</span>] of int64;</span><br><span class="line">    a,w,h:<span class="built_in">array</span>[<span class="number">0.</span><span class="number">.100001</span>] of int64;</span><br><span class="line">    tot,all,min,now:int64;</span><br><span class="line">    i,n,s,x,qjc:longint;</span><br><span class="line"><span class="function">function <span class="title">find</span><span class="params">(x,y:longint)</span>:longint</span>;</span><br><span class="line">var min,u:longint;</span><br><span class="line">begin</span><br><span class="line">  <span class="keyword">if</span> y=<span class="number">0</span> then</span><br><span class="line">  begin</span><br><span class="line">    u:=pre[x];</span><br><span class="line">    <span class="keyword">while</span> u&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    begin</span><br><span class="line">      <span class="keyword">if</span> h[u]&gt;h[x] then <span class="keyword">break</span>;</span><br><span class="line">      x:=u;</span><br><span class="line">      u:=pre[u];</span><br><span class="line">    end;</span><br><span class="line">  end</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  begin</span><br><span class="line">    u:=nex[x];</span><br><span class="line">    <span class="keyword">while</span> u&lt;&gt;<span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    begin</span><br><span class="line">      <span class="keyword">if</span> h[u]&gt;h[x] then <span class="keyword">break</span>;</span><br><span class="line">      x:=u;</span><br><span class="line">      u:=nex[u];</span><br><span class="line">    end;</span><br><span class="line">  end;</span><br><span class="line">  <span class="built_in">exit</span>(x);</span><br><span class="line">end;</span><br><span class="line"><span class="function">begin</span><br><span class="line"></span><br><span class="line">  <span class="title">read</span><span class="params">(n)</span></span>;</span><br><span class="line">  min:=maxlongint;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="function">to n <span class="keyword">do</span></span><br><span class="line">  begin</span><br><span class="line">    <span class="title">read</span><span class="params">(w[i],h[i])</span></span>;</span><br><span class="line">    pre[i+<span class="number">1</span>]:=i;</span><br><span class="line">    nex[i-<span class="number">1</span>]:=i;</span><br><span class="line">    <span class="keyword">if</span> min&gt;h[i] then begin min:=h[i]; now:=i; end;</span><br><span class="line">  end;</span><br><span class="line">  pre[<span class="number">1</span>]:=<span class="number">0</span>;   all:=<span class="number">0</span>; tot:=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> tot&lt;&gt;n <span class="keyword">do</span></span><br><span class="line">  begin</span><br><span class="line">    <span class="keyword">if</span> tot&lt;&gt;<span class="number">0</span> then now:=find(s,qjc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    a[now]:=all+w[now];</span><br><span class="line">    inc(tot);</span><br><span class="line">    <span class="keyword">if</span> tot=n then <span class="keyword">break</span>;</span><br><span class="line">    x:=pre[now];</span><br><span class="line">    min:=maxlongint;</span><br><span class="line">    <span class="keyword">if</span> x&lt;&gt;<span class="number">0</span> then begin min:=h[x]; s:=x;  qjc:=<span class="number">0</span>; end;</span><br><span class="line">    x:=nex[now];</span><br><span class="line">    <span class="keyword">if</span> (x&lt;&gt;<span class="number">0</span>)and(min&gt;h[x]) then begin min:=h[x]; s:=x;  qjc:=<span class="number">1</span>; end;</span><br><span class="line"></span><br><span class="line">    inc(all,(min-h[now])*w[now]);</span><br><span class="line"></span><br><span class="line">    w[s]:=w[s]+w[now];</span><br><span class="line">    nex[pre[now]]:=nex[now];</span><br><span class="line">    pre[nex[now]]:=pre[now];</span><br><span class="line">  end;</span><br><span class="line">  <span class="keyword">for</span> i:=<span class="number">1</span> <span class="function">to n <span class="keyword">do</span> <span class="title">writeln</span><span class="params">(a[i])</span></span>;</span><br><span class="line">end.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[你对本页的描述]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="USACO" scheme="http://blog.fractal128.tk/tags/USACO/"/>
    
      <category term="数据结构" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="模拟" scheme="http://blog.fractal128.tk/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="水题" scheme="http://blog.fractal128.tk/categories/OI/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ3043: IncDec Sequence]]></title>
    <link href="http://blog.fractal128.tk/2015/10/05/bzoj3043/"/>
    <id>http://blog.fractal128.tk/2015/10/05/bzoj3043/</id>
    <published>2015-10-04T19:30:24.000Z</published>
    <updated>2015-10-07T06:01:49.000Z</updated>
    <content type="html"><![CDATA[<p>每天水一发。。。颓得不行啊刚又花了2小时看了<a href="http://www.missionimpossible.com" target="_blank" rel="external">碟中谍5</a>，假期余额已不足。<br><a id="more"></a></p>
<h2 id="Description">Description</h2><p>给定一个长度为n的数列{a1,a2…an}，每次可以选择一个区间[l,r]，使这个区间内的数都加一或者都减一。<br>问至少需要多少次操作才能使数列中的所有数都一样,并求出在保证最少次数的前提下,最终得到的数列有多少种。</p>
<h2 id="Solution">Solution</h2><p>求出数列的差分序列。<br>考虑每次对于一个字串[L,R]加1，等价于d[L]加1，d[R + 1]减1，反之则反之。那么我们可以采用正负数同时消去的方法得到最少的操作次数，设d[i](i ∈ [2,n])中正值的和为pos,负值为neg,那么第一问的ans就是max(pos, -neg)。<br>第二问则考虑，在正负消去都完成的情况下，还剩下abs(pos+neg)未消去，它可以选择和d[1]进行配对消去（修改[1,i]整一段的值），或是自己消去（增加或减少自己的值）。由此，a[1]既d[1]的取值则为ans2 = abs(pos+neg) + 1。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">500000</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll n, pos = <span class="number">0</span>, neg = <span class="number">0</span>;</span><br><span class="line">ll a[maxn], d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt; <span class="string">'9'</span> || ch &lt; <span class="string">'0'</span>)&#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = -<span class="number">1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>)&#123; x = x * <span class="number">10</span> + ch -<span class="string">'0'</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        a[i] = read(); d[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (d[i] &gt; <span class="number">0</span>) pos += d[i]; <span class="keyword">else</span> neg += d[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    neg *= -<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n%lld"</span>, max(pos, neg), <span class="built_in">abs</span>(pos - neg) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>每天水一发。。。颓得不行啊刚又花了2小时看了<a href="http://www.missionimpossible.com">碟中谍5</a>，假期余额已不足。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="数列差分" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E5%88%97%E5%B7%AE%E5%88%86/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="水题" scheme="http://blog.fractal128.tk/categories/OI/%E6%B0%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NOIP2015模拟题集]]></title>
    <link href="http://blog.fractal128.tk/2015/10/04/mock_noip2015/"/>
    <id>http://blog.fractal128.tk/2015/10/04/mock_noip2015/</id>
    <published>2015-10-04T14:39:49.000Z</published>
    <updated>2015-10-04T16:16:48.000Z</updated>
    <content type="html"><![CDATA[<p>收录模拟赛中一些我不会做的或是我侥幸做出的题。。。<br><a id="more"></a></p>
<h2 id="Problem:A">Problem:A</h2><h3 id="Description">Description</h3><p>给出一张n个点m条边的<em>带边权</em>无向图，询问从0到n-1这两点间是否有长度为T的路径。其中 2 &lt;= n &lt;= 50 , 1 &lt;= m &lt;= 100 , 1 &lt;=  &lt;= 10000 , 1 &lt;= T &lt;= 10^18 , Case &lt;= 5.</p>
<h3 id="Solution">Solution</h3><p>这么难，根本不会做。<a href="http://i301void.gitcafe.io" target="_blank" rel="external">I301void</a>在UOJ上问了一发，被瞬秒，还是太弱了。。。不过北大爷rzy没做出来我的心情还是愉悦得很啊。<br>30%：<br>当T&lt;= 10000的时候，可以设 vis[i][j] 代表到达第i个点时间为j是否合法。 这样是O(T*m)，可以拿到小数据。<br>另外的那30%：各种奇怪的骗分方法。选手自行考虑。<br>100%：<br>当T很大的时候，我们考虑 如果0 -&gt; x -&gt; n - 1路径时间为T，且 从x出发有一个时间为d的环，则 一定存在一个K满足 K + p*d = T（至少T满足条件），这样我们就能绕着环走p次就能构成一条时间为T的路径。<br>显然要求的路径一定经过 0，而且在合法情况下从0号点出发一定存在一条边，否则0号点和n - 1号就是不联通的。随便取一条边时间为d, 则能构成从0号点出发的一个时间为2d的环。这样原题就化为最短路问题了，dis[i][j] 代表到达i号点，时间为 j + p <em> 2d，最小的 j+p\</em>2d，<br>最后判断dis[n -1][T % 2d] 是否小于等于T即可。<br>实际上就是在30%的基础上缩减状态。<br>时间复杂度为O(m*d)。</p>
<p>其实，还是并不十分深刻理解，主要还是T的大小和做法的界限问题，并且也没能力证明该方法的正确性，希望明白真相的神犇们可以指点一下。</p>
<p>写了一下T很大时的部分：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">300</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxlen <span class="number">30000</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">1000000000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[maxn][maxlen], fir[maxn], nex[maxn], c[maxn], b[maxn];</span><br><span class="line"><span class="keyword">bool</span> inq[maxn];</span><br><span class="line"><span class="keyword">int</span> sum, n, m, T, d;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((x == <span class="number">0</span>) &amp;&amp; (d == <span class="number">0</span>))&#123;</span><br><span class="line">        d = <span class="number">2</span> * z;</span><br><span class="line">    &#125;</span><br><span class="line">    b[++sum] = y; c[sum] = z; nex[sum] = fir[x]; fir[x] = sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">    dis[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    inq[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> x = Q.front();</span><br><span class="line">        Q.pop(); inq[x] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> u = fir[x]; u; u = nex[u])&#123;</span><br><span class="line">            <span class="keyword">int</span> v = b[u], len = c[u];</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d; j++)</span><br><span class="line">            <span class="keyword">if</span> (dis[x][j] != inf &amp;&amp; dis[x][j] + len &lt; dis[v][(j + len) % d])&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                dis[v][(j + len) % d] = dis[x][j] + len;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag &amp; !inq[v])&#123;</span><br><span class="line">                Q.push(v); inq[v] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cas;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; cas;</span><br><span class="line">    <span class="keyword">while</span> (cas--)&#123;</span><br><span class="line">        sum = d = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(fir, <span class="number">0</span>, <span class="keyword">sizeof</span>(fir));</span><br><span class="line">        <span class="built_in">memset</span>(nex, <span class="number">0</span>, <span class="keyword">sizeof</span>(nex));</span><br><span class="line">        <span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; T;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x, y, z;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">            add(x, y, z); add(y, x, z);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; d; j++) dis[i][j] = inf;</span><br><span class="line"></span><br><span class="line">        spfa();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dis[n - <span class="number">1</span>][T % d] &lt;= T) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Possible"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    <summary type="html">
    <![CDATA[<p>收录模拟赛中一些我不会做的或是我侥幸做出的题。。。<br>]]>
    
    </summary>
    
      <category term="NOIP2015" scheme="http://blog.fractal128.tk/tags/NOIP2015/"/>
    
      <category term="最短路" scheme="http://blog.fractal128.tk/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="面壁反省" scheme="http://blog.fractal128.tk/tags/%E9%9D%A2%E5%A3%81%E5%8F%8D%E7%9C%81/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="比赛" scheme="http://blog.fractal128.tk/categories/OI/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #58 (div.2)]]></title>
    <link href="http://blog.fractal128.tk/2015/10/03/bcRound58/"/>
    <id>http://blog.fractal128.tk/2015/10/03/bcRound58/</id>
    <published>2015-10-03T14:42:58.000Z</published>
    <updated>2015-10-03T16:33:43.000Z</updated>
    <content type="html"><![CDATA[<p>第一场BC，一如既往地蒻翻了。<br><a id="more"></a></p>
<h2 id="Problems">Problems</h2><h3 id="1001:Card_Game">1001:Card Game</h3><h4 id="Description">Description</h4><p>Soda and Beta are good friends. They are going to play a card game today. Soda has n cards with number a1,a2,…,an while Beta has n cards with number b1,b2,…,bn.</p>
<p>First, they choose a number m no larger than n. Then they both randomly select m cards from their own n cards. The one with larger sum of the selected cards will win. Soda wants to know if he can always win no mater what cards will be randomly selected from him and Beta.</p>
<h4 id="Solution">Solution</h4><p>签到题。</p>
<h4 id="Code">Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">800</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,m,sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[j]) swap(a[i], a[j]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) sum += a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt;=n; j++)</span><br><span class="line">            <span class="keyword">if</span> (b[i] &lt; b[j]) swap(b[i], b[j]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) sum -= b[i];</span><br><span class="line">        <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"YES"</span>); <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1002:LCS">1002:LCS</h3><h4 id="Description-1">Description</h4><p>You are given two sequence {a1,a2,…,an} and {b1,b2,…,bn}. Both sequences are permutation of {1,2,…,n}. You are going to find another permutation {p1,p2,…,pn} such that the length of LCS (longest common subsequence) of {ap1,ap2,…,apn} and {bp1,bp2,…,bpn} is maximum.</p>
<h4 id="Solution-1">Solution</h4><p>应为对应的两个a,b是不能分开的，看成是置换的话，则我们可以找到置换中的一些环，并且，一个n个数的环最多可以组成n-1的LCS(n&gt;1)，时间复杂度Θ(n)</p>
<h4 id="Code-1">Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],p[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n,m,sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">            p[a[i]] = b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (vis[i] == <span class="number">0</span>)&#123;</span><br><span class="line">            vis[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> x = i;</span><br><span class="line">            <span class="keyword">if</span> (vis[p[x]] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">while</span> (!vis[p[x]])&#123;</span><br><span class="line">                x = p[x];</span><br><span class="line">                vis[x] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n - sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1003:Beauty_of_Sequence">1003:Beauty of Sequence</h3><h4 id="Description-2">Description</h4><p>Sequence is beautiful and the beauty of an integer sequence is defined as follows: removes all but the first element from every consecutive group of equivalent elements of the sequence (i.e. unique function in C++ STL) and the summation of rest integers is the beauty of the sequence.</p>
<p>Now you are given a sequence A of n integers {a1,a2,…,an}. You need find the summation of the beauty of all the sub-sequence of A. As the answer may be very large, print it modulo 10^9+7.</p>
<p>Note: In mathematics, a sub-sequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example {1,3,2} is a sub-sequence of {1,4,3,5,2,1}.</p>
<h4 id="Solution-2">Solution</h4><p>对与某个数a[i],构造它可以提供贡献的情况，有ans += a[i] + f(前面的数和它不相同) * 2^(n-i)，并且，对于前面的符合要求的计算，可以使用正难则反的思想，计算前面的数相同的情况。</p>
<h4 id="Code-2">Code</h4><p>ps.第一次用map这个神器。。。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn <span class="number">200000</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, ll&gt; f;</span><br><span class="line">ll b[maxn];</span><br><span class="line"><span class="keyword">int</span> x,T,n,m;</span><br><span class="line">ll sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000</span>; i++) b[i] = (b[i-<span class="number">1</span>] * <span class="number">2</span>) % MOD;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        f.clear();</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">            ll tmp = (b[i - <span class="number">1</span>] - f[x] + MOD) % MOD;</span><br><span class="line">            ans = (ans + <span class="number">1L</span>L * x * tmp % MOD * b[n - i]) % MOD;</span><br><span class="line">            f[x] = (f[x] + b[i - <span class="number">1</span>]) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans % MOD &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="1004:Inversion">1004:Inversion</h3><h4 id="Description-3">Description</h4><p>You have a sequence {a1,a2,…,an} and you can delete a contiguous subsequence of length m. So what is the minimum number of inversions after the deletion.</p>
<h4 id="Solution-3">Solution</h4><p>没来得及看。。。<br>但是看了题解觉得很有道理。<br>官方题解：令gi表示在i前面比ai大的数的个数,fi表示在i后面比ai小的数的个数, 这两个都可以用树状数组轻松求出来. 那么对于一个长度L的连续子序列, 删掉它之后逆序对减少的个数就是这段区间中gi的和 + 这段区间fi的和 - 这段区间的逆序对个数. 求区间逆序对个数只要用一个树状数组维护就好了, 每次只是删除最左端的一个数和加入最右端的一个数, 分别统计下贡献.</p>]]></content>
    <summary type="html">
    <![CDATA[<p>第一场BC，一如既往地蒻翻了。<br>]]>
    
    </summary>
    
      <category term="BestCoder" scheme="http://blog.fractal128.tk/tags/BestCoder/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="比赛" scheme="http://blog.fractal128.tk/categories/OI/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2142: 礼物]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj2142/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj2142/</id>
    <published>2015-10-02T15:51:28.000Z</published>
    <updated>2015-10-03T06:48:34.000Z</updated>
    <content type="html"><![CDATA[<p>一道综合型数论题。。。写的慢炸了，900MS＋<br><a id="more"></a><br>click <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2142" target="_blank" rel="external">here</a> to solve the problem</p>
<h2 id="Description">Description</h2><p>一年一度的圣诞节快要来到了。每年的圣诞节小E都会收到许多礼物，当然他也会送出许多礼物。不同的人物在小E心目中的重要性不同，在小E心中分量越重的人，收到的礼物会越多。小E从商店中购买了n件礼物，打算送给m个人，其中送给第i个人礼物数量为wi。请你帮忙计算出送礼物的方案数（两个方案被认为是不同的，当且仅当存在某个人在这两种方案中收到的礼物不同）。由于方案数可能会很大，你只需要输出模P后的结果。</p>
<h2 id="Solution">Solution</h2><p>列一下组合数的式子并上下约分可以得到答案为<br>$$ {n!}\over{w_{1}!*w_{2}!…w_{m}!*(n-w_{1}-w_{2}…-w_{m})!}$$</p>
<p>首先我们考虑P为质数时的情况，可得n!在[1,P-1]后是循环的，便可以先算出1~P-1时阶乘模P的值之后约去P的倍数，递归求解即可。</p>
<p>对于P为合数的情况，将P分解，将在模pi^ci的答案使用中国剩余定理进行合并即可。<br>具体题解可参看<a href="http://wenku.baidu.com/view/98ac0f93bb68a98271fefaef" target="_blank" rel="external">魏源的国家队训练报告</a></p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll n,P,m,cnt,ans=<span class="number">0</span>,tot=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">ll fac[<span class="number">100010</span>],invfac[<span class="number">100010</span>];</span><br><span class="line">ll a[<span class="number">10</span>],q[<span class="number">10</span>],M[<span class="number">10</span>];</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mul</span><span class="params">(ll a, ll b, ll p)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>) ret = (ret + a) % p;</span><br><span class="line">        a = (a + a) % p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a, ll b, ll p)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>) ret = mul(ret, a, p);</span><br><span class="line">        a = mul(a, a, p);</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;d, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>)&#123;</span><br><span class="line">        x = <span class="number">1</span>; y = <span class="number">0</span>; d = a;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        exgcd(b, a % b, d, y, x); y -= x*(a/b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">get_inv</span><span class="params">(ll a, ll p)</span></span>&#123;</span><br><span class="line">    ll ret,y,d;</span><br><span class="line">    exgcd(a, p, d, ret, y);</span><br><span class="line">    <span class="keyword">return</span> (ret + p) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(ll x, ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; p_i) <span class="keyword">return</span> fac[x];</span><br><span class="line">    ll seg = x / p; ll res = x % p;</span><br><span class="line">    ll ret = mul(<span class="built_in">pow</span>(fac[p - <span class="number">1</span>], seg, p), fac[res], p);</span><br><span class="line">    cnt += x / p_i;</span><br><span class="line">    <span class="keyword">return</span> mul(ret, calc(x / p_i, p_i, p), p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">invcalc</span><span class="params">(ll x, ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; p_i) <span class="keyword">return</span> invfac[x];</span><br><span class="line">    ll seg = x / p; ll res = x % p;</span><br><span class="line">    ll ret = mul(<span class="built_in">pow</span>(invfac[p - <span class="number">1</span>], seg, p), invfac[res], p);</span><br><span class="line">    cnt -= x / p_i;</span><br><span class="line">    <span class="keyword">return</span> mul(ret, invcalc(x / p_i, p_i, p), p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">sol</span><span class="params">(ll p_i, ll p)</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p; i++)&#123;</span><br><span class="line">        fac[i] = fac[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i % p_i != <span class="number">0</span>) fac[i] = mul(fac[i], i, p);</span><br><span class="line">    &#125;</span><br><span class="line">    invfac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p; i++)&#123;</span><br><span class="line">        invfac[i] = invfac[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i % p_i != <span class="number">0</span>) invfac[i] = mul(invfac[i], get_inv(i, p), p);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ret = calc(n, p_i, p);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        ret = mul(ret, invcalc(a[i], p_i, p), p);</span><br><span class="line">    &#125;</span><br><span class="line">    ret = mul(ret, invcalc(n - sum, p_i, p), p);</span><br><span class="line">    ret = mul(ret, <span class="built_in">pow</span>(p_i, cnt, p), p);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">CRT</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; i++)&#123;</span><br><span class="line">        ll e = P / M[i];</span><br><span class="line">        ans = (ans + <span class="function">e * <span class="title">get_inv</span><span class="params">(e, M[i])</span> * q[i]) % P</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    P = read(); n = read(); m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">        a[i] = read();</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &gt; n)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Impossible"</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll tmp = P;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(P); i++)</span><br><span class="line">    <span class="keyword">if</span> (tmp % i==<span class="number">0</span>)&#123;</span><br><span class="line">        ll p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (tmp % i==<span class="number">0</span>)&#123;</span><br><span class="line">            tmp /= i;</span><br><span class="line">            p *= i;</span><br><span class="line">        &#125;</span><br><span class="line">        q[++tot] = sol(i, p);</span><br><span class="line">        M[tot] = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tmp &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        q[++tot] = sol(tmp, tmp);</span><br><span class="line">        M[tot] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>, CRT());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Music">Music</h2><p>口琴部分很好听。。。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=22782025&auto=1&height=66"></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>一道综合型数论题。。。写的慢炸了，900MS＋<br>]]>
    
    </summary>
    
      <category term="中国剩余定理" scheme="http://blog.fractal128.tk/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
      <category term="乘法逆元" scheme="http://blog.fractal128.tk/tags/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ2705: [SDOI2012]Longge的问题]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj2705/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj2705/</id>
    <published>2015-10-02T05:42:49.000Z</published>
    <updated>2015-10-02T06:05:28.000Z</updated>
    <content type="html"><![CDATA[<p>最近都只是做一些简单数论慢慢巩固吧。<br>昨晚上装<a href="http://www.apple.com/osx/" target="_blank" rel="external">OS X El Capitan</a>了，没好好看介绍也不知道升级了些什么，窘。<br><a id="more"></a><br>link:<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2705" target="_blank" rel="external">BZOJ2705: [SDOI2012]Longge的问题</a><br>另：bzoj上AC50题留念。</p>
<h2 id="Description">Description</h2><p>Longge的数学成绩非常好，并且他非常乐于挑战高难度的数学问题。现在问题来了：给定一个整数N，你需要求出∑gcd(i, N)(1&lt;=i &lt;=N)。</p>
<h2 id="Solution">Solution</h2><p>O(√n)欧拉函数<br>$$ ans=\sum^{d=1}_{d&lt;=n\&amp;d|n}φ(d)*{n\over{d}}$$</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf <span class="number">100001</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll x=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll t=x,ret=x;</span><br><span class="line">    <span class="keyword">for</span> (ll i=<span class="number">2</span>; i*i&lt;=x; i++)</span><br><span class="line">    <span class="keyword">if</span> (t % i==<span class="number">0</span>)&#123;</span><br><span class="line">        ret=ret/i*(i-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (t % i==<span class="number">0</span>) t/=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t&gt;<span class="number">1</span>) ret=ret/t*(t-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">2</span>; i*i&lt;=n; i++)</span><br><span class="line">    <span class="keyword">if</span> (n % i == <span class="number">0</span>)&#123;</span><br><span class="line">            ans += <span class="function">i * <span class="title">phi</span><span class="params">(n/i)</span></span>;</span><br><span class="line">            <span class="keyword">if</span> (i*i&lt;n) ans += (ll)(n/i) * phi(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans+phi(n)+n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>最近都只是做一些简单数论慢慢巩固吧。<br>昨晚上装<a href="http://www.apple.com/osx/">OS X El Capitan</a>了，没好好看介绍也不知道升级了些什么，窘。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="SDOI" scheme="http://blog.fractal128.tk/tags/SDOI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BZOJ3098: Hash Killer II]]></title>
    <link href="http://blog.fractal128.tk/2015/10/02/bzoj3098/"/>
    <id>http://blog.fractal128.tk/2015/10/02/bzoj3098/</id>
    <published>2015-10-01T18:01:17.000Z</published>
    <updated>2015-10-04T16:22:50.000Z</updated>
    <content type="html"><![CDATA[<p>神奇的题目，膜膜膜。<br>一道高手一看就会，而我看了题解也没什么想法的题。<br><a id="more"></a><br><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3098" target="_blank" rel="external">戳出</a>链接</p>
<h2 id="Description">Description</h2><p>这天天气不错，hzhwcmhf神犇给VFleaKing出了一道题：<br>给你一个长度为N的字符串S，求有多少个不同的长度为L的子串。<br>子串的定义是S[l]、S[l + 1]、… S[r]这样连续的一段。<br>两个字符串被认为是不同的当且仅当某个位置上的字符不同。</p>
<p>VFleaKing一看觉得这不是Hash的裸题么！于是果断写了哈希 + 排序。<br>而hzhwcmhf神犇心里自然知道，这题就是后缀数组的height中 &lt; L的个数 + 1，就是后缀自动机上代表的长度区间包含L的结点个数，就是后缀树深度为L的结点的数量。<br>但是hzhwcmhf神犇看了看VFleaKing的做法表示非常汗。于是想卡掉他。</p>
<p>VFleaKing使用的是字典序哈希，其代码大致如下：<br>u64 val = 0;<br>for (int i = 0; i &lt; l; i++)<br> val = (val * base + s[i] - ‘a’) % Mod;<br>u64是无符号int64，范围是[0, 2^64)。<br>base是一个常量，VFleaKing会根据心情决定其值。<br>Mod等于1000000007。<br>VFleaKing还求出来了base ^ l % Mod，即base的l次方除以Mod的余数，这样就能方便地求出所有长度为L的子串的哈希值。<br>然后VFleaKing给哈希值排序，去重，求出有多少个不同的哈希值，把这个数作为结果。<br>其算法的C++代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> u64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxN = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">hash_handle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s, <span class="keyword">const</span> <span class="keyword">int</span> &amp;n, <span class="keyword">const</span> <span class="keyword">int</span> &amp;l, <span class="keyword">const</span> <span class="keyword">int</span> &amp;base)</span></span><br><span class="line"></span>&#123;</span><br><span class="line"> <span class="keyword">const</span> <span class="keyword">int</span> Mod = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"> u64 hash_pow_l = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= l; i++)</span><br><span class="line">  hash_pow_l = (hash_pow_l * base) % Mod;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> li_n = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">int</span> li[MaxN];</span><br><span class="line"></span><br><span class="line"> u64 val = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">  val = (val * base + s[i] - <span class="string">'a'</span>) % Mod;</span><br><span class="line"> li[li_n++] = val;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; n; i++)</span><br><span class="line"> &#123;</span><br><span class="line">  val = (val * base + s[i] - <span class="string">'a'</span>) % Mod;</span><br><span class="line">  val = (val + Mod - ((s[i - l] - <span class="string">'a'</span>) * hash_pow_l) % Mod) % Mod;</span><br><span class="line">  li[li_n++] = val;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> sort(li, li + li_n);</span><br><span class="line"> li_n = unique(li, li + li_n) - li;</span><br><span class="line"> <span class="keyword">return</span> li_n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>hzhwcmhf当然知道怎么卡啦！但是他想考考你。</p>
<h2 id="Solution">Solution</h2><p>看了很久才稍微有点明白。<br>把每一次计算hash当成是随机数，然后就可以使用生日悖论的性质（在pollard-rho中也是这个性质），所以大概就是把n取到100000，然后乱搞就行了。<br>注意l要稍微去大一点，不然的话算出的hash值就不是那么随机了。。。</p>
<h2 id="Code">Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">100000</span>,l=<span class="number">30</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">' '</span>&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(rand()%<span class="number">26</span>+<span class="string">'a'</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>神奇的题目，膜膜膜。<br>一道高手一看就会，而我看了题解也没什么想法的题。<br>]]>
    
    </summary>
    
      <category term="BZOJ" scheme="http://blog.fractal128.tk/tags/BZOJ/"/>
    
      <category term="OI" scheme="http://blog.fractal128.tk/categories/OI/"/>
    
      <category term="数论" scheme="http://blog.fractal128.tk/categories/OI/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
</feed>
